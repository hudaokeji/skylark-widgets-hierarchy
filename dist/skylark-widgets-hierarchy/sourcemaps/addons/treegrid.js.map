{"version":3,"sources":["addons/treegrid.js"],"names":["define","exports","module","__isValidToReturn","obj","Array","isArray","attr","__isEmptyObject","langx","browser","eventer","noder","geom","$","menu","jstree","BLANKRE","IDREGEX","styled","generateCellId","tree","id","replace","escapeId","getIds","nodes","makeArray","map","this","findDataCell","uniq","ids","col","scope","undefined","length","cellId","ret","columns","concat","join","forEach","elm","i","find","isClickedSep","toResize","oldMouseX","newMouseX","htmlstripre","copyData","fromtree","from","totree","to","recurse","j","data","extend","children_d","get_node","findLastClosedNode","node","children","state","opened","getCellData","value","defaults","grid","width","plugins","options","parent","_guid","s4","Math","floor","random","toString","substring","_initialize","_initialized","s","settings","container","element","gs","_gridSettings","treeClass","context","contextmenu","columnWidth","defaultConf","*display","*+display","isThemeroller","_data","themeroller","treeWidthDiff","resizable","draggable","stateful","indent","sortOrder","sortAsc","caseInsensitive","fixedHeader","height","gridcontextmenu","treecol","gridcols","cols","columnSearch","val","t","target","edit","label","action","_edit","len","push","ceil","rootid","test","navigator","userAgent","toLowerCase","parseFloat","appVersion","split","display","zoom","appendTo","gridWrapper","addClass","insertAfter","midWrapper","append","scroll","css","scrollTop","defaultSort","proxy","sort","a","b","bigger","colrefs","caseInsensitiveSort","get_text","localeCompare","nodeA","nodeB","valueA","valueB","ui","sortable","axis","handle","cancel","start","event","item","index","stop","splice","console","warn","searchColumn","searchObj","validatedSearchObj","columnIndex","hasOwnProperty","Object","keys","search","column","search_callback","str","columnValue","vakata","caseSensitive","searchSettings","case_sensitive","fuzzy","isMatch","omniSearchCallback","f","matched","text","searchValue","trigger","init","el","call","bind","on","e","_detachColumns","_prepare_grid","_reattachColumns","removeNodes","remove","_hideOrShowTree","_hide_grid","_prepare_headers","q","anchorHeight","outerHeight","cls","match","new_instance","each","selected","_hover_node","removeClass","nodesToShow","endTime","that","startTime","Date","getTime","filter","holdingCells","cells","som","smc","add","parentsUntil","hide","_domManipulation","show","time","newtree","oldtree","old_instance","original","rslt","nextAll","localStorage","teardown","gw","gridparent","detach","_clean_grid","cl","ccl","name","last","coluuid","_this","defaultWidth","tr","classAdd","hasHeaders","conf","headerClass","columnClass","header","String","minWidth","maxWidth","html","core","themes","ellipsis","prependTo","outerWidth","next","bound","document","mouseup","ref","currentTree","colNum","prevAll","closest","reference","isNaN","mousemove","oldPrevHeaderInner","oldPrevColWidth","newPrevColWidth","diff","pageX","innerWidth","max","newWidth","stopPropagation","symbol","rootNode","redraw_node","mw","parentNode","removeChild","appendChild","open_node","callback","animation","deep","is_callback","force_render","refresh","apply","arguments","set_id","old","result","oldNodes","_hideOrShowNode","child","lenj","getHoldingCells","hc","hidden","prop","rtl","w","h1","position","top","left","visibility","h2","class","padding","border","box-sizing","li_height","lineHeight","blur","v","keydown","key","which","stopImmediatePropagation","preventDefault","click","mousedown","keyup","min","keypress","fn","fontFamily","fontSize","fontWeight","fontStyle","fontStretch","fontVariant","letterSpacing","wordSpacing","select","grid_hide_column","grid_show_column","img","wcl","valClass","wideValClass","span","paddingleft","title","gridCellName","gridCellParentId","gridCellParent","gridCellPrev","gridCellPrevId","gridCellNext","gridCellNextId","gridCellChild","gridCellChildId","content","highlightSearch","isClicked","c","objData","cellClickHandler","create","sourceName","isDefaultPrevented","cellRightClickHandler","popup","x","y","pageY","hoverInHandler","jsTreeInstance","hover_node","hoverOutHandler","dehover_node","lid","peers","pos","inArray","rendered","hasClass","renderATitle","cellClass","wideCellClass","format","images","substr","valueClass","valueClassPrefix","wideValueClass","wideValueClassPrefix","insertBefore","toRen","after","hover","overflow-y"],"mappings":"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","file":"../../addons/treegrid.js","sourcesContent":["define([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    define([\n        'skylark-langx/langx',\n        'skylark-domx-browser',\n        'skylark-domx-eventer',\n        'skylark-domx-noder',\n        'skylark-domx-geom',\n        'skylark-domx-query',\n        './menu',\n        'Hierarchy'\n    ], function (langx, browser, eventer, noder, geom, $, menu, jstree) {\n        var BLANKRE = /^\\s*$/g, IDREGEX = /[\\\\:&!^|()\\[\\]<>@*'+~#\";,= \\/${}%]/g, escapeId = function (id) {\n                return (id || '').replace(IDREGEX, '\\\\$&');\n            }, NODE_DATA_ATTR = 'data-jstreegrid', COL_DATA_ATTR = 'data-jstreegrid-column', SEARCHCLASS = 'jstree-search', SPECIAL_TITLE = '_DATA_', LEVELINDENT = 24, styled = false, MINCOLWIDTH = 10, generateCellId = function (tree, id) {\n                return 'jstree_' + tree + '_grid_' + escapeId(id) + '_col';\n            }, getIds = function (nodes) {\n                return $.makeArray(nodes.map(function () {\n                    return this.id;\n                }));\n            }, findDataCell = function (uniq, ids, col, scope) {\n                if (scope == undefined) {\n                    scope = $();\n                }\n                ;\n                if (ids === null || ids === undefined || ids.length === 0) {\n                    return scope;\n                }\n                var ret = $(), columns = [].concat(col), cellId;\n                if (typeof ids === 'string') {\n                    cellId = generateCellId(uniq, ids);\n                    ret = columns.map(function (col) {\n                        return '#' + cellId + col;\n                    }).join(', ');\n                } else {\n                    ret = [];\n                    ids.forEach(function (elm, i) {\n                        var cellId = generateCellId(uniq, elm);\n                        ret = ret.concat(columns.map(function (col) {\n                            return '#' + cellId + col;\n                        }));\n                    });\n                    ret = ret.join(', ');\n                }\n                return columns.length == 1 ? scope.find(ret) : $(ret);\n            }, isClickedSep = false, toResize = null, oldMouseX = 0, newMouseX = 0, htmlstripre = /<\\/?[^>]+>/gi, getIndent = function (node, tree) {\n                var div, i, li, width;\n                tree._gridSettings = tree._gridSettings || {};\n                if (tree._gridSettings.indent > 0) {\n                    width = tree._gridSettings.indent;\n                } else {\n                    div = $('<div></div>');\n                    i = node.prev('i');\n                    li = i.parent();\n                    div.addClass(tree.get_node('#', true).attr('class'));\n                    li.appendTo(div);\n                    div.appendTo($('body'));\n                    width = i.width() || LEVELINDENT;\n                    li.detach();\n                    div.remove();\n                    tree._gridSettings.indent = width;\n                }\n                return width;\n            }, copyData = function (fromtree, from, totree, to, recurse) {\n                var i, j;\n                to.data = $.extend(true, {}, from.data);\n                if (from && from.children_d && recurse) {\n                    for (i = 0, j = from.children_d.length; i < j; i++) {\n                        copyData(fromtree, fromtree.get_node(from.children_d[i]), totree, totree.get_node(to.children_d[i]), recurse);\n                    }\n                }\n            }, findLastClosedNode = function (tree, id) {\n                var ret, node = tree.get_node(id), children = node.children;\n                if (!children || children.length <= 0 || !node.state.opened) {\n                    ret = id;\n                } else {\n                    ret = findLastClosedNode(tree, children[children.length - 1]);\n                }\n                return ret;\n            }, renderAWidth = function (node, tree) {\n                var depth, width, fullWidth = parseInt(tree.settings.grid.columns[0].width, 10) + parseInt(tree._gridSettings.treeWidthDiff, 10);\n                depth = tree.get_node(node).parents.length;\n                width = fullWidth - depth * getIndent(node, tree);\n                return fullWidth;\n            }, renderATitle = function (node, t, tree) {\n                var a = node.hasClass('jstree-anchor') ? node : node.children(\"[class~='jstree-anchor']\"), title, col = tree.settings.grid.columns[0];\n                title = '';\n                if (col.title) {\n                    if (col.title === SPECIAL_TITLE) {\n                        title = tree.get_text(t);\n                    } else if (t.attr(col.title)) {\n                        title = t.attr(col.title);\n                    }\n                }\n                title = title.replace(htmlstripre, '');\n                if (title) {\n                    a.attr('title', title);\n                }\n            }, getCellData = function (value, data) {\n                var val;\n                if (value !== undefined && value !== null) {\n                    if (typeof value === 'function') {\n                        val = value(data);\n                    } else if (data.data !== null && data.data !== undefined && data.data[value] !== undefined) {\n                        val = data.data[value];\n                    } else {\n                        val = '';\n                    }\n                } else {\n                    val = '';\n                }\n                return val;\n            };\n        $.jstree.defaults.grid = { width: 'auto' };\n        $.jstree.plugins.grid = function (options, parent) {\n            this._initialize = function () {\n                if (!this._initialized) {\n                    var s = this.settings.grid || {}, styles, container = this.element, i, gs = this._gridSettings = {\n                            columns: s.columns || [],\n                            treeClass: 'jstree-grid-col-0',\n                            context: s.contextmenu || false,\n                            columnWidth: s.columnWidth,\n                            defaultConf: {\n                                '*display': 'inline',\n                                '*+display': 'inline'\n                            },\n                            isThemeroller: !!this._data.themeroller,\n                            treeWidthDiff: 0,\n                            resizable: s.resizable,\n                            draggable: s.draggable,\n                            stateful: s.stateful,\n                            indent: 0,\n                            sortOrder: 'text',\n                            sortAsc: true,\n                            caseInsensitive: s.caseInsensitive,\n                            fixedHeader: s.fixedHeader !== false,\n                            width: s.width,\n                            height: s.height,\n                            gridcontextmenu: s.gridcontextmenu,\n                            treecol: 0,\n                            gridcols: []\n                        }, cols = gs.columns, treecol = 0, columnSearch = false;\n                    if (gs.gridcontextmenu === true) {\n                        gs.gridcontextmenu = function (grid, tree, node, val, col, t, target) {\n                            return {\n                                'edit': {\n                                    label: 'Edit',\n                                    'action': function (data) {\n                                        var obj = t.get_node(node);\n                                        grid._edit(obj, col, target);\n                                    }\n                                }\n                            };\n                        };\n                    } else if (gs.gridcontextmenu === false) {\n                        gs.gridcontextmenu = false;\n                    }\n                    for (var i = 0, len = s.columns.length; i < len; i++) {\n                        if (s.columns[i].tree) {\n                            treecol = i;\n                            gs.treecol = treecol;\n                        } else {\n                            gs.gridcols.push(i);\n                        }\n                    }\n                    this.uniq = Math.ceil(Math.random() * 1000);\n                    this.rootid = container.attr('id');\n                    var msie = /msie/.test(navigator.userAgent.toLowerCase());\n                    if (msie) {\n                        var version = parseFloat(navigator.appVersion.split('MSIE')[1]);\n                        if (version < 8) {\n                            gs.defaultConf.display = 'inline';\n                            gs.defaultConf.zoom = '1';\n                        }\n                    }\n                    if (!styled) {\n                        styled = true;\n                        styles = [\n                            '.jstree-grid-cell {vertical-align: top; overflow:hidden;margin-left:0;position:relative;width: 100%;padding-left:7px;white-space: nowrap;}',\n                            '.jstree-grid-cell span {margin-right:0px;margin-right:0px;*display:inline;*+display:inline;white-space: nowrap;}',\n                            '.jstree-grid-separator {position:absolute; top:0; right:0; height:24px; margin-left: -2px; border-width: 0 2px 0 0; *display:inline; *+display:inline; margin-right:0px;width:0px;}',\n                            '.jstree-grid-header-cell {overflow: hidden; white-space: nowrap;padding: 1px 3px 2px 5px; cursor: default;}',\n                            '.jstree-grid-header-themeroller {border: 0; padding: 1px 3px;}',\n                            '.jstree-grid-header-regular {position:relative; background-color: #EBF3FD; z-index: 1;}',\n                            '.jstree-grid-hidden {display: none;}',\n                            '.jstree-grid-resizable-separator {cursor: col-resize; width: 2px;}',\n                            '.jstree-grid-separator-regular {border-color: #d0d0d0; border-style: solid;}',\n                            '.jstree-grid-cell-themeroller {border: none !important; background: transparent !important;}',\n                            '.jstree-grid-wrapper {table-layout: fixed; width: 100%; overflow: auto; position: relative;}',\n                            '.jstree-grid-midwrapper {display: table-row;}',\n                            '.jstree-grid-width-auto {width:auto;display:block;}',\n                            '.jstree-grid-column {display: table-cell; overflow: hidden;}',\n                            '.jstree-grid-ellipsis {text-overflow: ellipsis;}',\n                            '.jstree-grid-col-0 {width: 100%;}'\n                        ];\n                        $('<style type=\"text/css\">' + styles.join('\\n') + '</style>').appendTo('head');\n                    }\n                    this.gridWrapper = $('<div></div>').addClass('jstree-grid-wrapper').insertAfter(container);\n                    this.midWrapper = $('<div></div>').addClass('jstree-grid-midwrapper').appendTo(this.gridWrapper);\n                    if (s.width) {\n                        this.gridWrapper.width(s.width);\n                    }\n                    if (s.height) {\n                        this.gridWrapper.height(s.height);\n                    }\n                    for (var i = 0, len = cols.length; i < len; i++) {\n                        $('<div></div>').addClass('jstree-default jstree-grid-column jstree-grid-column-' + i + ' jstree-grid-column-root-' + this.rootid).appendTo(this.midWrapper);\n                    }\n                    this.midWrapper.children('div:eq(' + treecol + ')').append(container);\n                    container.addClass('jstree-grid-cell');\n                    if (gs.fixedHeader) {\n                        this.gridWrapper.scroll(function () {\n                            $(this).find('.jstree-grid-header').css('top', $(this).scrollTop());\n                        });\n                    }\n                    var defaultSort = $.proxy(this.settings.sort, this);\n                    this.settings.sort = function (a, b) {\n                        var bigger, colrefs = this.colrefs;\n                        if (gs.sortOrder === 'text') {\n                            var caseInsensitiveSort = this.get_text(a).toLowerCase().localeCompare(this.get_text(b).toLowerCase());\n                            bigger = gs.caseInsensitive ? caseInsensitiveSort === 1 : defaultSort(a, b) === 1;\n                        } else {\n                            var nodeA = this.get_node(a), nodeB = this.get_node(b), value = colrefs[gs.sortOrder].value, valueA = typeof value === 'function' ? value(nodeA) : nodeA.data[value], valueB = typeof value === 'function' ? value(nodeB) : nodeB.data[value];\n                            if (typeof valueA && typeof valueB !== 'undefined') {\n                                bigger = gs.caseInsensitive ? valueA.toLowerCase() > valueB.toLowerCase() : valueA > valueB;\n                            }\n                        }\n                        if (!gs.sortAsc)\n                            bigger = !bigger;\n                        return bigger ? 1 : -1;\n                    };\n                    if (gs.draggable) {\n                        if (!$.ui || !$.ui.sortable) {\n                            console.warn('[jstree-grid] draggable option requires jQuery UI');\n                        } else {\n                            var from, to;\n                            $(this.midWrapper).sortable({\n                                axis: 'x',\n                                handle: '.jstree-grid-header',\n                                cancel: '.jstree-grid-separator',\n                                start: function (event, ui) {\n                                    from = ui.item.index();\n                                },\n                                stop: function (event, ui) {\n                                    to = ui.item.index();\n                                    gs.columns.splice(to, 0, gs.columns.splice(from, 1)[0]);\n                                }\n                            });\n                        }\n                    }\n                    this.searchColumn = function (searchObj) {\n                        var validatedSearchObj = {};\n                        if (typeof searchObj == 'object') {\n                            for (var columnIndex in searchObj) {\n                                if (searchObj.hasOwnProperty(columnIndex)) {\n                                    if (columnIndex % 1 === 0 && columnIndex < cols.length && columnIndex >= 0) {\n                                        validatedSearchObj[columnIndex] = searchObj[columnIndex];\n                                    }\n                                }\n                            }\n                        }\n                        columnSearch = validatedSearchObj;\n                        if (Object.keys(validatedSearchObj).length !== 0) {\n                            this.search('someValue');\n                        } else {\n                            this.search('');\n                        }\n                        columnSearch = false;\n                    };\n                    for (var i = 0, len = cols.length; i < len; i++) {\n                        var column = cols[i];\n                        if (typeof column.search_callback !== 'function') {\n                            column.search_callback = function (str, columnValue, node, column) {\n                                var f = new $.vakata.search(str, true, {\n                                    caseSensitive: searchSettings.case_sensitive,\n                                    fuzzy: searchSettings.fuzzy\n                                });\n                                return f.search(columnValue).isMatch;\n                            };\n                        }\n                    }\n                    var searchSettings = this.settings.search;\n                    var omniSearchCallback = searchSettings.search_callback;\n                    if (!omniSearchCallback) {\n                        omniSearchCallback = function (str, node) {\n                            var i, f = new $.vakata.search(str, true, {\n                                    caseSensitive: searchSettings.case_sensitive,\n                                    fuzzy: searchSettings.fuzzy\n                                }), matched = f.search(node.text).isMatch, col;\n                            if (!matched) {\n                                for (var i = 0, len = cols.length; i < len; i++) {\n                                    if (treecol === i) {\n                                        continue;\n                                    }\n                                    col = cols[i];\n                                    matched = f.search(getCellData(col.value, node)).isMatch;\n                                    if (matched) {\n                                        break;\n                                    }\n                                }\n                            }\n                            return matched;\n                        };\n                    }\n                    searchSettings.search_callback = function (str, node) {\n                        var matched = false;\n                        if (columnSearch) {\n                            for (var columnIndex in columnSearch) {\n                                if (columnSearch.hasOwnProperty(columnIndex)) {\n                                    var searchValue = columnSearch[columnIndex];\n                                    if (searchValue == '') {\n                                        continue;\n                                    }\n                                    var col = cols[columnIndex];\n                                    if (treecol == columnIndex) {\n                                        matched = col.search_callback(searchValue, node.text, node, col);\n                                    } else {\n                                        matched = col.search_callback(searchValue, getCellData(col.value, node), node, col);\n                                    }\n                                    if (!matched) {\n                                        break;\n                                    }\n                                }\n                            }\n                            container.trigger('columnSearch_grid.jstree');\n                        } else {\n                            matched = omniSearchCallback(str, node);\n                            container.trigger('omniSearch_grid.jstree');\n                        }\n                        return matched;\n                    };\n                    this._initialized = true;\n                }\n            };\n            this.init = function (el, options) {\n                parent.init.call(this, el, options);\n                this._initialize();\n            };\n            this.bind = function () {\n                parent.bind.call(this);\n                this._initialize();\n                this.element.on('move_node.jstree create_node.jstree clean_node.jstree change_node.jstree', $.proxy(function (e, data) {\n                    var target = this.get_node(data || '#', true);\n                    var id = _guid();\n                    this._detachColumns(id);\n                    this._prepare_grid(target);\n                    this._reattachColumns(id);\n                }, this)).on('delete_node.jstree', $.proxy(function (e, data) {\n                    if (data.node.id !== undefined) {\n                        var grid = this.gridWrapper, removeNodes = [data.node.id], i;\n                        if (data.node && data.node.children_d) {\n                            removeNodes = removeNodes.concat(data.node.children_d);\n                        }\n                        findDataCell(this.uniq, removeNodes, this._gridSettings.gridcols).remove();\n                    }\n                }, this)).on('show_node.jstree', $.proxy(function (e, data) {\n                    this._hideOrShowTree(data.node, false);\n                }, this)).on('hide_node.jstree', $.proxy(function (e, data) {\n                    this._hideOrShowTree(data.node, true);\n                }, this)).on('close_node.jstree', $.proxy(function (e, data) {\n                    this._hide_grid(data.node);\n                }, this)).on('open_node.jstree', $.proxy(function (e, data) {\n                }, this)).on('load_node.jstree', $.proxy(function (e, data) {\n                }, this)).on('loaded.jstree', $.proxy(function (e) {\n                    this._prepare_headers();\n                    this.element.trigger('loaded_grid.jstree');\n                }, this)).on('ready.jstree', $.proxy(function (e, data) {\n                    var anchorHeight = this.element.find(\"[class~='jstree-anchor']:first\").outerHeight(), q, cls = this.element.attr('class') || '';\n                    $('<style type=\"text/css\">div.jstree-grid-cell-root-' + this.rootid + ' {line-height: ' + anchorHeight + 'px; height: ' + anchorHeight + 'px;}</style>').appendTo('head');\n                    q = cls.split(/\\s+/).map(function (i) {\n                        var match = i.match(/^jstree(-|$)/);\n                        return match ? '' : i;\n                    });\n                    this.gridWrapper.addClass(q.join(' '));\n                }, this)).on('move_node.jstree', $.proxy(function (e, data) {\n                    var node = data.new_instance.element;\n                    node.find('li > a').each($.proxy(function (i, elm) {\n                    }, this));\n                }, this)).on('hover_node.jstree', $.proxy(function (node, selected, event) {\n                    var id = selected.node.id;\n                    if (this._hover_node !== null && this._hover_node !== undefined) {\n                        findDataCell(this.uniq, this._hover_node, this._gridSettings.gridcols).removeClass('jstree-hovered');\n                    }\n                    this._hover_node = id;\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).addClass('jstree-hovered');\n                }, this)).on('dehover_node.jstree', $.proxy(function (node, selected, event) {\n                    var id = selected.node.id;\n                    this._hover_node = null;\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).removeClass('jstree-hovered');\n                }, this)).on('select_node.jstree', $.proxy(function (node, selected, event) {\n                    var id = selected.node.id;\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).addClass('jstree-clicked');\n                    this.get_node(selected.node.id, true).children('div.jstree-grid-cell').addClass('jstree-clicked');\n                }, this)).on('deselect_node.jstree', $.proxy(function (node, selected, event) {\n                    var id = selected.node.id;\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).removeClass('jstree-clicked');\n                }, this)).on('deselect_all.jstree', $.proxy(function (node, selected, event) {\n                    var ids = selected.node || [], i;\n                    findDataCell(this.uniq, ids, this._gridSettings.gridcols).removeClass('jstree-clicked');\n                }, this)).on('search.jstree', $.proxy(function (e, data) {\n                    var grid = this.gridWrapper, that = this, nodesToShow, startTime = new Date().getTime(), ids = getIds(data.nodes.filter('.jstree-node')), endTime;\n                    this.holdingCells = {};\n                    if (data.nodes.length) {\n                        var id = _guid();\n                        var cells = grid.find('div.jstree-grid-cell-regular');\n                        this._detachColumns(id);\n                        if (this._data.search.som) {\n                            if (this._data.search.smc) {\n                                nodesToShow = data.nodes.add(data.nodes.find('.jstree-node'));\n                            }\n                            nodesToShow = (nodesToShow || data.nodes).add(data.nodes.parentsUntil('.jstree'));\n                            cells.hide();\n                            nodesToShow.filter('.jstree-node').each(function (i, node) {\n                                var id = node.id;\n                                if (id) {\n                                    that._prepare_grid(node);\n                                    for (var i = 0, len = that._gridSettings.gridcols.length; i < len; i++) {\n                                        if (i === that._gridSettings.treecol) {\n                                            continue;\n                                        }\n                                        findDataCell(that.uniq, id, that._gridSettings.gridcols[i], $(that._domManipulation.columns[i])).show();\n                                    }\n                                }\n                            });\n                        }\n                        for (var i = 0, len = this._gridSettings.gridcols.length; i < len; i++) {\n                            if (i === this._gridSettings.treecol) {\n                                continue;\n                            }\n                            findDataCell(that.uniq, ids, this._gridSettings.gridcols[i], $(this._domManipulation.columns[i])).addClass(SEARCHCLASS);\n                        }\n                        this._reattachColumns(id);\n                        endTime = new Date().getTime();\n                        this.element.trigger('search-complete.jstree-grid', [{ time: endTime - startTime }]);\n                    }\n                    return true;\n                }, this)).on('clear_search.jstree', $.proxy(function (e, data) {\n                    var grid = this.gridWrapper, ids = getIds(data.nodes.filter('.jstree-node'));\n                    grid.find('div.jstree-grid-cell').show();\n                    findDataCell(this.uniq, ids, this._gridSettings.gridcols).removeClass(SEARCHCLASS);\n                    return true;\n                }, this)).on('copy_node.jstree', function (e, data) {\n                    var newtree = data.new_instance, oldtree = data.old_instance, obj = newtree.get_node(data.node, true);\n                    copyData(oldtree, data.original, newtree, data.node, true);\n                    newtree._detachColumns(obj.id);\n                    newtree._prepare_grid(obj);\n                    newtree._reattachColumns(obj.id);\n                    return true;\n                }).on('show_ellipsis.jstree', $.proxy(function (e, data) {\n                    this.gridWrapper.find('.jstree-grid-cell').add('.jstree-grid-header', this.gridWrapper).addClass('jstree-grid-ellipsis');\n                    return true;\n                }, this)).on('hide_ellipsis.jstree', $.proxy(function (e, data) {\n                    this.gridWrapper.find('.jstree-grid-cell').add('.jstree-grid-header', this.gridWrapper).removeClass('jstree-grid-ellipsis');\n                    return true;\n                }, this));\n                if (this._gridSettings.isThemeroller) {\n                    this.element.on('select_node.jstree', $.proxy(function (e, data) {\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll('div').addClass('ui-state-active');\n                    }, this)).on('deselect_node.jstree deselect_all.jstree', $.proxy(function (e, data) {\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll('div').removeClass('ui-state-active');\n                    }, this)).on('hover_node.jstree', $.proxy(function (e, data) {\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll('div').addClass('ui-state-hover');\n                    }, this)).on('dehover_node.jstree', $.proxy(function (e, data) {\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll('div').removeClass('ui-state-hover');\n                    }, this));\n                }\n                if (this._gridSettings.stateful) {\n                    this.element.on('resize_column.jstree-grid', $.proxy(function (e, col, width) {\n                        localStorage['jstree-root-' + this.rootid + '-column-' + col] = width;\n                    }, this));\n                }\n            };\n            this.teardown = function () {\n                var gw = this.gridWrapper, container = this.element, gridparent = gw.parent();\n                container.detach();\n                gw.remove();\n                gridparent.append(container);\n                parent.teardown.call(this);\n            };\n            this._clean_grid = function (target, id) {\n                var grid = this.gridWrapper;\n                if (target) {\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).remove();\n                } else {\n                    grid.find('div.jstree-grid-cell-regular').remove();\n                }\n            };\n            this._prepare_headers = function () {\n                var header, i, col, _this = this, gs = this._gridSettings, cols = gs.columns || [], width, defaultWidth = gs.columnWidth, resizable = gs.resizable || false, cl, ccl, val, name, last, tr = gs.isThemeroller, classAdd = tr ? 'themeroller' : 'regular', puller, hasHeaders = false, gridparent = this.gridparent, rootid = this.rootid, conf = gs.defaultConf, coluuid, borPadWidth = 0, totalWidth = 0;\n                this.parent = gridparent;\n                this.colrefs = {};\n                for (var i = 0, len = cols.length; i < len; i++) {\n                    cl = cols[i].headerClass || '';\n                    ccl = cols[i].columnClass || '';\n                    val = cols[i].header || '';\n                    do {\n                        coluuid = String(Math.floor(Math.random() * 10000));\n                    } while (this.colrefs[coluuid] !== undefined);\n                    name = cols[i].value ? coluuid : 'text';\n                    this.colrefs[name] = cols[i];\n                    if (val) {\n                        hasHeaders = true;\n                    }\n                    if (gs.stateful && localStorage['jstree-root-' + rootid + '-column-' + i])\n                        width = localStorage['jstree-root-' + rootid + '-column-' + i];\n                    else\n                        width = cols[i].width || defaultWidth;\n                    var minWidth = cols[i].minWidth || width;\n                    var maxWidth = cols[i].maxWidth || width;\n                    borPadWidth = tr ? 1 + 6 : 2 + 8;\n                    if (width !== 'auto' && typeof width !== 'string') {\n                        width -= borPadWidth;\n                    }\n                    col = this.midWrapper.children('div.jstree-grid-column-' + i);\n                    last = $('<div></div>').css(conf).addClass('jstree-grid-div-' + this.uniq + '-' + i + ' ' + (tr ? 'ui-widget-header ' : '') + ' jstree-grid-header jstree-grid-header-cell jstree-grid-header-' + classAdd + ' ' + cl + ' ' + ccl).html(val);\n                    last.addClass((tr ? 'ui-widget-header ' : '') + 'jstree-grid-header jstree-grid-header-' + classAdd);\n                    if (this.settings.core.themes.ellipsis === true) {\n                        last.addClass('jstree-grid-ellipsis');\n                    }\n                    last.prependTo(col);\n                    last.attr(COL_DATA_ATTR, name);\n                    totalWidth += last.outerWidth();\n                    puller = $(\"<div class='jstree-grid-separator jstree-grid-separator-\" + classAdd + (tr ? ' ui-widget-header' : '') + (resizable ? ' jstree-grid-resizable-separator' : '') + \"'>&nbsp;</div>\").appendTo(last);\n                    col.width(width);\n                    col.css('min-width', minWidth);\n                    col.css('max-width', maxWidth);\n                }\n                last.addClass((tr ? 'ui-widget-header ' : '') + 'jstree-grid-header jstree-grid-header-last jstree-grid-header-' + classAdd);\n                if (cols[cols.length - 1].width === undefined) {\n                    totalWidth -= width;\n                    col.css({ width: 'auto' });\n                    last.addClass('jstree-grid-width-auto').next('.jstree-grid-separator').remove();\n                }\n                if (hasHeaders) {\n                    gs.header = header;\n                } else {\n                    $('div.jstree-grid-header').hide();\n                }\n                if (!this.bound && resizable) {\n                    this.bound = true;\n                    $(document).mouseup(function () {\n                        var ref, cols, width, headers, currentTree, colNum;\n                        if (isClickedSep) {\n                            colNum = toResize.prevAll('.jstree-grid-column').length;\n                            currentTree = toResize.closest('.jstree-grid-wrapper').find('.jstree');\n                            ref = $.jstree.reference(currentTree);\n                            cols = ref.settings.grid.columns;\n                            headers = toResize.parent().children('div.jstree-grid-column');\n                            if (isNaN(colNum) || colNum < 0) {\n                                ref._gridSettings.treeWidthDiff = currentTree.find('ins:eq(0)').width() + currentTree.find(\"[class~='jstree-anchor']:eq(0)\").width() - ref._gridSettings.columns[0].width;\n                            }\n                            width = ref._gridSettings.columns[colNum].width = parseFloat(toResize.css('width'));\n                            isClickedSep = false;\n                            toResize = null;\n                            currentTree.trigger('resize_column.jstree-grid', [\n                                colNum,\n                                width\n                            ]);\n                        }\n                    }).mousemove(function (e) {\n                        if (isClickedSep) {\n                            newMouseX = e.pageX;\n                            var diff = newMouseX - oldMouseX, oldPrevHeaderInner, oldPrevColWidth, newPrevColWidth;\n                            if (diff !== 0) {\n                                oldPrevHeaderInner = toResize.width();\n                                oldPrevColWidth = parseFloat(toResize.css('width'));\n                                if (!oldPrevColWidth) {\n                                    oldPrevColWidth = toResize.innerWidth();\n                                }\n                                diff = diff < 0 ? Math.max(diff, -oldPrevHeaderInner) : diff;\n                                newPrevColWidth = oldPrevColWidth + diff;\n                                if ((diff > 0 || oldPrevHeaderInner > 0) && newPrevColWidth > MINCOLWIDTH) {\n                                    toResize.width(newPrevColWidth + 'px');\n                                    toResize.css('min-width', newPrevColWidth + 'px');\n                                    toResize.css('max-width', newPrevColWidth + 'px');\n                                    oldMouseX = newMouseX;\n                                }\n                            }\n                        }\n                    });\n                    this.gridWrapper.on('selectstart', '.jstree-grid-resizable-separator', function () {\n                        return false;\n                    }).on('mousedown', '.jstree-grid-resizable-separator', function (e) {\n                        isClickedSep = true;\n                        oldMouseX = e.pageX;\n                        toResize = $(this).closest('div.jstree-grid-column');\n                        return false;\n                    }).on('dblclick', '.jstree-grid-resizable-separator', function (e) {\n                        var clickedSep = $(this), col = clickedSep.closest('div.jstree-grid-column'), oldPrevColWidth = parseFloat(col.css('width')), newWidth = 0, diff, colNum = col.prevAll('.jstree-grid-column').length, oldPrevHeaderInner = col.width(), newPrevColWidth;\n                        col.find('.jstree-grid-cell').each(function () {\n                            var item = $(this), width;\n                            item.css('position', 'absolute');\n                            item.css('width', 'auto');\n                            width = item.outerWidth();\n                            item.css('position', 'relative');\n                            if (width > newWidth) {\n                                newWidth = width;\n                            }\n                        });\n                        diff = newWidth - oldPrevColWidth;\n                        diff = diff < 0 ? Math.max(diff, -oldPrevHeaderInner) : diff;\n                        newPrevColWidth = oldPrevColWidth + diff + 'px';\n                        col.width(newPrevColWidth);\n                        col.css('min-width', newPrevColWidth);\n                        col.css('max-width', newPrevColWidth);\n                        $(this).closest('.jstree-grid-wrapper').find('.jstree').trigger('resize_column.jstree-grid', [\n                            colNum,\n                            newPrevColWidth\n                        ]);\n                    }).on('click', '.jstree-grid-separator', function (e) {\n                        e.stopPropagation();\n                    });\n                }\n                this.gridWrapper.on('click', '.jstree-grid-header-cell', function (e) {\n                    if (!_this.sort) {\n                        return;\n                    }\n                    var name = $(this).attr(COL_DATA_ATTR);\n                    var symbol;\n                    if (gs.sortOrder === name && gs.sortAsc === true) {\n                        gs.sortAsc = false;\n                        symbol = '&darr;';\n                    } else {\n                        gs.sortOrder = name;\n                        gs.sortAsc = true;\n                        symbol = '&uarr;';\n                    }\n                    $(this.closest('.jstree-grid-wrapper')).find('.jstree-grid-sort-icon').remove();\n                    $('<span></span>').addClass('jstree-grid-sort-icon').appendTo($(this)).html(symbol);\n                    var rootNode = _this.get_node('#');\n                    _this.sort(rootNode, true);\n                    _this.redraw_node(rootNode, true);\n                });\n            };\n            this._domManipulation = null;\n            function _guid() {\n                function s4() {\n                    return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\n                }\n                return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n            }\n            this._detachColumns = function (id) {\n                if (this._domManipulation == null) {\n                    var cols = this._gridSettings.columns || [], treecol = this._gridSettings.treecol, mw = this.midWrapper;\n                    this._domManipulation = {\n                        id: id,\n                        columns: {}\n                    };\n                    for (var i = 0, len = cols.length; i < len; i++) {\n                        this._domManipulation.columns[i] = mw.children('.jstree-grid-column-' + i)[0];\n                        this._domManipulation.columns[i].parentNode.removeChild(this._domManipulation.columns[i]);\n                    }\n                }\n                return this._domManipulation;\n            };\n            this._reattachColumns = function (id) {\n                if (this._domManipulation == null) {\n                    return false;\n                }\n                if (this._domManipulation.id === id) {\n                    var cols = this._gridSettings.columns || [], treecol = this._gridSettings.treecol, mw = this.midWrapper;\n                    for (var i = 0, len = cols.length; i < len; i++) {\n                        mw[0].appendChild(this._domManipulation.columns[i]);\n                    }\n                    this._domManipulation = null;\n                }\n                return true;\n            };\n            this.open_node = function (obj, callback, animation) {\n                var isArray = $.isArray(obj);\n                var node = null;\n                if (!isArray) {\n                    node = this.get_node(obj);\n                    if (node.id === '#') {\n                        return;\n                    }\n                }\n                var id = isArray ? _guid() : node.id;\n                this._detachColumns(id);\n                var ret = parent.open_node.call(this, obj, callback, animation);\n                this._reattachColumns(id);\n                return ret;\n            };\n            this.redraw_node = function (obj, deep, is_callback, force_render) {\n                var id = $.isArray(obj) ? _guid() : this.get_node(obj).id;\n                this._detachColumns(id);\n                obj = parent.redraw_node.call(this, obj, deep, is_callback, force_render);\n                if (obj) {\n                    this._prepare_grid(obj);\n                }\n                this._reattachColumns(id);\n                return obj;\n            };\n            this.refresh = function () {\n                this._clean_grid();\n                return parent.refresh.apply(this, arguments);\n            };\n            this.set_id = function (obj, id) {\n                var old, uniq = this.uniq;\n                if (obj) {\n                    old = obj.id;\n                }\n                var result = parent.set_id.apply(this, arguments);\n                if (result) {\n                    if (old !== undefined) {\n                        var grid = this.gridWrapper, oldNodes = [old], i;\n                        if (obj && obj.children_d) {\n                            oldNodes = oldNodes.concat(obj.children_d);\n                        }\n                        findDataCell(uniq, oldNodes, this._gridSettings.gridcols).attr(NODE_DATA_ATTR, obj.id).removeClass(generateCellId(uniq, old)).addClass(generateCellId(uniq, obj.id)).each(function (i, node) {\n                            $(node).attr('id', generateCellId(uniq, obj.id) + (i + 1));\n                        });\n                    }\n                }\n                return result;\n            };\n            this._hideOrShowTree = function (node, hide) {\n                this._detachColumns(node.id);\n                this._hideOrShowNode(node, hide, this._gridSettings.columns || [], this._gridSettings.treecol);\n                this._reattachColumns(node.id);\n            };\n            this._hideOrShowNode = function (node, hide, cols, treecol) {\n                for (var i = 0, len = cols.length; i < len; i++) {\n                    if (i === treecol) {\n                        continue;\n                    }\n                    var cells = findDataCell(this.uniq, node.id, i, $(this._domManipulation.columns[i]));\n                    if (hide) {\n                        cells.addClass('jstree-grid-hidden');\n                    } else {\n                        cells.removeClass('jstree-grid-hidden');\n                    }\n                }\n                if (node.state.opened && node.children) {\n                    for (var i = 0, len = node.children.length; i < len; i++) {\n                        this._hideOrShowNode(this.get_node(node.children[i]), hide, cols, treecol);\n                    }\n                }\n            };\n            this._hide_grid = function (node) {\n                if (!node) {\n                    return true;\n                }\n                this._detachColumns(node.id);\n                var children = node.children ? node.children : [], cols = this._gridSettings.columns || [], treecol = this._gridSettings.treecol;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = this.get_node(children[i]);\n                    for (var j = 0, lenj = cols.length; j < lenj; j++) {\n                        if (j === treecol) {\n                            continue;\n                        }\n                        findDataCell(this.uniq, child.id, j, $(this._domManipulation.columns[j])).remove();\n                    }\n                    if (child.state.opened) {\n                        this._hide_grid(child);\n                    }\n                }\n                this._reattachColumns(node.id);\n            };\n            this.holdingCells = {};\n            this.getHoldingCells = function (obj, col, hc) {\n                if (obj.state.hidden || !obj.state.opened) {\n                    return $();\n                }\n                var ret = $(), children = obj.children || [], child, i, uniq = this.uniq;\n                for (i = 0; i < children.length; i++) {\n                    child = generateCellId(uniq, children[i]) + col;\n                    if (hc[child]) {\n                        ret = ret.add(hc[child]).add(this.getHoldingCells(this.get_node(children[i]), col, hc));\n                    }\n                }\n                return ret;\n            };\n            this._edit = function (obj, col, element) {\n                if (!obj) {\n                    return false;\n                }\n                if (!obj.data) {\n                    obj.data = {};\n                }\n                if (element) {\n                    element = $(element);\n                    if (element.prop('tagName').toLowerCase() === 'div') {\n                        element = element.children('span:first');\n                    }\n                } else {\n                    return false;\n                }\n                var rtl = this._data.core.rtl, w = this.element.width(), t = obj.data[col.value], h1 = $('<' + 'div />', {\n                        css: {\n                            'position': 'absolute',\n                            'top': '-200px',\n                            'left': rtl ? '0px' : '-1000px',\n                            'visibility': 'hidden'\n                        }\n                    }).appendTo('body'), h2 = $('<' + 'input />', {\n                        'value': t,\n                        'class': 'jstree-rename-input',\n                        'css': {\n                            'padding': '0',\n                            'border': '1px solid silver',\n                            'box-sizing': 'border-box',\n                            'display': 'inline-block',\n                            'height': this._data.core.li_height + 'px',\n                            'lineHeight': this._data.core.li_height + 'px',\n                            'width': '150px'\n                        },\n                        'blur': $.proxy(function () {\n                            var v = h2.val();\n                            if (v === '' || v === t) {\n                                v = t;\n                            } else {\n                                obj.data[col.value] = v;\n                                this.element.trigger('update_cell.jstree-grid', {\n                                    node: obj,\n                                    col: col.value,\n                                    value: v,\n                                    old: t\n                                });\n                                var id = _guid();\n                                this._detachColumns(id);\n                                this._prepare_grid(this.get_node(obj, true));\n                                this._reattachColumns(id);\n                            }\n                            h2.remove();\n                            element.show();\n                        }, this),\n                        'keydown': function (event) {\n                            var key = event.which;\n                            if (key === 27) {\n                                this.value = t;\n                            }\n                            if (key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\n                                event.stopImmediatePropagation();\n                            }\n                            if (key === 27 || key === 13) {\n                                event.preventDefault();\n                                this.blur();\n                            }\n                        },\n                        'click': function (e) {\n                            e.stopImmediatePropagation();\n                        },\n                        'mousedown': function (e) {\n                            e.stopImmediatePropagation();\n                        },\n                        'keyup': function (event) {\n                            h2.width(Math.min(h1.text('pW' + this.value).width(), w));\n                        },\n                        'keypress': function (event) {\n                            if (event.which === 13) {\n                                return false;\n                            }\n                        }\n                    }), fn = {\n                        fontFamily: element.css('fontFamily') || '',\n                        fontSize: element.css('fontSize') || '',\n                        fontWeight: element.css('fontWeight') || '',\n                        fontStyle: element.css('fontStyle') || '',\n                        fontStretch: element.css('fontStretch') || '',\n                        fontVariant: element.css('fontVariant') || '',\n                        letterSpacing: element.css('letterSpacing') || '',\n                        wordSpacing: element.css('wordSpacing') || ''\n                    };\n                element.hide();\n                element.parent().append(h2);\n                h2.css(fn).width(Math.min(h1.text('pW' + h2[0].value).width(), w))[0].select();\n            };\n            this.grid_hide_column = function (col) {\n                this.midWrapper.find('.jstree-grid-column-' + col).hide();\n            };\n            this.grid_show_column = function (col) {\n                this.midWrapper.find('.jstree-grid-column-' + col).show();\n            };\n            this._prepare_grid = function (obj) {\n                var gs = this._gridSettings, c = gs.treeClass, _this = this, t, cols = gs.columns || [], width, tr = gs.isThemeroller, uniq = this.uniq, treecol = gs.treecol, tree = this.element, rootid = this.rootid, classAdd = tr ? 'themeroller' : 'regular', img, objData = this.get_node(obj), defaultWidth = gs.columnWidth, conf = gs.defaultConf, cellClickHandler = function (tree, node, val, col, t) {\n                        return function (e) {\n                            var event = eventer.create('select_cell.jstree-grid');\n                            tree.trigger(event, [{\n                                    value: val,\n                                    column: col.header,\n                                    node: node,\n                                    grid: $(this),\n                                    sourceName: col.value\n                                }]);\n                            if (!event.isDefaultPrevented()) {\n                                node.children('.jstree-anchor').trigger('click.jstree', e);\n                            }\n                        };\n                    }, cellRightClickHandler = function (tree, node, val, col, t) {\n                        return function (e) {\n                            if (gs.gridcontextmenu) {\n                                e.preventDefault();\n                                menu.popup(this, {\n                                    'x': e.pageX,\n                                    'y': e.pageY\n                                }, gs.gridcontextmenu(_this, tree, node, val, col, t, e.target));\n                            }\n                        };\n                    }, hoverInHandler = function (node, jsTreeInstance) {\n                        return function () {\n                            jsTreeInstance.hover_node(node);\n                        };\n                    }, hoverOutHandler = function (node, jsTreeInstance) {\n                        return function () {\n                            jsTreeInstance.dehover_node(node);\n                        };\n                    }, i, val, cl, wcl, ccl, a, last, valClass, wideValClass, span, paddingleft, title, gridCellName, gridCellParentId, gridCellParent, gridCellPrev, gridCellPrevId, gridCellNext, gridCellNextId, gridCellChild, gridCellChildId, col, content, tmpWidth, mw = this.midWrapper, column, lid = objData.id, highlightSearch, isClicked, peers = this.get_node(objData.parent).children, pos = $.inArray(lid, peers), hc = this.holdingCells, rendered = false, closed;\n                t = $(obj);\n                a = t.children(\"[class~='jstree-anchor']\");\n                highlightSearch = a.hasClass(SEARCHCLASS);\n                isClicked = a.hasClass('jstree-clicked');\n                if (a.length === 1) {\n                    closed = !objData.state.opened;\n                    gridCellName = generateCellId(uniq, lid);\n                    gridCellParentId = objData.parent === '#' ? null : objData.parent;\n                    a.addClass(c);\n                    renderATitle(a, t, _this);\n                    last = a;\n                    gridCellPrevId = pos <= 0 ? objData.parent : findLastClosedNode(this, peers[pos - 1]);\n                    gridCellNextId = pos >= peers.length - 1 ? 'NULL' : peers[pos + 1];\n                    gridCellChildId = objData.children && objData.children.length > 0 ? objData.children[0] : 'NULL';\n                    var s = this.settings.grid;\n                    for (var i = 0, len = cols.length; i < len; i++) {\n                        if (treecol === i) {\n                            continue;\n                        }\n                        col = cols[i];\n                        column = this._domManipulation == null ? mw.children('div:eq(' + i + ')') : $(this._domManipulation.columns[i]);\n                        cl = col.cellClass || '';\n                        wcl = col.wideCellClass || '';\n                        ccl = col.columnClass || '';\n                        column.addClass(ccl);\n                        val = getCellData(col.value, objData);\n                        if (typeof col.format === 'function') {\n                            val = col.format(val);\n                        }\n                        if (col.images) {\n                            img = col.images[val] || col.images['default'];\n                            if (img) {\n                                content = img[0] === '*' ? '<span class=\"' + img.substr(1) + '\"></span>' : '<img src=\"' + img + '\">';\n                            }\n                        } else {\n                            content = val;\n                        }\n                        if (content === undefined || content === null || BLANKRE.test(content)) {\n                            content = '&nbsp;';\n                        }\n                        valClass = col.valueClass && objData.data !== null && objData.data !== undefined ? objData.data[col.valueClass] || '' : '';\n                        if (valClass && col.valueClassPrefix && col.valueClassPrefix !== '') {\n                            valClass = col.valueClassPrefix + valClass;\n                        }\n                        wideValClass = col.wideValueClass && objData.data !== null && objData.data !== undefined ? objData.data[col.wideValueClass] || '' : '';\n                        if (wideValClass && col.wideValueClassPrefix && col.wideValueClassPrefix !== '') {\n                            wideValClass = col.wideValueClassPrefix + wideValClass;\n                        }\n                        title = col.title && objData.data !== null && objData.data !== undefined ? objData.data[col.title] || '' : '';\n                        title = title.replace(htmlstripre, '');\n                        paddingleft = 7;\n                        width = col.width || defaultWidth;\n                        if (width !== 'auto') {\n                            width = tmpWidth || width - paddingleft;\n                        }\n                        last = findDataCell(uniq, lid, i, column);\n                        if (!last || last.length < 1) {\n                            last = $('<div></div>');\n                            $('<span></span>').appendTo(last);\n                            last.attr('id', gridCellName + i);\n                            last.addClass(gridCellName);\n                            last.attr(NODE_DATA_ATTR, lid);\n                            if (highlightSearch) {\n                                last.addClass(SEARCHCLASS);\n                            } else {\n                                last.removeClass(SEARCHCLASS);\n                            }\n                            if (isClicked) {\n                                last.addClass('jstree-clicked');\n                            } else {\n                                last.removeClass('jstree-clicked');\n                            }\n                            if (this.settings.core.themes.ellipsis === true && i !== treecol) {\n                                last.addClass('jstree-grid-ellipsis');\n                            }\n                        }\n                        if (objData.state.hidden) {\n                            last.addClass('jstree-grid-hidden');\n                        } else {\n                            last.removeClass('jstree-grid-hidden');\n                        }\n                        gridCellPrev = findDataCell(uniq, gridCellPrevId, i, column);\n                        gridCellNext = findDataCell(uniq, gridCellNextId, i, column);\n                        gridCellChild = findDataCell(uniq, gridCellChildId, i, column);\n                        gridCellParent = findDataCell(uniq, gridCellParentId, i, column);\n                        if (gridCellParentId) {\n                            if (gridCellParent && gridCellParent.length > 0) {\n                                if (gridCellPrev && gridCellPrev.length > 0) {\n                                    last.insertAfter(gridCellPrev);\n                                } else if (gridCellChild && gridCellChild.length > 0) {\n                                    last.insertBefore(gridCellChild);\n                                } else if (gridCellNext && gridCellNext.length > 0) {\n                                    last.insertBefore(gridCellNext);\n                                } else {\n                                    last.insertAfter(gridCellParent);\n                                }\n                                rendered = true;\n                            } else {\n                                rendered = false;\n                            }\n                            hc[gridCellName + i] = last;\n                        } else {\n                            if (gridCellPrev && gridCellPrev.length > 0) {\n                                last.insertAfter(gridCellPrev);\n                            } else if (gridCellChild && gridCellChild.length > 0) {\n                                last.insertBefore(gridCellChild);\n                            } else if (gridCellNext && gridCellNext.length > 0) {\n                                last.insertBefore(gridCellNext);\n                            } else {\n                                last.appendTo(column);\n                            }\n                            rendered = true;\n                        }\n                        if (rendered) {\n                            var toRen = this.getHoldingCells(objData, i, hc);\n                            last.after(toRen);\n                        }\n                        span = last.children('span');\n                        span.addClass(cl + ' ' + valClass).html(content);\n                        last = last.css(conf).addClass('jstree-grid-cell jstree-grid-cell-regular jstree-grid-cell-root-' + rootid + ' jstree-grid-cell-' + classAdd + ' ' + wcl + ' ' + wideValClass + (tr ? ' ui-state-default' : '')).addClass('jstree-grid-col-' + i).addClass('jstree-animated');\n                        last.click(cellClickHandler(tree, t, val, col, this));\n                        last.on('contextmenu', cellRightClickHandler(tree, t, val, col, this));\n                        last.hover(hoverInHandler(t, this), hoverOutHandler(t, this));\n                        if (title) {\n                            span.attr('title', title);\n                        }\n                        tree.trigger('render_cell.jstree-grid', [{\n                                value: val,\n                                column: col.header,\n                                node: t,\n                                sourceName: col.value\n                            }]);\n                    }\n                    last.addClass('jstree-grid-cell-last' + (tr ? ' ui-state-default' : ''));\n                    if (cols[cols.length - 1].width === undefined) {\n                        last.addClass('jstree-grid-width-auto').next('.jstree-grid-separator').remove();\n                    }\n                }\n                this.element.css({ 'overflow-y': 'auto !important' });\n            };\n            this.holdingCells = {};\n        };\n        return $;\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});"]}