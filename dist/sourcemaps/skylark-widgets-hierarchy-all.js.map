{"version":3,"sources":["skylark-widgets-hierarchy-all.js"],"names":["define","obj1","path","obj2","split","length","ns","i","name","_attach","skylark","attach","obj","main","dom","class2type","toString","type","forEach","toLowerCase","String","call","isEmptyObject","isFunction","value","isHtmlNode","nodeType","isNumber","isObject","isString","isWindow","window","isArray","object","constructor","Array","isArrayLike","isBoolean","isDefined","isDocument","DOCUMENT_NODE","isEmpty","isNull","isNumeric","isPlainObject","Object","getPrototypeOf","prototype","isSameOrigin","href","origin","location","protocol","hostname","port","startsWith","isSymbol","isObjectLike","objectToString","symbolTag","isUndefined","undefined","types","INFINITY","MAX_INTEGER","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toFinite","toNumber","sign","other","valueOf","replace","isBinary","test","slice","toInteger","result","remainder","numbers","eq","deepEq","hasOwnProperty","keysFunc","defaults","SymbolProto","Symbol","allKeys","keys","key","push","has","_mixin","target","source","deep","safe","_parseMixinArgs","args","params","arguments","shift","pop","sources","mixin","apply","this","values","a","b","aStack","bStack","className","areArrays","aCtor","bCtor","clone","src","checkCloneMethod","copy","index","l","each","callback","undef","extend","arg","isEqual","includes","collection","fromIndex","guard","nativeMax","indexOf","baseIndexOf","isMatch","attrs","omit","prop1","prop2","pn","pick","removeItem","items","item","idx","splice","fallback","prop","safeMixin","objects","filter","baseFindIndex","array","predicate","fromRight","baseIsNaN","flatten","j","compact","first","n","func","grep","out","inArray","makeArray","offset","startWith","concat","merge","second","arr","fn","map","elements","reduce","initialValue","uniq","arrays","createClass","_constructor","_construct","init","props","parent","mixins","options","innerParent","ctor","Error","clss","unshift","superclass","cls","clsMixines","serialMixins","newCtor","xtor","Function","create","__proto__","__mixin__","mergeMixins","klassName","__mixins__","partial","proto","_super","noOverrided","overrides","superFn","tmp","overrided","ret","defineProperty","extendClass","inherit","f1","klass","QueryResults","results","isPromise","then","addIterativeMethod","method","Deferred","when","delegate","total","ArrayStore","queryEngine","query","queryObject","required","execute","thisObject","cache","buildFn","sortSet","sort","aValue","attribute","bValue","descending","start","count","Infinity","matches","idProperty","get","id","data","getIdentity","put","Math","random","overwrite","add","remove","setData","identifier","nextId","aspect","methodName","advice","receiveArguments","dispatcher","existing","executionId","before","next","around","after","newResults","signal","previous","advised","advise","TMP","templateSettings","evaluate","interpolate","escape","debounce","wait","timeout","context","clearTimeout","setTimeout","defer","requestAnimationFrame","setTimeoutout","noop","proxy","TypeError","returnTrue","returnFalse","template","text","settings","oldSettings","render","matcher","RegExp","noMatch","join","match","escapeRegExp","escapeChar","variable","e","_","argument","funcs","PGLISTENERS","PGNOTIFIES","Promise","always","handler","done","fail","catch","self","p","promise","resolve","reject","_resolve","_reject","wrapPromise","d","added","state","isResolved","isRejected","onResolved","onRejected","onProgress","progress","__ctx__","pipe","resolveWith","_resolved","notify","listener","error","reason","rejectWith","_rejected","errback","progback","all","bind","race","valueOrPromise","receivedPromise","nativePromise","deferred","cancel","err","immediate","async","parallel","ctx","rets","series","waterful","parseMilliSeconds","str","strs","number","isNaN","trim","datetimes","parse","event","segs","Evented","on","events","selector","one","_hub","parsed","trigger","CustomEvent","eventName","listeners","len","reCompact","listened","evtArr","_events","listenTo","listening","listeningTo","_listeningTo","listeningEvents","listeningEvent","listenToOnce","off","evts","liveEvents","unlistenTo","hoster","isBrowser","isNode","global","browser","node","process","versions","v8","_document","w","require","document","matched","ua","exec","version","uaMatch","navigator","userAgent","chrome","webkit","safari","escapeCharMap","freeze","&","<",">","\"","'","`","=","replaceChar","c","escapeChars","idCounter","string","line","body","escapeHTML","me","callee","stash","getElementById","innerHTML","camelCase","toUpperCase","dasherize","deserializeValue","JSON","generateUUID","r","v","lowerFirst","charAt","rtrim","serializeValue","stringify","substitute","transform","getObject","retVal","getValue","_k","reverse","format","slugify","from","uniqueId","prefix","upperFirst","strings","getAbsoluteUrl","url","createElement","Xhr","jsonpID","rscript","scriptTypeRE","xmlTypeRE","jsonType","htmlType","blankRE","XhrDefaultOptions","beforeSend","success","complete","accepts","script","json","xml","html","crossDomain","processData","xhrFields","withCredentials","mimeToDataType","mime","appendQuery","serializeData","param","traditional","serialize","scope","t","hash","encodeURIComponent","_request","xhr","XMLHttpRequest","dataType","handleAs","mimeType","headers","isFormData","FormData","basicAuthorizationToken","user","password","contentType","overrideMimeType","finish","onloadend","onabort","onprogress","ontimeout","status","getResponseHeader","responseText","eval","responseXML","Blob","xhrObj","response","reponse","statusText","evt","open","hdr","setRequestHeader","send","abort","request","post","patch","del","defaultOptions","Restful","idAttribute","getBaseUrl","baseEndpoint","baseUrl","server","basePath","_head","_get","_post","verb","_put","_delete","_patch","retrieve","update","delete","Stateful","attributes","cid","cidPrefix","set","changed","validationError","toJSON","attr","val","_validate","unset","silent","changes","changing","_changing","_previousAttributes","current","prev","_pending","clear","hasChanged","changedAttributes","diff","old","previousAttributes","isNew","isValid","validate","hub","publish","arg1","argn","subscribe","topic","_uid","langx","createEvent","funcArg","payload","getQueryParams","queryParam","nv","toPixel","parseFloat","uid","URL","webkitURL","vendorPrefix","vendorPrefixRE","transEndEventNames","WebkitTransition","MozTransition","OTransition","transition","transEndEventName","css3PropPrefix","css3EventPrefix","cssStyles","cssProps","vendorPrefixesRE","testEl","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","requestFullScreen","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","testStyle","exitFullscreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen","style","cssPropName","isIE","normalizeStyleProperty","normalizeCssProperty","normalizeCssEvent","support","end","every","maybeAddPx","cssNumber","column-count","columns","font-weight","line-height","opacity","z-index","zoom","classReCache","classRE","svg","baseVal","elementDisplay","getStyles","elem","view","ownerDocument","defaultView","opener","getComputedStyle","styler","autocssfix","cssHooks","addClass","elm","names","re","css","property","computedStyle","getPropertyValue","removeProperty","cssText","disabled","hasClass","hide","isInvisible","removeClass","show","nodeName","element","display","appendChild","parentNode","removeChild","defaultDisplay","toggleClass","fragmentRE","singleTagRE","div","table","tableBody","tableRow","containers","tr","tbody","thead","tfoot","td","th","*","rootNodeRE","ensureNodes","nodes","copyByClone","cloneNode","chkName","enhancePlaceContent","placing","neddsFlattern","append","tag","setAttribute","rxhtmlTag","isChildOf","directly","documentElement","contains","ownerDoc","noder","active","doc","el","activeElement","blur","getAttribs","setAttrib","getAttrib","contents","contentDocument","childNodes","createFragment","$1","container","child","createTextNode","empty","hasChildNodes","firstChild","fullScreen","exitFullScreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","focusable","hasTabindex","mapName","img","focusableIfVisible","fieldset","$","is","closest","visible","isInDocument","offsetParent","ownerWindow","parentWindow","refNode","nextSibling","insertBefore","prepend","reflow","offsetHeight","console","warn","children","oldNode","replaceChild","throb","timer","time","throbber","class","overlayDiv","position","top","left","width","height","zIndex","overlay","textNode","nodeValue","traverse","wrapper","wrapperNode","wrapperInner","unwrap","isDoc","velm","local","nativeMatchesSelector","separatorIndex","combinatorIndex","reversed","reverseCache","reUnescape","expression","isReversed","Slick","currentCache","expressions","raw","regexp","parser","reverseCombinator","combinator","exp","last","parts","cexp","rawMatch","separator","combinatorChildren","tagName","attributeKey","attributeOperator","attributeQuote","attributeValue","pseudoMarker","pseudoClass","pseudoQuote","pseudoClassQuotedValue","pseudoClassValue","currentSeparator","currentParsed","classList","classes","pseudos","operator","rinputs","rheader","parseSelector","button","checked","enabled","even","focus","tabindex","gt","sel","find","header","hidden","input","lt","not","odd","selected","tabbable","tabIndex","offsetWidth","createInputPseudo","createButtonPseudo","isArrayFilter","radio","checkbox","file","image","submit","reset","ancestors","root","rootIsSelector","descendants","querySelectorAll","matchError","descendant","querySelector","lastChild","previousSibling","check","adjacent","nextSiblings","previousSiblings","siblings","divide","cond","nativeSelector","customPseudos","part","arrayFilte","pseudo","getAttribute","hasAttribute","currentExpression","simpleExpCounter","filterSingle","matchs","combine","bit","node1","op","divided","single","currentBit","founds","found","currentItems","finder","ancestor","byId","findAll","capitalRE","propMap","readonly","for","maxlength","cellspacing","cellpadding","rowspan","colspan","usemap","frameborder","contenteditable","valHooks","option","select","selectedIndex","max","optionSet","attrName","_store","confirm","store","_attributeData","_setData","dataAttrName","camelName","_getData","cleanData","txt","textContent","hooks","value1","datax","dataName","aria","pluck","removeAttr","removeAttribute","removeData","removeProp","ignoreProperties","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","readyRE","compatible","isDefaultPrevented","sourceMethod","EventCtors","NativeEvents","compositionstart","compositionend","compositionupdate","beforecopy","beforecut","beforepaste","cut","paste","drag","dragend","dragenter","dragexit","dragleave","dragover","dragstart","drop","change","selectionchange","focusin","focusout","keydown","keypress","keyup","message","click","contextmenu","dblclick","mousedown","mouseup","mousemove","mouseover","mouseout","mouseenter","mouseleave","textInput","touchstart","touchmove","touchend","load","resize","scroll","unload","wheel","bubbles","cancelable","namespace","getEventCtor","createProxy","originalEvent","specialEvents","focusinSupported","hover","realEvent","handlers","EventBindings","_target","_event","_bindings","bindings","binding","_listener","domEvt","_args","isImmediatePropagationStopped","currentTarget","liveFired","related","relatedTarget","addEventListener","removing","removeEventListener","EventsHandler","_handler","register","specialEvent","bindingEvent","bindType","bindEventName","unregister","findHandler","ready","readyState","keyCodeLookup","backspace","comma","down","enter","home","page_down","page_up","period","right","space","tab","up","eventer","transitionEnd","delegateType","shortcuts","registry","run","shortcut","metaKey","ctrlKey","ctrl","alt","altKey","shiftKey","keyCode","charCode","pattern","shortcutKey","setting","charCodeAt","regKey","special","stop","evented","Event","dispatchEvent","cachedScrollbarWidth","px","scrollbarWidth","w1","w2","innerDiv","clientWidth","borderExtents","bottom","s","borderLeftWidth","borderTopWidth","borderRightWidth","borderBottomWidth","boundingPosition","coords","getBoundingClientRect","parentOffset","mex","marginExtents","pbex","relativePosition","boundingRect","size","clientSize","dimension","clientHeight","isBorderBox","bex","pex","paddingExtents","getDocumentSize","scrollWidth","scrollHeight","marginLeft","marginTop","marginRight","marginBottom","marginSize","paddingLeft","paddingTop","paddingRight","paddingBottom","pagePosition","pageXOffset","pageYOffset","relativeRect","scrollLeft","hasScrollLeft","scrollTo","scrollY","scrollTop","hasScrollTop","scrollX","innerWidth","innerHeight","geom","contentRect","cs","marginRect","pageRect","round","scrollIntoView","align","x","y","parentWidth","parentHeight","parentElm","pos","rootElm","offsetLeft","offsetTop","getOffset","abs","rhorizontal","rvertical","roffset","rposition","rpercent","getOffsets","offsets","parseCss","positions","fit","newOverRight","within","withinOffset","outerWidth","collisionPosLeft","collisionPosition","overLeft","overRight","collisionWidth","newOverBottom","outerHeight","collisionPosTop","overTop","overBottom","collisionHeight","flip","newOverLeft","myOffset","my","elemWidth","atOffset","at","targetWidth","newOverTop","elemHeight","targetHeight","flipfit","posit","targetOffset","basePosition","dimensions","of","withinElement","hasOffset","msize","scrollInfo","overflowX","overflowY","hasOverflowX","getScrollInfo","collision","pageY","pageX","horizontalOffset","verticalOffset","using","dir","feedback","horizontal","vertical","important","animationName","animationDuration","animationTiming","transitionProperty","transitionDuration","transitionTiming","transitionDelay","animationEnd","supportedTransforms","cssReset","animate","properties","duration","ease","delay","endEvent","wrappedCallback","cssValues","cssProperties","transforms","that","fired","easing","fx","speeds","normal","eace","clientLeft","scrollToTop","speed","scale","scrollFrom","freq","interval","setInterval","clearInterval","fadeTo","fadeIn","fadeOut","slideDown","visibility","overflow","slideUp","queue","fast","slow","emulateTransitionEnd","called","fadeToggle","ceasing","allback","slideToggle","toggle","head","getElementsByTagName","scriptsByUrl","scriptElementsById","rscriptType","scripter","preservedScriptAttributes","nonce","noModule","code","loadJavaScript","loadedCallback","errorCallback","loadedCallbacks","errorCallbacks","onload","onerror","startTime","Date","getTime","callbacks","deleteJavaScript","scripts","isQ","some","rquickExpr","wrapper_map","wrapper_selector","wrapper_every_act","wrapper_every_act_firstArgFunc","oldValueFunc","wrapper_name_value","wrapper_value","newValue","NodeList","toArray","excludes","parents","parentsUntil","util","pushStack","elms","prevObject","replaceWith","newContent","wrap","structure","wrapAll","wrappingElement","wrapInner","prevAll","nextAll","wrapper_some_chk","detach","fnOver","fnOut","Dimension","m","margin","cb","mb","wrapper_node_operation","argType","appendTo","prependTo","insertAfter","replaceAll","original","elems","insert","toogle","scrollParent","includeHidden","excludeStaticParent","overflowRegex","andSelf","addBack","eventType","place","addContent","content","replaceClass","newClass","oldClass","disableSelection","enableSelection","flow","isBlockNode","plugin","returnValue","plugins","instantiate","jstree","ajax","parseJSON","instance_counter","ccp_node","ccp_mode","ccp_inst","themes_loaded","idregex","Tree","destroy","reference","needle","ignore","inst","_model","is_method","instance","core","check_callback","animation","multiple","themes","dots","icons","ellipsis","stripes","variant","responsive","expand_selected_onload","worker","force_text","dblclick_toggle","loaded_state","restore_focus","keyboard","ctrl-space","is_open","close_node","o","get_parent","get_node","get_prev_dom","is_closed","open_node","_firstChild","get_next_dom","open_all","get_container_ul","f2","edit","deco","opts","Child","_data","_id","_cnt","_wrk","last_error","working","worker_queue","focused","opt","k","force_full_redraw","redraw_timeout","default_state","loaded","opened","children_d","rtl","original_container_html","get_string","li_height","_create_prototype_node","load_node","keep_html","revokeObjectURL","teardown","_temp1","_temp2","_node","_kbevent_to_func","8","9","13","19","27","32","33","34","35","36","37","38","39","40","44","45","46","96","97","98","99","100","101","102","103","104","105","-13","112","113","114","115","116","117","118","119","120","121","122","123","144","145","16","17","18","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","107","109","110","186","187","188","189","190","191","192","219","220","221","222","111","106","173","which","kb","unbind","word","tout","was_click","selection","getSelection","removeAllRanges","collapse","toggle_node","activate_node","f","vakata","array_unique","action","chr","fromCharCode","col","ind","set_theme","set_theme_variant","act","hover_node","dehover_node","ev","get_container","_nextSibling","_previousSibling","as_dom","ex","get_path","glue","ids","get_text","strict","get_children_dom","is_parent","is_loaded","is_loading","loading","is_leaf","_load_nodes","array_filter","failed","_load_node","has_children","is_callback","force_reload","load_all","to_load","notTextOrCommentNode","parseHTML","_append_json_data","_append_html_data","_node_changed","dat","par","chd","dpc","_parse_model_from_html","redraw","force_processing","df","t_id","t_cnt","rslt","parse_flat","ps","tid","icon","li_attr","a_attr","parse_nest","cnt","mod","postMessage","Worker","createObjectURL","onmessage","terminate","_parse_model_from_flat_json","_parse_model_from_json","_redraw","fe","redraw_node","full","draw_children","force_render","last_sibling","substr","backgroundImage","backgroundPosition","backgroundSize","t1","t2","ok","_open_to","original_obj","_this","close_all","is_disabled","enable_node","disable_node","is_hidden","hide_node","skip_redraw","show_node","hide_all","show_all","last_clicked","deselect_node","select_node","is_selected","deselect_all","supress_event","prevent_open","array_remove_item","select_all","old_selection","get_selected","get_top_selected","get_bottom_selected","get_state","set_state","initial_selection","refresh","skip_loading","forget_state","refresh_node","set_id","new","set_text","get_json","flat","get_icon","no_data","no_state","no_li_attr","no_a_attr","no_id","no_children","create_node","rename_node","delete_node","lft","array_remove","chk","more","chc","is_multi","functions","move_node","old_par","old_pos","new_par","old_ins","copy_node","is_foreign","old_parent","old_position","old_instance","new_instance","get_buffer","mode","can_paste","clear_buffer","default_text","h1","h2","padding","border","box-sizing","lineHeight","min","fontFamily","fontSize","fontWeight","fontStyle","fontStretch","fontVariant","letterSpacing","wordSpacing","theme_name","theme_url","theme","get_theme","variant_name","get_theme_variant","show_stripes","hide_stripes","toggle_stripes","show_dots","hide_dots","toggle_dots","show_icons","hide_icons","toggle_icons","show_ellipsis","hide_ellipsis","toggle_ellipsis","set_icon","hide_icon","show_icon","search","fuzzy","caseSensitive","MATCH_LOCATION","MATCH_DISTANCE","distance","MATCH_THRESHOLD","threshold","patternLen","matchmask","pattern_alphabet","mask","match_bitapScore","accuracy","proximity","score","binMin","binMid","lastRd","rd","charMatch","textLen","scoreThreshold","bestLoc","binMax","locations","lastIndexOf","floor","with_values","deselected","_i","three_state","whole_node","keep_selected_style","cascade","tie_selection","cascade_to_disabled","cascade_to_hidden","uto","_undetermined","cur","selectedIds","_cascade_new_checked_state","temp","undetermined","allIds","get_undetermined","tt","tmp2","checkbox_disabled","show_checkboxes","checkboxes","hide_checkboxes","toggle_checkboxes","is_undetermined","disable_checkbox","enable_checkbox","is_checked","uncheck_node","check_node","checkedState","selectedChildIds","selectedNodeIds","selectedChildrenIds","get_checked_descendants","childId","check_all","uncheck_all","get_checked","get_top_checked","get_bottom_checked","res","conditionalselect","exports","module","__isValidToReturn","__isEmptyObject","menu","show_at_node","separator_before","separator_after","_disabled","label","new_node","rename","ccp","submenu","ey","last_ts","cto","show_contextmenu","changedTouches","clientX","clientY","_show_contextmenu","popup","drg","dnd","open_timeout","is_draggable","check_while_dragging","always_copy","inside_pos","drag_selection","touch","large_drop_target","large_drag_target","use_html5","mlt","_trigger","helper","lastmv","laster","lastev","opento","marker","isDifferentNode","h","pr","ip","tm","is_copy","ins","ref","rel","z","dataTransfer","dropEffect","_clean","strip","vakata_dnd","is_down","is_drag","helper_w","init_x","init_y","scroll_l","scroll_t","scroll_e","scroll_i","is_touch","scroll_speed","scroll_proximity","helper_left","helper_top","threshold_touch","event_name","_scroll","init_only","elementFromPoint","unselectable","onselectstart","touchAction","msTouchAction","MozUserSelect","dh","wh","dw","ww","dt","dl","ht","hl","to","massload","toLoad","case_sensitive","show_only_matches","show_only_matches_children","close_opened_onclear","search_leaves_only","search_callback","opn","som","smc","hdn","skip_async","inside","clear_search","lastRequest","ii","ttl","preserve_loaded","save_state","restore_state","st","sec","storage","clear_state","localStorage","setItem","getItem","BLANKRE","IDREGEX","styled","generateCellId","tree","escapeId","getIds","findDataCell","cellId","isClickedSep","toResize","oldMouseX","newMouseX","htmlstripre","copyData","fromtree","totree","recurse","findLastClosedNode","getCellData","grid","_guid","s4","substring","_initialize","_initialized","gs","_gridSettings","treeClass","columnWidth","defaultConf","*display","*+display","isThemeroller","themeroller","treeWidthDiff","resizable","draggable","stateful","indent","sortOrder","sortAsc","caseInsensitive","fixedHeader","gridcontextmenu","treecol","gridcols","cols","columnSearch","_edit","ceil","rootid","msie","appVersion","gridWrapper","midWrapper","defaultSort","bigger","colrefs","caseInsensitiveSort","localeCompare","nodeA","nodeB","valueA","valueB","ui","sortable","axis","handle","searchColumn","searchObj","validatedSearchObj","columnIndex","column","columnValue","searchSettings","omniSearchCallback","searchValue","_detachColumns","_prepare_grid","_reattachColumns","removeNodes","_hideOrShowTree","_hide_grid","_prepare_headers","q","anchorHeight","_hover_node","nodesToShow","endTime","holdingCells","cells","_domManipulation","newtree","oldtree","gw","gridparent","_clean_grid","cl","ccl","coluuid","defaultWidth","classAdd","hasHeaders","conf","headerClass","columnClass","minWidth","maxWidth","bound","currentTree","colNum","oldPrevHeaderInner","oldPrevColWidth","newPrevColWidth","clickedSep","newWidth","symbol","rootNode","mw","oldNodes","_hideOrShowNode","lenj","getHoldingCells","hc","grid_hide_column","grid_show_column","wcl","valClass","wideValClass","span","paddingleft","title","gridCellName","gridCellParentId","gridCellParent","gridCellPrev","gridCellPrevId","gridCellNext","gridCellNextId","gridCellChild","gridCellChildId","highlightSearch","isClicked","objData","cellClickHandler","sourceName","cellRightClickHandler","hoverInHandler","jsTreeInstance","hoverOutHandler","lid","peers","rendered","renderATitle","cellClass","wideCellClass","images","valueClass","valueClassPrefix","wideValueClass","wideValueClassPrefix","toRen","overflow-y","default","_delete_ids","get_rules","max_children","valid_children","max_depth","get_type","rules","set_type","old_type","old_icon","unique","trim_whitespace","duplicate","counter","wholerow"],"mappings":"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","file":"../skylark-widgets-hierarchy-all.js","sourcesContent":["define('skylark-langx-ns/_attach',[],function(){\r\n    return  function attach(obj1,path,obj2) {\r\n        if (typeof path == \"string\") {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length,\r\n            ns=obj1,\r\n            i=0,\r\n            name = path[i++];\r\n\r\n        while (i < length) {\r\n            ns = ns[name] = ns[name] || {};\r\n            name = path[i++];\r\n        }\r\n\r\n        return ns[name] = obj2;\r\n    }\r\n});\ndefine('skylark-langx-ns/ns',[\r\n    \"./_attach\"\r\n], function(_attach) {\r\n    var skylark = {\r\n    \tattach : function(path,obj) {\r\n    \t\treturn _attach(skylark,path,obj);\r\n    \t}\r\n    };\r\n    return skylark;\r\n});\r\n\ndefine('skylark-langx-ns/main',[\r\n\t\"./ns\"\r\n],function(skylark){\r\n\treturn skylark;\r\n});\ndefine('skylark-langx-ns', ['skylark-langx-ns/main'], function (main) { return main; });\n\ndefine('skylark-langx/skylark',[\r\n    \"skylark-langx-ns\"\r\n], function(ns) {\r\n\treturn ns;\r\n});\r\n\ndefine('skylark-utils-dom/skylark',[\"skylark-langx/skylark\"], function(skylark) {\r\n    return skylark;\r\n});\r\n\ndefine('skylark-utils-dom/dom',[\"./skylark\"], function(skylark) {\r\n\treturn skylark.dom = skylark.attach(\"dom\",{});\r\n});\r\n\ndefine('skylark-langx-types/types',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    var toString = {}.toString;\r\n    \r\n    var type = (function() {\r\n        var class2type = {};\r\n\r\n        // Populate the class2type map\r\n        \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \").forEach(function(name) {\r\n            class2type[\"[object \" + name + \"]\"] = name.toLowerCase();\r\n        });\r\n\r\n        return function type(obj) {\r\n            return obj == null ? String(obj) :\r\n                class2type[toString.call(obj)] || \"object\";\r\n        };\r\n    })();\r\n\r\n    function isArray(object) {\r\n        return object && object.constructor === Array;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is array-like. A value is considered array-like if it's\r\n     * not a function/string/element and has a `value.length` that's an integer greater than or\r\n     * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\r\n     *\r\n     * @category Lang\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\r\n     * @example\r\n     *\r\n     * isArrayLike([1, 2, 3])\r\n     * // => true\r\n     *\r\n     * isArrayLike(document.body.children)\r\n     * // => false\r\n     *\r\n     * isArrayLike('abc')\r\n     * // => true\r\n     *\r\n     * isArrayLike(Function)\r\n     * // => false\r\n     */    \r\n    function isArrayLike(obj) {\r\n        return !isString(obj) && !isHtmlNode(obj) && typeof obj.length == 'number' && !isFunction(obj);\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a boolean primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\r\n     * @example\r\n     *\r\n     * isBoolean(false)\r\n     * // => true\r\n     *\r\n     * isBoolean(null)\r\n     * // => false\r\n     */\r\n    function isBoolean(obj) {\r\n        return typeof(obj) === \"boolean\";\r\n    }\r\n\r\n    function isDefined(obj) {\r\n        return typeof obj !== 'undefined';\r\n    }\r\n\r\n    function isDocument(obj) {\r\n        return obj != null && obj.nodeType == obj.DOCUMENT_NODE;\r\n    }\r\n\r\n    function isEmptyObject(obj) {\r\n        var name;\r\n        for (name in obj) {\r\n            if (obj[name] !== null) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Function` object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a function, else `false`.\r\n     * @example\r\n     *\r\n     * isFunction(parseInt)\r\n     * // => true\r\n     *\r\n     * isFunction(/abc/)\r\n     * // => false\r\n     */\r\n    function isFunction(value) {\r\n        return type(value) == \"function\";\r\n    }\r\n\r\n    function isHtmlNode(obj) {\r\n        return obj && obj.nodeType; // obj instanceof Node; //Consider the elements in IFRAME\r\n    }\r\n\r\n    function isInstanceOf( /*Object*/ value, /*Type*/ type) {\r\n        //Tests whether the value is an instance of a type.\r\n        if (value === undefined) {\r\n            return false;\r\n        } else if (value === null || type == Object) {\r\n            return true;\r\n        } else if (typeof value === \"number\") {\r\n            return type === Number;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else if (typeof value === \"boolean\") {\r\n            return type === Boolean;\r\n        } else if (typeof value === \"string\") {\r\n            return type === String;\r\n        } else {\r\n            return (value instanceof type) || (value && value.isInstanceOf ? value.isInstanceOf(type) : false);\r\n        }\r\n    }\r\n\r\n    function isNull(value) {\r\n      return type(value) === \"null\";\r\n    }\r\n\r\n    function isNumber(obj) {\r\n        return typeof obj == 'number';\r\n    }\r\n\r\n    function isObject(obj) {\r\n        return type(obj) == \"object\";\r\n    }\r\n\r\n    function isPlainObject(obj) {\r\n        return isObject(obj) && !isWindow(obj) && Object.getPrototypeOf(obj) == Object.prototype;\r\n    }\r\n\r\n    function isString(obj) {\r\n        return typeof obj === 'string';\r\n    }\r\n\r\n    function isWindow(obj) {\r\n        return obj && obj == obj.window;\r\n    }\r\n\r\n    function isSameOrigin(href) {\r\n        if (href) {\r\n            var origin = location.protocol + '//' + location.hostname;\r\n            if (location.port) {\r\n                origin += ':' + location.port;\r\n            }\r\n            return href.startsWith(origin);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is classified as a `Symbol` primitive or object.\r\n     *\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\r\n     * @example\r\n     *\r\n     * _.isSymbol(Symbol.iterator);\r\n     * // => true\r\n     *\r\n     * _.isSymbol('abc');\r\n     * // => false\r\n     */\r\n    function isSymbol(value) {\r\n      return typeof value == 'symbol' ||\r\n        (isObjectLike(value) && objectToString.call(value) == symbolTag);\r\n    }\r\n\r\n    function isUndefined(value) {\r\n      return value === undefined\r\n    }\r\n\r\n    return skylark.attach(\"langx.types\",{\r\n\r\n        isArray: isArray,\r\n\r\n        isArrayLike: isArrayLike,\r\n\r\n        isBoolean: isBoolean,\r\n\r\n        isDefined: isDefined,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isEmpty : isEmptyObject,\r\n\r\n        isEmptyObject: isEmptyObject,\r\n\r\n        isFunction: isFunction,\r\n\r\n        isHtmlNode: isHtmlNode,\r\n\r\n        isNull: isNull,\r\n\r\n        isNumber: isNumber,\r\n\r\n        isNumeric: isNumber,\r\n\r\n        isObject: isObject,\r\n\r\n        isPlainObject: isPlainObject,\r\n\r\n        isString: isString,\r\n\r\n        isSameOrigin: isSameOrigin,\r\n\r\n        isSymbol : isSymbol,\r\n\r\n        isUndefined: isUndefined,\r\n\r\n        isWindow: isWindow,\r\n\r\n        type: type\r\n    });\r\n\r\n});\ndefine('skylark-langx-types/main',[\r\n\t\"./types\"\r\n],function(types){\r\n\treturn types;\r\n});\ndefine('skylark-langx-types', ['skylark-langx-types/main'], function (main) { return main; });\n\ndefine('skylark-langx-numbers/numbers',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-types\"\r\n],function(skylark,types){\r\n\tvar isObject = types.isObject,\r\n\t\tisSymbol = types.isSymbol;\r\n\r\n\tvar INFINITY = 1 / 0,\r\n\t    MAX_SAFE_INTEGER = 9007199254740991,\r\n\t    MAX_INTEGER = 1.7976931348623157e+308,\r\n\t    NAN = 0 / 0;\r\n\r\n\t/** Used to match leading and trailing whitespace. */\r\n\tvar reTrim = /^\\s+|\\s+$/g;\r\n\r\n\t/** Used to detect bad signed hexadecimal string values. */\r\n\tvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\r\n\r\n\t/** Used to detect binary string values. */\r\n\tvar reIsBinary = /^0b[01]+$/i;\r\n\r\n\t/** Used to detect octal string values. */\r\n\tvar reIsOctal = /^0o[0-7]+$/i;\r\n\r\n\t/** Used to detect unsigned integer values. */\r\n\tvar reIsUint = /^(?:0|[1-9]\\d*)$/;\r\n\r\n\t/** Built-in method references without a dependency on `root`. */\r\n\tvar freeParseInt = parseInt;\r\n\r\n\t/**\r\n\t * Converts `value` to a finite number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.12.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted number.\r\n\t * @example\r\n\t *\r\n\t * _.toFinite(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toFinite(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toFinite(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toFinite('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toFinite(value) {\r\n\t  if (!value) {\r\n\t    return value === 0 ? value : 0;\r\n\t  }\r\n\t  value = toNumber(value);\r\n\t  if (value === INFINITY || value === -INFINITY) {\r\n\t    var sign = (value < 0 ? -1 : 1);\r\n\t    return sign * MAX_INTEGER;\r\n\t  }\r\n\t  return value === value ? value : 0;\r\n\t}\r\n\r\n\t/**\r\n\t * Converts `value` to an integer.\r\n\t *\r\n\t * **Note:** This method is loosely based on\r\n\t * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @param {*} value The value to convert.\r\n\t * @returns {number} Returns the converted integer.\r\n\t * @example\r\n\t *\r\n\t * _.toInteger(3.2);\r\n\t * // => 3\r\n\t *\r\n\t * _.toInteger(Number.MIN_VALUE);\r\n\t * // => 0\r\n\t *\r\n\t * _.toInteger(Infinity);\r\n\t * // => 1.7976931348623157e+308\r\n\t *\r\n\t * _.toInteger('3.2');\r\n\t * // => 3\r\n\t */\r\n\tfunction toInteger(value) {\r\n\t  var result = toFinite(value),\r\n\t      remainder = result % 1;\r\n\r\n\t  return result === result ? (remainder ? result - remainder : result) : 0;\r\n\t}\t\r\n\r\n\t/**\r\n\t * Converts `value` to a number.\r\n\t *\r\n\t * @static\r\n\t * @memberOf _\r\n\t * @since 4.0.0\r\n\t * @category Lang\r\n\t * @param {*} value The value to process.\r\n\t * @returns {number} Returns the number.\r\n\t * @example\r\n\t *\r\n\t * _.toNumber(3.2);\r\n\t * // => 3.2\r\n\t *\r\n\t * _.toNumber(Number.MIN_VALUE);\r\n\t * // => 5e-324\r\n\t *\r\n\t * _.toNumber(Infinity);\r\n\t * // => Infinity\r\n\t *\r\n\t * _.toNumber('3.2');\r\n\t * // => 3.2\r\n\t */\r\n\tfunction toNumber(value) {\r\n\t  if (typeof value == 'number') {\r\n\t    return value;\r\n\t  }\r\n\t  if (isSymbol(value)) {\r\n\t    return NAN;\r\n\t  }\r\n\t  if (isObject(value)) {\r\n\t    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\r\n\t    value = isObject(other) ? (other + '') : other;\r\n\t  }\r\n\t  if (typeof value != 'string') {\r\n\t    return value === 0 ? value : +value;\r\n\t  }\r\n\t  value = value.replace(reTrim, '');\r\n\t  var isBinary = reIsBinary.test(value);\r\n\t  return (isBinary || reIsOctal.test(value))\r\n\t    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\r\n\t    : (reIsBadHex.test(value) ? NAN : +value);\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.numbers\",{\r\n\t\ttoFinite : toFinite,\r\n\t\ttoNumber : toNumber,\r\n\t\ttoInteger : toInteger\r\n\t});\r\n});\ndefine('skylark-langx-numbers/main',[\r\n\t\"./numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx-numbers', ['skylark-langx-numbers/main'], function (main) { return main; });\n\ndefine('skylark-langx-objects/objects',[\r\n    \"skylark-langx-ns/ns\",\r\n    \"skylark-langx-ns/_attach\",\r\n\t\"skylark-langx-types\",\r\n    \"skylark-langx-numbers\"\r\n],function(skylark,_attach,types,numbers){\r\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty,\r\n        slice = Array.prototype.slice,\r\n        isBoolean = types.isBoolean,\r\n        isFunction = types.isFunction,\r\n\t\tisObject = types.isObject,\r\n\t\tisPlainObject = types.isPlainObject,\r\n\t\tisArray = types.isArray,\r\n        isArrayLike = types.isArrayLike,\r\n        isString = types.isString,\r\n        toInteger = numbers.toInteger;\r\n\r\n     // An internal function for creating assigner functions.\r\n    function createAssigner(keysFunc, defaults) {\r\n        return function(obj) {\r\n          var length = arguments.length;\r\n          if (defaults) obj = Object(obj);  \r\n          if (length < 2 || obj == null) return obj;\r\n          for (var index = 1; index < length; index++) {\r\n            var source = arguments[index],\r\n                keys = keysFunc(source),\r\n                l = keys.length;\r\n            for (var i = 0; i < l; i++) {\r\n              var key = keys[i];\r\n              if (!defaults || obj[key] === void 0) obj[key] = source[key];\r\n            }\r\n          }\r\n          return obj;\r\n       };\r\n    }\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    var eq, deepEq;\r\n    var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n    eq = function(a, b, aStack, bStack) {\r\n        // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n        // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n        if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n        // `null` or `undefined` only equal to itself (strict comparison).\r\n        if (a == null || b == null) return false;\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        if (a !== a) return b !== b;\r\n        // Exhaust primitive checks\r\n        var type = typeof a;\r\n        if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n        return deepEq(a, b, aStack, bStack);\r\n    };\r\n\r\n    // Internal recursive comparison function for `isEqual`.\r\n    deepEq = function(a, b, aStack, bStack) {\r\n        // Unwrap any wrapped objects.\r\n        //if (a instanceof _) a = a._wrapped;\r\n        //if (b instanceof _) b = b._wrapped;\r\n        // Compare `[[Class]]` names.\r\n        var className = toString.call(a);\r\n        if (className !== toString.call(b)) return false;\r\n        switch (className) {\r\n            // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n            case '[object RegExp]':\r\n            // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n            case '[object String]':\r\n                // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n                // equivalent to `new String(\"5\")`.\r\n                return '' + a === '' + b;\r\n            case '[object Number]':\r\n                // `NaN`s are equivalent, but non-reflexive.\r\n                // Object(NaN) is equivalent to NaN.\r\n                if (+a !== +a) return +b !== +b;\r\n                // An `egal` comparison is performed for other numeric values.\r\n                return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n            case '[object Date]':\r\n            case '[object Boolean]':\r\n                // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n                // millisecond representations. Note that invalid dates with millisecond representations\r\n                // of `NaN` are not equivalent.\r\n                return +a === +b;\r\n            case '[object Symbol]':\r\n                return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n        }\r\n\r\n        var areArrays = className === '[object Array]';\r\n        if (!areArrays) {\r\n            if (typeof a != 'object' || typeof b != 'object') return false;\r\n            // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n            // from different frames are.\r\n            var aCtor = a.constructor, bCtor = b.constructor;\r\n            if (aCtor !== bCtor && !(isFunction(aCtor) && aCtor instanceof aCtor &&\r\n                               isFunction(bCtor) && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n                return false;\r\n            }\r\n        }\r\n        // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n        // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n        // Initializing stack of traversed objects.\r\n        // It's done here since we only need them for objects and arrays comparison.\r\n        aStack = aStack || [];\r\n        bStack = bStack || [];\r\n        var length = aStack.length;\r\n        while (length--) {\r\n            // Linear search. Performance is inversely proportional to the number of\r\n            // unique nested structures.\r\n            if (aStack[length] === a) return bStack[length] === b;\r\n        }\r\n\r\n        // Add the first object to the stack of traversed objects.\r\n        aStack.push(a);\r\n        bStack.push(b);\r\n\r\n        // Recursively compare objects and arrays.\r\n        if (areArrays) {\r\n            // Compare array lengths to determine if a deep comparison is necessary.\r\n            length = a.length;\r\n            if (length !== b.length) return false;\r\n            // Deep compare the contents, ignoring non-numeric properties.\r\n            while (length--) {\r\n                if (!eq(a[length], b[length], aStack, bStack)) return false;\r\n            }\r\n        } else {\r\n            // Deep compare objects.\r\n            var keys = Object.keys(a), key;\r\n            length = keys.length;\r\n            // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n            if (Object.keys(b).length !== length) return false;\r\n            while (length--) {\r\n                // Deep compare each member\r\n                key = keys[length];\r\n                if (!(b[key]!==undefined && eq(a[key], b[key], aStack, bStack))) return false;\r\n            }\r\n        }\r\n        // Remove the first object from the stack of traversed objects.\r\n        aStack.pop();\r\n        bStack.pop();\r\n        return true;\r\n    };\r\n\r\n    // Retrieve all the property names of an object.\r\n    function allKeys(obj) {\r\n        if (!isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function each(obj, callback) {\r\n        var length, key, i, undef, value;\r\n\r\n        if (obj) {\r\n            length = obj.length;\r\n\r\n            if (length === undef) {\r\n                // Loop object items\r\n                for (key in obj) {\r\n                    if (obj.hasOwnProperty(key)) {\r\n                        value = obj[key];\r\n                        if (callback.call(value, key, value) === false) {\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                // Loop array items\r\n                for (i = 0; i < length; i++) {\r\n                    value = obj[i];\r\n                    if (callback.call(value, i, value) === false) {\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function extend(target) {\r\n        var deep, args = slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n            mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    }\r\n\r\n    // Retrieve the names of an object's own properties.\r\n    // Delegates to **ECMAScript 5**'s native `Object.keys`.\r\n    function keys(obj) {\r\n        if (isObject(obj)) return [];\r\n        var keys = [];\r\n        for (var key in obj) if (has(obj, key)) keys.push(key);\r\n        return keys;\r\n    }\r\n\r\n    function has(obj, path) {\r\n        if (!isArray(path)) {\r\n            return obj != null && hasOwnProperty.call(obj, path);\r\n        }\r\n        var length = path.length;\r\n        for (var i = 0; i < length; i++) {\r\n            var key = path[i];\r\n            if (obj == null || !hasOwnProperty.call(obj, key)) {\r\n                return false;\r\n            }\r\n            obj = obj[key];\r\n        }\r\n        return !!length;\r\n    }\r\n\r\n    /**\r\n     * Checks if `value` is in `collection`. If `collection` is a string, it's\r\n     * checked for a substring of `value`, otherwise\r\n     * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n     * is used for equality comparisons. If `fromIndex` is negative, it's used as\r\n     * the offset from the end of `collection`.\r\n     *\r\n     * @static\r\n     * @memberOf _\r\n     * @since 0.1.0\r\n     * @category Collection\r\n     * @param {Array|Object|string} collection The collection to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} [fromIndex=0] The index to search from.\r\n     * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\r\n     * @returns {boolean} Returns `true` if `value` is found, else `false`.\r\n     * @example\r\n     *\r\n     * _.includes([1, 2, 3], 1);\r\n     * // => true\r\n     *\r\n     * _.includes([1, 2, 3], 1, 2);\r\n     * // => false\r\n     *\r\n     * _.includes({ 'a': 1, 'b': 2 }, 1);\r\n     * // => true\r\n     *\r\n     * _.includes('abcd', 'bc');\r\n     * // => true\r\n     */\r\n    function includes(collection, value, fromIndex, guard) {\r\n      collection = isArrayLike(collection) ? collection : values(collection);\r\n      fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\r\n\r\n      var length = collection.length;\r\n      if (fromIndex < 0) {\r\n        fromIndex = nativeMax(length + fromIndex, 0);\r\n      }\r\n      return isString(collection)\r\n        ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\r\n        : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\r\n    }\r\n\r\n\r\n   // Perform a deep comparison to check if two objects are equal.\r\n    function isEqual(a, b) {\r\n        return eq(a, b);\r\n    }\r\n\r\n    // Returns whether an object has a given set of `key:value` pairs.\r\n    function isMatch(object, attrs) {\r\n        var keys = keys(attrs), length = keys.length;\r\n        if (object == null) return !length;\r\n        var obj = Object(object);\r\n        for (var i = 0; i < length; i++) {\r\n          var key = keys[i];\r\n          if (attrs[key] !== obj[key] || !(key in obj)) return false;\r\n        }\r\n        return true;\r\n    }    \r\n\r\n    function _mixin(target, source, deep, safe) {\r\n        for (var key in source) {\r\n            //if (!source.hasOwnProperty(key)) {\r\n            //    continue;\r\n            //}\r\n            if (safe && target[key] !== undefined) {\r\n                continue;\r\n            }\r\n            if (deep && (isPlainObject(source[key]) || isArray(source[key]))) {\r\n                if (isPlainObject(source[key]) && !isPlainObject(target[key])) {\r\n                    target[key] = {};\r\n                }\r\n                if (isArray(source[key]) && !isArray(target[key])) {\r\n                    target[key] = [];\r\n                }\r\n                _mixin(target[key], source[key], deep, safe);\r\n            } else if (source[key] !== undefined) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n        return target;\r\n    }\r\n\r\n    function _parseMixinArgs(args) {\r\n        var params = slice.call(arguments, 0),\r\n            target = params.shift(),\r\n            deep = false;\r\n        if (isBoolean(params[params.length - 1])) {\r\n            deep = params.pop();\r\n        }\r\n\r\n        return {\r\n            target: target,\r\n            sources: params,\r\n            deep: deep\r\n        };\r\n    }\r\n\r\n    function mixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, false);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n   // Return a copy of the object without the blacklisted properties.\r\n    function omit(obj, prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = mixin({},obj);\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                delete result[pn];\r\n            }\r\n        }\r\n        return result;\r\n\r\n    }\r\n\r\n   // Return a copy of the object only containing the whitelisted properties.\r\n    function pick(obj,prop1,prop2) {\r\n        if (!obj) {\r\n            return null;\r\n        }\r\n        var result = {};\r\n        for(var i=1;i<arguments.length;i++) {\r\n            var pn = arguments[i];\r\n            if (pn in obj) {\r\n                result[pn] = obj[pn];\r\n            }\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function removeItem(items, item) {\r\n        if (isArray(items)) {\r\n            var idx = items.indexOf(item);\r\n            if (idx != -1) {\r\n                items.splice(idx, 1);\r\n            }\r\n        } else if (isPlainObject(items)) {\r\n            for (var key in items) {\r\n                if (items[key] == item) {\r\n                    delete items[key];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function result(obj, path, fallback) {\r\n        if (!isArray(path)) {\r\n            path = path.split(\".\");//[path]\r\n        };\r\n        var length = path.length;\r\n        if (!length) {\r\n          return isFunction(fallback) ? fallback.call(obj) : fallback;\r\n        }\r\n        for (var i = 0; i < length; i++) {\r\n          var prop = obj == null ? void 0 : obj[path[i]];\r\n          if (prop === void 0) {\r\n            prop = fallback;\r\n            i = length; // Ensure we don't continue iterating.\r\n          }\r\n          obj = isFunction(prop) ? prop.call(obj) : prop;\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    function safeMixin() {\r\n        var args = _parseMixinArgs.apply(this, arguments);\r\n\r\n        args.sources.forEach(function(source) {\r\n            _mixin(args.target, source, args.deep, true);\r\n        });\r\n        return args.target;\r\n    }\r\n\r\n    // Retrieve the values of an object's properties.\r\n    function values(obj) {\r\n        var keys = allKeys(obj);\r\n        var length = keys.length;\r\n        var values = Array(length);\r\n        for (var i = 0; i < length; i++) {\r\n            values[i] = obj[keys[i]];\r\n        }\r\n        return values;\r\n    }\r\n\r\n    function clone( /*anything*/ src,checkCloneMethod) {\r\n        var copy;\r\n        if (src === undefined || src === null) {\r\n            copy = src;\r\n        } else if (checkCloneMethod && src.clone) {\r\n            copy = src.clone();\r\n        } else if (isArray(src)) {\r\n            copy = [];\r\n            for (var i = 0; i < src.length; i++) {\r\n                copy.push(clone(src[i]));\r\n            }\r\n        } else if (isPlainObject(src)) {\r\n            copy = {};\r\n            for (var key in src) {\r\n                copy[key] = clone(src[key]);\r\n            }\r\n        } else {\r\n            copy = src;\r\n        }\r\n\r\n        return copy;\r\n\r\n    }\r\n\r\n    return skylark.attach(\"langx.objects\",{\r\n        allKeys: allKeys,\r\n\r\n        attach : _attach,\r\n\r\n        clone: clone,\r\n\r\n        defaults : createAssigner(allKeys, true),\r\n\r\n        each : each,\r\n\r\n        extend : extend,\r\n\r\n        has: has,\r\n\r\n        isEqual: isEqual,   \r\n\r\n        includes: includes,\r\n\r\n        isMatch: isMatch,\r\n\r\n        keys: keys,\r\n\r\n        mixin: mixin,\r\n\r\n        omit: omit,\r\n\r\n        pick: pick,\r\n\r\n        removeItem: removeItem,\r\n\r\n        result : result,\r\n        \r\n        safeMixin: safeMixin,\r\n\r\n        values: values\r\n    });\r\n\r\n\r\n});\ndefine('skylark-langx-objects/main',[\r\n\t\"./objects\"\r\n],function(objects){\r\n\treturn objects;\r\n});\ndefine('skylark-langx-objects', ['skylark-langx-objects/main'], function (main) { return main; });\n\ndefine('skylark-langx-arrays/arrays',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar filter = Array.prototype.filter,\r\n\t\tisArrayLike = types.isArrayLike;\r\n\r\n    /**\r\n     * The base implementation of `_.findIndex` and `_.findLastIndex` without\r\n     * support for iteratee shorthands.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {Function} predicate The function invoked per iteration.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @param {boolean} [fromRight] Specify iterating from right to left.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseFindIndex(array, predicate, fromIndex, fromRight) {\r\n      var length = array.length,\r\n          index = fromIndex + (fromRight ? 1 : -1);\r\n\r\n      while ((fromRight ? index-- : ++index < length)) {\r\n        if (predicate(array[index], index, array)) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\r\n     *\r\n     * @param {Array} array The array to inspect.\r\n     * @param {*} value The value to search for.\r\n     * @param {number} fromIndex The index to search from.\r\n     * @returns {number} Returns the index of the matched value, else `-1`.\r\n     */\r\n    function baseIndexOf(array, value, fromIndex) {\r\n      if (value !== value) {\r\n        return baseFindIndex(array, baseIsNaN, fromIndex);\r\n      }\r\n      var index = fromIndex - 1,\r\n          length = array.length;\r\n\r\n      while (++index < length) {\r\n        if (array[index] === value) {\r\n          return index;\r\n        }\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The base implementation of `isNaN` without support for number objects.\r\n     *\r\n     * @private\r\n     * @param {*} value The value to check.\r\n     * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\r\n     */\r\n    function baseIsNaN(value) {\r\n      return value !== value;\r\n    }\r\n\r\n\r\n    function compact(array) {\r\n        return filter.call(array, function(item) {\r\n            return item != null;\r\n        });\r\n    }\r\n\r\n    function filter2(array,func) {\r\n      return filter.call(array,func);\r\n    }\r\n\r\n    function flatten(array) {\r\n        if (isArrayLike(array)) {\r\n            var result = [];\r\n            for (var i = 0; i < array.length; i++) {\r\n                var item = array[i];\r\n                if (isArrayLike(item)) {\r\n                    for (var j = 0; j < item.length; j++) {\r\n                        result.push(item[j]);\r\n                    }\r\n                } else {\r\n                    result.push(item);\r\n                }\r\n            }\r\n            return result;\r\n        } else {\r\n            return array;\r\n        }\r\n        //return array.length > 0 ? concat.apply([], array) : array;\r\n    }\r\n\r\n    function grep(array, callback) {\r\n        var out = [];\r\n\r\n        objects.each(array, function(i, item) {\r\n            if (callback(item, i)) {\r\n                out.push(item);\r\n            }\r\n        });\r\n\r\n        return out;\r\n    }\r\n\r\n    function inArray(item, array) {\r\n        if (!array) {\r\n            return -1;\r\n        }\r\n        var i;\r\n\r\n        if (array.indexOf) {\r\n            return array.indexOf(item);\r\n        }\r\n\r\n        i = array.length;\r\n        while (i--) {\r\n            if (array[i] === item) {\r\n                return i;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    function makeArray(obj, offset, startWith) {\r\n       if (isArrayLike(obj) ) {\r\n        return (startWith || []).concat(Array.prototype.slice.call(obj, offset || 0));\r\n      }\r\n\r\n      // array of single index\r\n      return [ obj ];             \r\n    }\r\n\r\n\r\n    function forEach (arr, fn) {\r\n      if (arr.forEach) return arr.forEach(fn)\r\n      for (var i = 0; i < arr.length; i++) fn(arr[i], i);\r\n    }\r\n\r\n    function map(elements, callback) {\r\n        var value, values = [],\r\n            i, key\r\n        if (isArrayLike(elements))\r\n            for (i = 0; i < elements.length; i++) {\r\n                value = callback.call(elements[i], elements[i], i);\r\n                if (value != null) values.push(value)\r\n            }\r\n        else\r\n            for (key in elements) {\r\n                value = callback.call(elements[key], elements[key], key);\r\n                if (value != null) values.push(value)\r\n            }\r\n        return flatten(values)\r\n    }\r\n\r\n\r\n    function merge( first, second ) {\r\n      var l = second.length,\r\n          i = first.length,\r\n          j = 0;\r\n\r\n      if ( typeof l === \"number\" ) {\r\n        for ( ; j < l; j++ ) {\r\n          first[ i++ ] = second[ j ];\r\n        }\r\n      } else {\r\n        while ( second[j] !== undefined ) {\r\n          first[ i++ ] = second[ j++ ];\r\n        }\r\n      }\r\n\r\n      first.length = i;\r\n\r\n      return first;\r\n    }\r\n\r\n    function reduce(array,callback,initialValue) {\r\n        return Array.prototype.reduce.call(array,callback,initialValue);\r\n    }\r\n\r\n    function uniq(array) {\r\n        return filter.call(array, function(item, idx) {\r\n            return array.indexOf(item) == idx;\r\n        })\r\n    }\r\n\r\n    return skylark.attach(\"langx.arrays\",{\r\n        baseFindIndex: baseFindIndex,\r\n\r\n        baseIndexOf : baseIndexOf,\r\n        \r\n        compact: compact,\r\n\r\n        first : function(items,n) {\r\n            if (n) {\r\n                return items.slice(0,n);\r\n            } else {\r\n                return items[0];\r\n            }\r\n        },\r\n\r\n        filter : filter2,\r\n        \r\n        flatten: flatten,\r\n\r\n        grep: grep,\r\n\r\n        inArray: inArray,\r\n\r\n        makeArray: makeArray,\r\n\r\n        merge : merge,\r\n\r\n        forEach : forEach,\r\n\r\n        map : map,\r\n        \r\n        reduce : reduce,\r\n\r\n        uniq : uniq\r\n\r\n    });\r\n});\ndefine('skylark-langx-arrays/main',[\r\n\t\"./arrays\"\r\n],function(arrays){\r\n\treturn arrays;\r\n});\ndefine('skylark-langx-arrays', ['skylark-langx-arrays/main'], function (main) { return main; });\n\ndefine('skylark-langx/arrays',[\r\n\t\"skylark-langx-arrays\"\r\n],function(arrays){\r\n  return arrays;\r\n});\ndefine('skylark-langx-klass/klass',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n],function(skylark,types,objects,arrays){\r\n    var uniq = arrays.uniq,\r\n        has = objects.has,\r\n        mixin = objects.mixin,\r\n        isArray = types.isArray,\r\n        isDefined = types.isDefined;\r\n\r\n/* for reference \r\n function klass(props,parent) {\r\n    var ctor = function(){\r\n        this._construct();\r\n    };\r\n    ctor.prototype = props;\r\n    if (parent) {\r\n        ctor._proto_ = parent;\r\n        props.__proto__ = parent.prototype;\r\n    }\r\n    return ctor;\r\n}\r\n\r\n// Type some JavaScript code here.\r\nlet animal = klass({\r\n  _construct(){\r\n      this.name = this.name + \",hi\";\r\n  },\r\n    \r\n  name: \"Animal\",\r\n  eat() {         // [[HomeObject]] == animal\r\n    alert(`${this.name} eats.`);\r\n  }\r\n    \r\n    \r\n});\r\n\r\n\r\nlet rabbit = klass({\r\n  name: \"Rabbit\",\r\n  _construct(){\r\n      super._construct();\r\n  },\r\n  eat() {         // [[HomeObject]] == rabbit\r\n    super.eat();\r\n  }\r\n},animal);\r\n\r\nlet longEar = klass({\r\n  name: \"Long Ear\",\r\n  eat() {         // [[HomeObject]] == longEar\r\n    super.eat();\r\n  }\r\n},rabbit);\r\n*/\r\n    \r\n    function inherit(ctor, base) {\r\n        var f = function() {};\r\n        f.prototype = base.prototype;\r\n\r\n        ctor.prototype = new f();\r\n    }\r\n\r\n    var f1 = function() {\r\n        function extendClass(ctor, props, options) {\r\n            // Copy the properties to the prototype of the class.\r\n            var proto = ctor.prototype,\r\n                _super = ctor.superclass.prototype,\r\n                noOverrided = options && options.noOverrided,\r\n                overrides = options && options.overrides || {};\r\n\r\n            for (var name in props) {\r\n                if (name === \"constructor\") {\r\n                    continue;\r\n                }\r\n\r\n                // Check if we're overwriting an existing function\r\n                var prop = props[name];\r\n                if (typeof props[name] == \"function\") {\r\n                    proto[name] =  !prop._constructor && !noOverrided && typeof _super[name] == \"function\" ?\r\n                          (function(name, fn, superFn) {\r\n                            return function() {\r\n                                var tmp = this.overrided;\r\n\r\n                                // Add a new ._super() method that is the same method\r\n                                // but on the super-class\r\n                                this.overrided = superFn;\r\n\r\n                                // The method only need to be bound temporarily, so we\r\n                                // remove it when we're done executing\r\n                                var ret = fn.apply(this, arguments);\r\n\r\n                                this.overrided = tmp;\r\n\r\n                                return ret;\r\n                            };\r\n                        })(name, prop, _super[name]) :\r\n                        prop;\r\n                } else if (types.isPlainObject(prop) && prop!==null && (prop.get)) {\r\n                    Object.defineProperty(proto,name,prop);\r\n                } else {\r\n                    proto[name] = prop;\r\n                }\r\n            }\r\n            return ctor;\r\n        }\r\n\r\n        function serialMixins(ctor,mixins) {\r\n            var result = [];\r\n\r\n            mixins.forEach(function(mixin){\r\n                if (has(mixin,\"__mixins__\")) {\r\n                     throw new Error(\"nested mixins\");\r\n                }\r\n                var clss = [];\r\n                while (mixin) {\r\n                    clss.unshift(mixin);\r\n                    mixin = mixin.superclass;\r\n                }\r\n                result = result.concat(clss);\r\n            });\r\n\r\n            result = uniq(result);\r\n\r\n            result = result.filter(function(mixin){\r\n                var cls = ctor;\r\n                while (cls) {\r\n                    if (mixin === cls) {\r\n                        return false;\r\n                    }\r\n                    if (has(cls,\"__mixins__\")) {\r\n                        var clsMixines = cls[\"__mixins__\"];\r\n                        for (var i=0; i<clsMixines.length;i++) {\r\n                            if (clsMixines[i]===mixin) {\r\n                                return false;\r\n                            }\r\n                        }\r\n                    }\r\n                    cls = cls.superclass;\r\n                }\r\n                return true;\r\n            });\r\n\r\n            if (result.length>0) {\r\n                return result;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        function mergeMixins(ctor,mixins) {\r\n            var newCtor =ctor;\r\n            for (var i=0;i<mixins.length;i++) {\r\n                var xtor = new Function();\r\n                xtor.prototype = Object.create(newCtor.prototype);\r\n                xtor.__proto__ = newCtor;\r\n                xtor.superclass = null;\r\n                mixin(xtor.prototype,mixins[i].prototype);\r\n                xtor.prototype.__mixin__ = mixins[i];\r\n                newCtor = xtor;\r\n            }\r\n\r\n            return newCtor;\r\n        }\r\n\r\n        function _constructor ()  {\r\n            if (this._construct) {\r\n                return this._construct.apply(this, arguments);\r\n            } else  if (this.init) {\r\n                return this.init.apply(this, arguments);\r\n            }\r\n        }\r\n\r\n        return function createClass(props, parent, mixins,options) {\r\n            if (isArray(parent)) {\r\n                options = mixins;\r\n                mixins = parent;\r\n                parent = null;\r\n            }\r\n            parent = parent || Object;\r\n\r\n            if (isDefined(mixins) && !isArray(mixins)) {\r\n                options = mixins;\r\n                mixins = false;\r\n            }\r\n\r\n            var innerParent = parent;\r\n\r\n            if (mixins) {\r\n                mixins = serialMixins(innerParent,mixins);\r\n            }\r\n\r\n            if (mixins) {\r\n                innerParent = mergeMixins(innerParent,mixins);\r\n            }\r\n\r\n            var klassName = props.klassName || \"\",\r\n                ctor = new Function(\r\n                    \"return function \" + klassName + \"() {\" +\r\n                    \"var inst = this,\" +\r\n                    \" ctor = arguments.callee;\" +\r\n                    \"if (!(inst instanceof ctor)) {\" +\r\n                    \"inst = Object.create(ctor.prototype);\" +\r\n                    \"}\" +\r\n                    \"return ctor._constructor.apply(inst, arguments) || inst;\" + \r\n                    \"}\"\r\n                )();\r\n\r\n\r\n            // Populate our constructed prototype object\r\n            ctor.prototype = Object.create(innerParent.prototype);\r\n\r\n            // Enforce the constructor to be what we expect\r\n            ctor.prototype.constructor = ctor;\r\n            ctor.superclass = parent;\r\n\r\n            // And make this class extendable\r\n            ctor.__proto__ = innerParent;\r\n\r\n\r\n            if (!ctor._constructor) {\r\n                ctor._constructor = _constructor;\r\n            } \r\n\r\n            if (mixins) {\r\n                ctor.__mixins__ = mixins;\r\n            }\r\n\r\n            if (!ctor.partial) {\r\n                ctor.partial = function(props, options) {\r\n                    return extendClass(this, props, options);\r\n                };\r\n            }\r\n            if (!ctor.inherit) {\r\n                ctor.inherit = function(props, mixins,options) {\r\n                    return createClass(props, this, mixins,options);\r\n                };\r\n            }\r\n\r\n            ctor.partial(props, options);\r\n\r\n            return ctor;\r\n        };\r\n    }\r\n\r\n    var createClass = f1();\r\n\r\n    return skylark.attach(\"langx.klass\",createClass);\r\n});\ndefine('skylark-langx-klass/main',[\r\n\t\"./klass\"\r\n],function(klass){\r\n\treturn klass;\r\n});\ndefine('skylark-langx-klass', ['skylark-langx-klass/main'], function (main) { return main; });\n\ndefine('skylark-langx/klass',[\r\n    \"skylark-langx-klass\"\r\n],function(klass){\r\n    return klass;\r\n});\ndefine('skylark-langx/ArrayStore',[\r\n    \"./klass\"\r\n],function(klass){\r\n    var SimpleQueryEngine = function(query, options){\r\n        // summary:\r\n        //      Simple query engine that matches using filter functions, named filter\r\n        //      functions or objects by name-value on a query object hash\r\n        //\r\n        // description:\r\n        //      The SimpleQueryEngine provides a way of getting a QueryResults through\r\n        //      the use of a simple object hash as a filter.  The hash will be used to\r\n        //      match properties on data objects with the corresponding value given. In\r\n        //      other words, only exact matches will be returned.\r\n        //\r\n        //      This function can be used as a template for more complex query engines;\r\n        //      for example, an engine can be created that accepts an object hash that\r\n        //      contains filtering functions, or a string that gets evaluated, etc.\r\n        //\r\n        //      When creating a new dojo.store, simply set the store's queryEngine\r\n        //      field as a reference to this function.\r\n        //\r\n        // query: Object\r\n        //      An object hash with fields that may match fields of items in the store.\r\n        //      Values in the hash will be compared by normal == operator, but regular expressions\r\n        //      or any object that provides a test() method are also supported and can be\r\n        //      used to match strings by more complex expressions\r\n        //      (and then the regex's or object's test() method will be used to match values).\r\n        //\r\n        // options: dojo/store/api/Store.QueryOptions?\r\n        //      An object that contains optional information such as sort, start, and count.\r\n        //\r\n        // returns: Function\r\n        //      A function that caches the passed query under the field \"matches\".  See any\r\n        //      of the \"query\" methods on dojo.stores.\r\n        //\r\n        // example:\r\n        //      Define a store with a reference to this engine, and set up a query method.\r\n        //\r\n        //  |   var myStore = function(options){\r\n        //  |       //  ...more properties here\r\n        //  |       this.queryEngine = SimpleQueryEngine;\r\n        //  |       //  define our query method\r\n        //  |       this.query = function(query, options){\r\n        //  |           return QueryResults(this.queryEngine(query, options)(this.data));\r\n        //  |       };\r\n        //  |   };\r\n\r\n        // create our matching query function\r\n        switch(typeof query){\r\n            default:\r\n                throw new Error(\"Can not query with a \" + typeof query);\r\n            case \"object\": case \"undefined\":\r\n                var queryObject = query;\r\n                query = function(object){\r\n                    for(var key in queryObject){\r\n                        var required = queryObject[key];\r\n                        if(required && required.test){\r\n                            // an object can provide a test method, which makes it work with regex\r\n                            if(!required.test(object[key], object)){\r\n                                return false;\r\n                            }\r\n                        }else if(required != object[key]){\r\n                            return false;\r\n                        }\r\n                    }\r\n                    return true;\r\n                };\r\n                break;\r\n            case \"string\":\r\n                // named query\r\n                if(!this[query]){\r\n                    throw new Error(\"No filter function \" + query + \" was found in store\");\r\n                }\r\n                query = this[query];\r\n                // fall through\r\n            case \"function\":\r\n                // fall through\r\n        }\r\n        \r\n        function filter(arr, callback, thisObject){\r\n            // summary:\r\n            //      Returns a new Array with those items from arr that match the\r\n            //      condition implemented by callback.\r\n            // arr: Array\r\n            //      the array to iterate over.\r\n            // callback: Function|String\r\n            //      a function that is invoked with three arguments (item,\r\n            //      index, array). The return of this function is expected to\r\n            //      be a boolean which determines whether the passed-in item\r\n            //      will be included in the returned array.\r\n            // thisObject: Object?\r\n            //      may be used to scope the call to callback\r\n            // returns: Array\r\n            // description:\r\n            //      This function corresponds to the JavaScript 1.6 Array.filter() method, with one difference: when\r\n            //      run over sparse arrays, this implementation passes the \"holes\" in the sparse array to\r\n            //      the callback function with a value of undefined. JavaScript 1.6's filter skips the holes in the sparse array.\r\n            //      For more details, see:\r\n            //      https://developer.mozilla.org/en/Core_JavaScript_1.5_Reference/Objects/Array/filter\r\n            // example:\r\n            //  | // returns [2, 3, 4]\r\n            //  | array.filter([1, 2, 3, 4], function(item){ return item>1; });\r\n\r\n            // TODO: do we need \"Ctr\" here like in map()?\r\n            var i = 0, l = arr && arr.length || 0, out = [], value;\r\n            if(l && typeof arr == \"string\") arr = arr.split(\"\");\r\n            if(typeof callback == \"string\") callback = cache[callback] || buildFn(callback);\r\n            if(thisObject){\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback.call(thisObject, value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }else{\r\n                for(; i < l; ++i){\r\n                    value = arr[i];\r\n                    if(callback(value, i, arr)){\r\n                        out.push(value);\r\n                    }\r\n                }\r\n            }\r\n            return out; // Array\r\n        }\r\n\r\n        function execute(array){\r\n            // execute the whole query, first we filter\r\n            var results = filter(array, query);\r\n            // next we sort\r\n            var sortSet = options && options.sort;\r\n            if(sortSet){\r\n                results.sort(typeof sortSet == \"function\" ? sortSet : function(a, b){\r\n                    for(var sort, i=0; sort = sortSet[i]; i++){\r\n                        var aValue = a[sort.attribute];\r\n                        var bValue = b[sort.attribute];\r\n                        // valueOf enables proper comparison of dates\r\n                        aValue = aValue != null ? aValue.valueOf() : aValue;\r\n                        bValue = bValue != null ? bValue.valueOf() : bValue;\r\n                        if (aValue != bValue){\r\n                            // modified by lwf 2016/07/09\r\n                            //return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                            return !!sort.descending == (aValue == null || aValue > bValue) ? -1 : 1;\r\n                        }\r\n                    }\r\n                    return 0;\r\n                });\r\n            }\r\n            // now we paginate\r\n            if(options && (options.start || options.count)){\r\n                var total = results.length;\r\n                results = results.slice(options.start || 0, (options.start || 0) + (options.count || Infinity));\r\n                results.total = total;\r\n            }\r\n            return results;\r\n        }\r\n        execute.matches = query;\r\n        return execute;\r\n    };\r\n\r\n    var QueryResults = function(results){\r\n        // summary:\r\n        //      A function that wraps the results of a store query with additional\r\n        //      methods.\r\n        // description:\r\n        //      QueryResults is a basic wrapper that allows for array-like iteration\r\n        //      over any kind of returned data from a query.  While the simplest store\r\n        //      will return a plain array of data, other stores may return deferreds or\r\n        //      promises; this wrapper makes sure that *all* results can be treated\r\n        //      the same.\r\n        //\r\n        //      Additional methods include `forEach`, `filter` and `map`.\r\n        // results: Array|dojo/promise/Promise\r\n        //      The result set as an array, or a promise for an array.\r\n        // returns:\r\n        //      An array-like object that can be used for iterating over.\r\n        // example:\r\n        //      Query a store and iterate over the results.\r\n        //\r\n        //  |   store.query({ prime: true }).forEach(function(item){\r\n        //  |       //  do something\r\n        //  |   });\r\n\r\n        if(!results){\r\n            return results;\r\n        }\r\n\r\n        var isPromise = !!results.then;\r\n        // if it is a promise it may be frozen\r\n        if(isPromise){\r\n            results = Object.delegate(results);\r\n        }\r\n        function addIterativeMethod(method){\r\n            // Always add the iterative methods so a QueryResults is\r\n            // returned whether the environment is ES3 or ES5\r\n            results[method] = function(){\r\n                var args = arguments;\r\n                var result = Deferred.when(results, function(results){\r\n                    //Array.prototype.unshift.call(args, results);\r\n                    return QueryResults(Array.prototype[method].apply(results, args));\r\n                });\r\n                // forEach should only return the result of when()\r\n                // when we're wrapping a promise\r\n                if(method !== \"forEach\" || isPromise){\r\n                    return result;\r\n                }\r\n            };\r\n        }\r\n\r\n        addIterativeMethod(\"forEach\");\r\n        addIterativeMethod(\"filter\");\r\n        addIterativeMethod(\"map\");\r\n        if(results.total == null){\r\n            results.total = Deferred.when(results, function(results){\r\n                return results.length;\r\n            });\r\n        }\r\n        return results; // Object\r\n    };\r\n\r\n    var ArrayStore = klass({\r\n        \"klassName\": \"ArrayStore\",\r\n\r\n        \"queryEngine\": SimpleQueryEngine,\r\n        \r\n        \"idProperty\": \"id\",\r\n\r\n\r\n        get: function(id){\r\n            // summary:\r\n            //      Retrieves an object by its identity\r\n            // id: Number\r\n            //      The identity to use to lookup the object\r\n            // returns: Object\r\n            //      The object in the store that matches the given id.\r\n            return this.data[this.index[id]];\r\n        },\r\n\r\n        getIdentity: function(object){\r\n            return object[this.idProperty];\r\n        },\r\n\r\n        put: function(object, options){\r\n            var data = this.data,\r\n                index = this.index,\r\n                idProperty = this.idProperty;\r\n            var id = object[idProperty] = (options && \"id\" in options) ? options.id : idProperty in object ? object[idProperty] : Math.random();\r\n            if(id in index){\r\n                // object exists\r\n                if(options && options.overwrite === false){\r\n                    throw new Error(\"Object already exists\");\r\n                }\r\n                // replace the entry in data\r\n                data[index[id]] = object;\r\n            }else{\r\n                // add the new object\r\n                index[id] = data.push(object) - 1;\r\n            }\r\n            return id;\r\n        },\r\n\r\n        add: function(object, options){\r\n            (options = options || {}).overwrite = false;\r\n            // call put with overwrite being false\r\n            return this.put(object, options);\r\n        },\r\n\r\n        remove: function(id){\r\n            // summary:\r\n            //      Deletes an object by its identity\r\n            // id: Number\r\n            //      The identity to use to delete the object\r\n            // returns: Boolean\r\n            //      Returns true if an object was removed, falsy (undefined) if no object matched the id\r\n            var index = this.index;\r\n            var data = this.data;\r\n            if(id in index){\r\n                data.splice(index[id], 1);\r\n                // now we have to reindex\r\n                this.setData(data);\r\n                return true;\r\n            }\r\n        },\r\n        query: function(query, options){\r\n            // summary:\r\n            //      Queries the store for objects.\r\n            // query: Object\r\n            //      The query to use for retrieving objects from the store.\r\n            // options: dojo/store/api/Store.QueryOptions?\r\n            //      The optional arguments to apply to the resultset.\r\n            // returns: dojo/store/api/Store.QueryResults\r\n            //      The results of the query, extended with iterative methods.\r\n            //\r\n            // example:\r\n            //      Given the following store:\r\n            //\r\n            //  |   var store = new Memory({\r\n            //  |       data: [\r\n            //  |           {id: 1, name: \"one\", prime: false },\r\n            //  |           {id: 2, name: \"two\", even: true, prime: true},\r\n            //  |           {id: 3, name: \"three\", prime: true},\r\n            //  |           {id: 4, name: \"four\", even: true, prime: false},\r\n            //  |           {id: 5, name: \"five\", prime: true}\r\n            //  |       ]\r\n            //  |   });\r\n            //\r\n            //  ...find all items where \"prime\" is true:\r\n            //\r\n            //  |   var results = store.query({ prime: true });\r\n            //\r\n            //  ...or find all items where \"even\" is true:\r\n            //\r\n            //  |   var results = store.query({ even: true });\r\n            return QueryResults(this.queryEngine(query, options)(this.data));\r\n        },\r\n\r\n        setData: function(data){\r\n            // summary:\r\n            //      Sets the given data as the source for this store, and indexes it\r\n            // data: Object[]\r\n            //      An array of objects to use as the source of data.\r\n            if(data.items){\r\n                // just for convenience with the data format IFRS expects\r\n                this.idProperty = data.identifier || this.idProperty;\r\n                data = this.data = data.items;\r\n            }else{\r\n                this.data = data;\r\n            }\r\n            this.index = {};\r\n            for(var i = 0, l = data.length; i < l; i++){\r\n                this.index[data[i][this.idProperty]] = i;\r\n            }\r\n        },\r\n\r\n        init: function(options) {\r\n            for(var i in options){\r\n                this[i] = options[i];\r\n            }\r\n            this.setData(this.data || []);\r\n        }\r\n\r\n    });\r\n\r\n\treturn ArrayStore;\r\n});\ndefine('skylark-langx-aspect/aspect',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\r\n  var undefined, nextId = 0;\r\n    function advise(dispatcher, type, advice, receiveArguments){\r\n        var previous = dispatcher[type];\r\n        var around = type == \"around\";\r\n        var signal;\r\n        if(around){\r\n            var advised = advice(function(){\r\n                return previous.advice(this, arguments);\r\n            });\r\n            signal = {\r\n                remove: function(){\r\n                    if(advised){\r\n                        advised = dispatcher = advice = null;\r\n                    }\r\n                },\r\n                advice: function(target, args){\r\n                    return advised ?\r\n                        advised.apply(target, args) :  // called the advised function\r\n                        previous.advice(target, args); // cancelled, skip to next one\r\n                }\r\n            };\r\n        }else{\r\n            // create the remove handler\r\n            signal = {\r\n                remove: function(){\r\n                    if(signal.advice){\r\n                        var previous = signal.previous;\r\n                        var next = signal.next;\r\n                        if(!next && !previous){\r\n                            delete dispatcher[type];\r\n                        }else{\r\n                            if(previous){\r\n                                previous.next = next;\r\n                            }else{\r\n                                dispatcher[type] = next;\r\n                            }\r\n                            if(next){\r\n                                next.previous = previous;\r\n                            }\r\n                        }\r\n\r\n                        // remove the advice to signal that this signal has been removed\r\n                        dispatcher = advice = signal.advice = null;\r\n                    }\r\n                },\r\n                id: nextId++,\r\n                advice: advice,\r\n                receiveArguments: receiveArguments\r\n            };\r\n        }\r\n        if(previous && !around){\r\n            if(type == \"after\"){\r\n                // add the listener to the end of the list\r\n                // note that we had to change this loop a little bit to workaround a bizarre IE10 JIT bug\r\n                while(previous.next && (previous = previous.next)){}\r\n                previous.next = signal;\r\n                signal.previous = previous;\r\n            }else if(type == \"before\"){\r\n                // add to beginning\r\n                dispatcher[type] = signal;\r\n                signal.next = previous;\r\n                previous.previous = signal;\r\n            }\r\n        }else{\r\n            // around or first one just replaces\r\n            dispatcher[type] = signal;\r\n        }\r\n        return signal;\r\n    }\r\n    function aspect(type){\r\n        return function(target, methodName, advice, receiveArguments){\r\n            var existing = target[methodName], dispatcher;\r\n            if(!existing || existing.target != target){\r\n                // no dispatcher in place\r\n                target[methodName] = dispatcher = function(){\r\n                    var executionId = nextId;\r\n                    // before advice\r\n                    var args = arguments;\r\n                    var before = dispatcher.before;\r\n                    while(before){\r\n                        args = before.advice.apply(this, args) || args;\r\n                        before = before.next;\r\n                    }\r\n                    // around advice\r\n                    if(dispatcher.around){\r\n                        var results = dispatcher.around.advice(this, args);\r\n                    }\r\n                    // after advice\r\n                    var after = dispatcher.after;\r\n                    while(after && after.id < executionId){\r\n                        if(after.receiveArguments){\r\n                            var newResults = after.advice.apply(this, args);\r\n                            // change the return value only if a new value was returned\r\n                            results = newResults === undefined ? results : newResults;\r\n                        }else{\r\n                            results = after.advice.call(this, results, args);\r\n                        }\r\n                        after = after.next;\r\n                    }\r\n                    return results;\r\n                };\r\n                if(existing){\r\n                    dispatcher.around = {advice: function(target, args){\r\n                        return existing.apply(target, args);\r\n                    }};\r\n                }\r\n                dispatcher.target = target;\r\n            }\r\n            var results = advise((dispatcher || existing), type, advice, receiveArguments);\r\n            advice = null;\r\n            return results;\r\n        };\r\n    }\r\n\r\n    return skylark.attach(\"langx.aspect\",{\r\n        after: aspect(\"after\"),\r\n \r\n        around: aspect(\"around\"),\r\n        \r\n        before: aspect(\"before\")\r\n    });\r\n});\ndefine('skylark-langx-aspect/main',[\r\n\t\"./aspect\"\r\n],function(aspect){\r\n\treturn aspect;\r\n});\ndefine('skylark-langx-aspect', ['skylark-langx-aspect/main'], function (main) { return main; });\n\ndefine('skylark-langx/aspect',[\r\n    \"skylark-langx-aspect\"\r\n],function(aspect){\r\n  return aspect;\r\n});\ndefine('skylark-langx-funcs/funcs',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\"\r\n],function(skylark,types,objects){\r\n\tvar mixin = objects.mixin,\r\n        slice = Array.prototype.slice,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString;\r\n\r\n    function defer(fn) {\r\n        if (requestAnimationFrame) {\r\n            requestAnimationFrame(fn);\r\n        } else {\r\n            setTimeoutout(fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function noop() {\r\n    }\r\n\r\n    function proxy(fn, context) {\r\n        var args = (2 in arguments) && slice.call(arguments, 2)\r\n        if (isFunction(fn)) {\r\n            var proxyFn = function() {\r\n                return fn.apply(context, args ? args.concat(slice.call(arguments)) : arguments);\r\n            }\r\n            return proxyFn;\r\n        } else if (isString(context)) {\r\n            if (args) {\r\n                args.unshift(fn[context], fn)\r\n                return proxy.apply(null, args)\r\n            } else {\r\n                return proxy(fn[context], fn);\r\n            }\r\n        } else {\r\n            throw new TypeError(\"expected function\");\r\n        }\r\n    }\r\n\r\n    function debounce(fn, wait) {\r\n        var timeout;\r\n        return function () {\r\n            var context = this, args = arguments;\r\n            var later = function () {\r\n                timeout = null;\r\n                fn.apply(context, args);\r\n            };\r\n            if (timeout) clearTimeout(timeout);\r\n            timeout = setTimeout(later, wait);\r\n        };\r\n    }\r\n   \r\n    var delegate = (function() {\r\n        // boodman/crockford delegation w/ cornford optimization\r\n        function TMP() {}\r\n        return function(obj, props) {\r\n            TMP.prototype = obj;\r\n            var tmp = new TMP();\r\n            TMP.prototype = null;\r\n            if (props) {\r\n                mixin(tmp, props);\r\n            }\r\n            return tmp; // Object\r\n        };\r\n    })();\r\n\r\n  var templateSettings = {\r\n    evaluate: /<%([\\s\\S]+?)%>/g,\r\n    interpolate: /<%=([\\s\\S]+?)%>/g,\r\n    escape: /<%-([\\s\\S]+?)%>/g\r\n  };\r\n\r\n\r\n  function template(text, settings, oldSettings) {\r\n    if (!settings && oldSettings) settings = oldSettings;\r\n    settings = objects.defaults({}, settings,templateSettings);\r\n\r\n    // Combine delimiters into one regular expression via alternation.\r\n    var matcher = RegExp([\r\n      (settings.escape || noMatch).source,\r\n      (settings.interpolate || noMatch).source,\r\n      (settings.evaluate || noMatch).source\r\n    ].join('|') + '|$', 'g');\r\n\r\n    // Compile the template source, escaping string literals appropriately.\r\n    var index = 0;\r\n    var source = \"__p+='\";\r\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\r\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\r\n      index = offset + match.length;\r\n\r\n      if (escape) {\r\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\r\n      } else if (interpolate) {\r\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\r\n      } else if (evaluate) {\r\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\r\n      }\r\n\r\n      // Adobe VMs need the match returned to produce the correct offset.\r\n      return match;\r\n    });\r\n    source += \"';\\n\";\r\n\r\n    // If a variable is not specified, place data values in local scope.\r\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\r\n\r\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\r\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\r\n      source + 'return __p;\\n';\r\n\r\n    var render;\r\n    try {\r\n      render = new Function(settings.variable || 'obj', '_', source);\r\n    } catch (e) {\r\n      e.source = source;\r\n      throw e;\r\n    }\r\n\r\n    var template = function(data) {\r\n      return render.call(this, data, _);\r\n    };\r\n\r\n    // Provide the compiled source as a convenience for precompilation.\r\n    var argument = settings.variable || 'obj';\r\n    template.source = 'function(' + argument + '){\\n' + source + '}';\r\n\r\n    return template;\r\n  };\r\n\r\n    return skylark.attach(\"langx.funcs\",{\r\n        debounce: debounce,\r\n\r\n        delegate: delegate,\r\n\r\n        defer: defer,\r\n\r\n        noop : noop,\r\n\r\n        proxy: proxy,\r\n\r\n        returnTrue: function() {\r\n            return true;\r\n        },\r\n\r\n        returnFalse: function() {\r\n            return false;\r\n        },\r\n\r\n        templateSettings : templateSettings,\r\n        template : template\r\n    });\r\n});\ndefine('skylark-langx-funcs/main',[\r\n\t\"./funcs\"\r\n],function(funcs){\r\n\treturn funcs;\r\n});\ndefine('skylark-langx-funcs', ['skylark-langx-funcs/main'], function (main) { return main; });\n\ndefine('skylark-langx-async/Deferred',[\r\n    \"skylark-langx-arrays\",\r\n\t\"skylark-langx-funcs\",\r\n    \"skylark-langx-objects\"\r\n],function(arrays,funcs,objects){\r\n    \"use strict\";\r\n    \r\n    var  PGLISTENERS = Symbol ? Symbol() : '__pglisteners',\r\n         PGNOTIFIES = Symbol ? Symbol() : '__pgnotifies';\r\n\r\n    var slice = Array.prototype.slice,\r\n        proxy = funcs.proxy,\r\n        makeArray = arrays.makeArray,\r\n        result = objects.result,\r\n        mixin = objects.mixin;\r\n\r\n    mixin(Promise.prototype,{\r\n        always: function(handler) {\r\n            //this.done(handler);\r\n            //this.fail(handler);\r\n            this.then(handler,handler);\r\n            return this;\r\n        },\r\n        done : function() {\r\n            for (var i = 0;i<arguments.length;i++) {\r\n                this.then(arguments[i]);\r\n            }\r\n            return this;\r\n        },\r\n        fail : function(handler) { \r\n            //return mixin(Promise.prototype.catch.call(this,handler),added);\r\n            //return this.then(null,handler);\r\n            this.catch(handler);\r\n            return this;\r\n         }\r\n    });\r\n\r\n\r\n    var Deferred = function() {\r\n        var self = this,\r\n            p = this.promise = new Promise(function(resolve, reject) {\r\n                self._resolve = resolve;\r\n                self._reject = reject;\r\n            });\r\n\r\n        wrapPromise(p,self);\r\n\r\n        this[PGLISTENERS] = [];\r\n        this[PGNOTIFIES] = [];\r\n\r\n        //this.resolve = Deferred.prototype.resolve.bind(this);\r\n        //this.reject = Deferred.prototype.reject.bind(this);\r\n        //this.progress = Deferred.prototype.progress.bind(this);\r\n\r\n    };\r\n\r\n    function wrapPromise(p,d) {\r\n        var   added = {\r\n                state : function() {\r\n                    if (d.isResolved()) {\r\n                        return 'resolved';\r\n                    }\r\n                    if (d.isRejected()) {\r\n                        return 'rejected';\r\n                    }\r\n                    return 'pending';\r\n                },\r\n                then : function(onResolved,onRejected,onProgress) {\r\n                    if (onProgress) {\r\n                        this.progress(onProgress);\r\n                    }\r\n                    return wrapPromise(Promise.prototype.then.call(this,\r\n                            onResolved && function(args) {\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onResolved.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onResolved(args);\r\n                                }\r\n                            },\r\n                            onRejected && function(args){\r\n                                if (args && args.__ctx__ !== undefined) {\r\n                                    return onRejected.apply(args.__ctx__,args);\r\n                                } else {\r\n                                    return onRejected(args);\r\n                                }\r\n                            }));\r\n                },\r\n                progress : function(handler) {\r\n                    d[PGNOTIFIES].forEach(function (value) {\r\n                        handler(value);\r\n                    });\r\n                    d[PGLISTENERS].push(handler);\r\n                    return this;\r\n                }\r\n\r\n            };\r\n\r\n        added.pipe = added.then;\r\n        return mixin(p,added);\r\n\r\n    }\r\n\r\n    Deferred.prototype.resolve = function(value) {\r\n        var args = slice.call(arguments);\r\n        return this.resolveWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.resolveWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._resolve(args);\r\n        this._resolved = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.notify = function(value) {\r\n        try {\r\n            this[PGNOTIFIES].push(value);\r\n\r\n            return this[PGLISTENERS].forEach(function (listener) {\r\n                return listener(value);\r\n            });\r\n        } catch (error) {\r\n          this.reject(error);\r\n        }\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.reject = function(reason) {\r\n        var args = slice.call(arguments);\r\n        return this.rejectWith(null,args);\r\n    };\r\n\r\n    Deferred.prototype.rejectWith = function(context,args) {\r\n        args = args ? makeArray(args) : []; \r\n        args.__ctx__ = context;\r\n        this._reject(args);\r\n        this._rejected = true;\r\n        return this;\r\n    };\r\n\r\n    Deferred.prototype.isResolved = function() {\r\n        return !!this._resolved;\r\n    };\r\n\r\n    Deferred.prototype.isRejected = function() {\r\n        return !!this._rejected;\r\n    };\r\n\r\n    Deferred.prototype.then = function(callback, errback, progback) {\r\n        var p = result(this,\"promise\");\r\n        return p.then(callback, errback, progback);\r\n    };\r\n\r\n    Deferred.prototype.progress = function(progback){\r\n        var p = result(this,\"promise\");\r\n        return p.progress(progback);\r\n    };\r\n   \r\n    Deferred.prototype.catch = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.catch(errback);\r\n    };\r\n\r\n\r\n    Deferred.prototype.done  = function() {\r\n        var p = result(this,\"promise\");\r\n        return p.done.apply(p,arguments);\r\n    };\r\n\r\n    Deferred.prototype.fail = function(errback) {\r\n        var p = result(this,\"promise\");\r\n        return p.fail(errback);\r\n    };\r\n\r\n\r\n    Deferred.all = function(array) {\r\n        //return wrapPromise(Promise.all(array));\r\n        var d = new Deferred();\r\n        Promise.all(array).then(d.resolve.bind(d),d.reject.bind(d));\r\n        return result(d,\"promise\");\r\n    };\r\n\r\n    Deferred.first = function(array) {\r\n        return wrapPromise(Promise.race(array));\r\n    };\r\n\r\n\r\n    Deferred.when = function(valueOrPromise, callback, errback, progback) {\r\n        var receivedPromise = valueOrPromise && typeof valueOrPromise.then === \"function\";\r\n        var nativePromise = receivedPromise && valueOrPromise instanceof Promise;\r\n\r\n        if (!receivedPromise) {\r\n            if (arguments.length > 1) {\r\n                return callback ? callback(valueOrPromise) : valueOrPromise;\r\n            } else {\r\n                return new Deferred().resolve(valueOrPromise);\r\n            }\r\n        } else if (!nativePromise) {\r\n            var deferred = new Deferred(valueOrPromise.cancel);\r\n            valueOrPromise.then(proxy(deferred.resolve,deferred), proxy(deferred.reject,deferred), deferred.notify);\r\n            valueOrPromise = deferred.promise;\r\n        }\r\n\r\n        if (callback || errback || progback) {\r\n            return valueOrPromise.then(callback, errback, progback);\r\n        }\r\n        return valueOrPromise;\r\n    };\r\n\r\n    Deferred.reject = function(err) {\r\n        var d = new Deferred();\r\n        d.reject(err);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.resolve = function(data) {\r\n        var d = new Deferred();\r\n        d.resolve.apply(d,arguments);\r\n        return d.promise;\r\n    };\r\n\r\n    Deferred.immediate = Deferred.resolve;\r\n\r\n    return Deferred;\r\n});\ndefine('skylark-langx-async/async',[\r\n    \"skylark-langx-ns\",\r\n    \"skylark-langx-objects\",\r\n    \"./Deferred\"\r\n],function(skylark,objects,Deferred){\r\n    var each = objects.each;\r\n    \r\n    var async = {\r\n        Deferred : Deferred,\r\n\r\n        parallel : function(arr,args,ctx) {\r\n            var rets = [];\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            each(arr,function(i,func){\r\n                rets.push(func.apply(ctx,args));\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        series : function(arr,args,ctx) {\r\n            var rets = [],\r\n                d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolve();\r\n            each(arr,function(i,func){\r\n                p = p.then(function(){\r\n                    return func.apply(ctx,args);\r\n                });\r\n                rets.push(p);\r\n            });\r\n\r\n            return Deferred.all(rets);\r\n        },\r\n\r\n        waterful : function(arr,args,ctx) {\r\n            var d = new Deferred(),\r\n                p = d.promise;\r\n\r\n            ctx = ctx || null;\r\n            args = args || [];\r\n\r\n            d.resolveWith(ctx,args);\r\n\r\n            each(arr,function(i,func){\r\n                p = p.then(func);\r\n            });\r\n            return p;\r\n        }\r\n    };\r\n\r\n\treturn skylark.attach(\"langx.async\",async);\t\r\n});\ndefine('skylark-langx-async/main',[\r\n\t\"./async\"\r\n],function(async){\r\n\treturn async;\r\n});\ndefine('skylark-langx-async', ['skylark-langx-async/main'], function (main) { return main; });\n\ndefine('skylark-langx/async',[\r\n    \"skylark-langx-async\"\r\n],function(async){\r\n    return async;\r\n});\ndefine('skylark-langx-datetimes/datetimes',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n     function parseMilliSeconds(str) {\r\n\r\n        var strs = str.split(' ');\r\n        var number = parseInt(strs[0]);\r\n\r\n        if (isNaN(number)){\r\n            return 0;\r\n        }\r\n\r\n        var min = 60000 * 60;\r\n\r\n        switch (strs[1].trim().replace(/\\./g, '')) {\r\n            case 'minutes':\r\n            case 'minute':\r\n            case 'min':\r\n            case 'mm':\r\n            case 'm':\r\n                return 60000 * number;\r\n            case 'hours':\r\n            case 'hour':\r\n            case 'HH':\r\n            case 'hh':\r\n            case 'h':\r\n            case 'H':\r\n                return min * number;\r\n            case 'seconds':\r\n            case 'second':\r\n            case 'sec':\r\n            case 'ss':\r\n            case 's':\r\n                return 1000 * number;\r\n            case 'days':\r\n            case 'day':\r\n            case 'DD':\r\n            case 'dd':\r\n            case 'd':\r\n                return (min * 24) * number;\r\n            case 'months':\r\n            case 'month':\r\n            case 'MM':\r\n            case 'M':\r\n                return (min * 24 * 28) * number;\r\n            case 'weeks':\r\n            case 'week':\r\n            case 'W':\r\n            case 'w':\r\n                return (min * 24 * 7) * number;\r\n            case 'years':\r\n            case 'year':\r\n            case 'yyyy':\r\n            case 'yy':\r\n            case 'y':\r\n                return (min * 24 * 365) * number;\r\n            default:\r\n                return 0;\r\n        }\r\n    };\r\n\t\r\n\treturn skylark.attach(\"langx.datetimes\",{\r\n\t\tparseMilliSeconds\r\n\t});\r\n});\ndefine('skylark-langx-datetimes/main',[\r\n\t\"./datetimes\"\r\n],function(datetimes){\r\n\treturn datetimes;\r\n});\ndefine('skylark-langx-datetimes', ['skylark-langx-datetimes/main'], function (main) { return main; });\n\ndefine('skylark-langx/datetimes',[\r\n    \"skylark-langx-datetimes\"\r\n],function(datetimes){\r\n    return datetimes;\r\n});\ndefine('skylark-langx/Deferred',[\r\n    \"skylark-langx-async/Deferred\"\r\n],function(Deferred){\r\n    return Deferred;\r\n});\ndefine('skylark-langx-emitter/Evented',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-klass\"\r\n],function(skylark,types,objects,arrays,klass){\r\n    var slice = Array.prototype.slice,\r\n        compact = arrays.compact,\r\n        isDefined = types.isDefined,\r\n        isPlainObject = types.isPlainObject,\r\n        isFunction = types.isFunction,\r\n        isString = types.isString,\r\n        isEmptyObject = types.isEmptyObject,\r\n        mixin = objects.mixin;\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            name: segs[0],\r\n            ns: segs.slice(1).join(\" \")\r\n        };\r\n    }\r\n\r\n    var Evented = klass({\r\n        on: function(events, selector, data, callback, ctx, /*used internally*/ one) {\r\n            var self = this,\r\n                _hub = this._hub || (this._hub = {});\r\n\r\n            if (isPlainObject(events)) {\r\n                ctx = callback;\r\n                each(events, function(type, fn) {\r\n                    self.on(type, selector, data, fn, ctx, one);\r\n                });\r\n                return this;\r\n            }\r\n\r\n            if (!isString(selector) && !isFunction(callback)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = selector;\r\n                selector = undefined;\r\n            }\r\n\r\n            if (isFunction(data)) {\r\n                ctx = callback;\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                (_hub[name] || (_hub[name] = [])).push({\r\n                    fn: callback,\r\n                    selector: selector,\r\n                    data: data,\r\n                    ctx: ctx,\r\n                    ns : ns,\r\n                    one: one\r\n                });\r\n            });\r\n\r\n            return this;\r\n        },\r\n\r\n        one: function(events, selector, data, callback, ctx) {\r\n            return this.on(events, selector, data, callback, ctx, 1);\r\n        },\r\n\r\n        trigger: function(e /*,argument list*/ ) {\r\n            if (!this._hub) {\r\n                return this;\r\n            }\r\n\r\n            var self = this;\r\n\r\n            if (isString(e)) {\r\n                e = new CustomEvent(e);\r\n            }\r\n\r\n            Object.defineProperty(e,\"target\",{\r\n                value : this\r\n            });\r\n\r\n            var args = slice.call(arguments, 1);\r\n            if (isDefined(args)) {\r\n                args = [e].concat(args);\r\n            } else {\r\n                args = [e];\r\n            }\r\n            [e.type || e.name, \"all\"].forEach(function(eventName) {\r\n                var parsed = parse(eventName),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var listeners = self._hub[name];\r\n                if (!listeners) {\r\n                    return;\r\n                }\r\n\r\n                var len = listeners.length,\r\n                    reCompact = false;\r\n\r\n                for (var i = 0; i < len; i++) {\r\n                    var listener = listeners[i];\r\n                    if (ns && (!listener.ns ||  !listener.ns.startsWith(ns))) {\r\n                        continue;\r\n                    }\r\n                    if (e.data) {\r\n                        if (listener.data) {\r\n                            e.data = mixin({}, listener.data, e.data);\r\n                        }\r\n                    } else {\r\n                        e.data = listener.data || null;\r\n                    }\r\n                    listener.fn.apply(listener.ctx, args);\r\n                    if (listener.one) {\r\n                        listeners[i] = null;\r\n                        reCompact = true;\r\n                    }\r\n                }\r\n\r\n                if (reCompact) {\r\n                    self._hub[eventName] = compact(listeners);\r\n                }\r\n\r\n            });\r\n            return this;\r\n        },\r\n\r\n        listened: function(event) {\r\n            var evtArr = ((this._hub || (this._events = {}))[event] || []);\r\n            return evtArr.length > 0;\r\n        },\r\n\r\n        listenTo: function(obj, event, callback, /*used internally*/ one) {\r\n            if (!obj) {\r\n                return this;\r\n            }\r\n\r\n            // Bind callbacks on obj,\r\n            if (isString(callback)) {\r\n                callback = this[callback];\r\n            }\r\n\r\n            if (one) {\r\n                obj.one(event, callback, this);\r\n            } else {\r\n                obj.on(event, callback, this);\r\n            }\r\n\r\n            //keep track of them on listening.\r\n            var listeningTo = this._listeningTo || (this._listeningTo = []),\r\n                listening;\r\n\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                if (listeningTo[i].obj == obj) {\r\n                    listening = listeningTo[i];\r\n                    break;\r\n                }\r\n            }\r\n            if (!listening) {\r\n                listeningTo.push(\r\n                    listening = {\r\n                        obj: obj,\r\n                        events: {}\r\n                    }\r\n                );\r\n            }\r\n            var listeningEvents = listening.events,\r\n                listeningEvent = listeningEvents[event] = listeningEvents[event] || [];\r\n            if (listeningEvent.indexOf(callback) == -1) {\r\n                listeningEvent.push(callback);\r\n            }\r\n\r\n            return this;\r\n        },\r\n\r\n        listenToOnce: function(obj, event, callback) {\r\n            return this.listenTo(obj, event, callback, 1);\r\n        },\r\n\r\n        off: function(events, callback) {\r\n            var _hub = this._hub || (this._hub = {});\r\n            if (isString(events)) {\r\n                events = events.split(/\\s/)\r\n            }\r\n\r\n            events.forEach(function(event) {\r\n                var parsed = parse(event),\r\n                    name = parsed.name,\r\n                    ns = parsed.ns;\r\n\r\n                var evts = _hub[name];\r\n\r\n                if (evts) {\r\n                    var liveEvents = [];\r\n\r\n                    if (callback || ns) {\r\n                        for (var i = 0, len = evts.length; i < len; i++) {\r\n                            \r\n                            if (callback && evts[i].fn !== callback && evts[i].fn._ !== callback) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            } \r\n\r\n                            if (ns && (!evts[i].ns || evts[i].ns.indexOf(ns)!=0)) {\r\n                                liveEvents.push(evts[i]);\r\n                                continue;\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                    if (liveEvents.length) {\r\n                        _hub[name] = liveEvents;\r\n                    } else {\r\n                        delete _hub[name];\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n        },\r\n        unlistenTo: function(obj, event, callback) {\r\n            var listeningTo = this._listeningTo;\r\n            if (!listeningTo) {\r\n                return this;\r\n            }\r\n            for (var i = 0; i < listeningTo.length; i++) {\r\n                var listening = listeningTo[i];\r\n\r\n                if (obj && obj != listening.obj) {\r\n                    continue;\r\n                }\r\n\r\n                var listeningEvents = listening.events;\r\n                for (var eventName in listeningEvents) {\r\n                    if (event && event != eventName) {\r\n                        continue;\r\n                    }\r\n\r\n                    var listeningEvent = listeningEvents[eventName];\r\n\r\n                    for (var j = 0; j < listeningEvent.length; j++) {\r\n                        if (!callback || callback == listeningEvent[i]) {\r\n                            listening.obj.off(eventName, listeningEvent[i], this);\r\n                            listeningEvent[i] = null;\r\n                        }\r\n                    }\r\n\r\n                    listeningEvent = listeningEvents[eventName] = compact(listeningEvent);\r\n\r\n                    if (isEmptyObject(listeningEvent)) {\r\n                        listeningEvents[eventName] = null;\r\n                    }\r\n\r\n                }\r\n\r\n                if (isEmptyObject(listeningEvents)) {\r\n                    listeningTo[i] = null;\r\n                }\r\n            }\r\n\r\n            listeningTo = this._listeningTo = compact(listeningTo);\r\n            if (isEmptyObject(listeningTo)) {\r\n                this._listeningTo = null;\r\n            }\r\n\r\n            return this;\r\n        }\r\n    });\r\n\r\n    return skylark.attach(\"langx.Evented\",Evented);\r\n\r\n});\ndefine('skylark-langx-emitter/main',[\r\n\t\"./Evented\"\r\n],function(Evented){\r\n\treturn Evented;\r\n});\ndefine('skylark-langx-emitter', ['skylark-langx-emitter/main'], function (main) { return main; });\n\ndefine('skylark-langx/Evented',[\r\n    \"skylark-langx-emitter\"\r\n],function(Evented){\r\n    return Evented;\r\n});\ndefine('skylark-langx/funcs',[\r\n    \"skylark-langx-funcs\"\r\n],function(funcs){\r\n    return funcs;\r\n});\ndefine('skylark-langx-hoster/hoster',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n\t// The javascript host environment, brower and nodejs are supported.\r\n\tvar hoster = {\r\n\t\t\"isBrowser\" : true, // default\r\n\t\t\"isNode\" : null,\r\n\t\t\"global\" : this,\r\n\t\t\"browser\" : null,\r\n\t\t\"node\" : null\r\n\t};\r\n\r\n\tif (typeof process == \"object\" && process.versions && process.versions.node && process.versions.v8) {\r\n\t\thoster.isNode = true;\r\n\t\thoster.isBrowser = false;\r\n\t}\r\n\r\n\thoster.global = (function(){\r\n\t\tif (typeof global !== 'undefined' && typeof global !== 'function') {\r\n\t\t\t// global spec defines a reference to the global object called 'global'\r\n\t\t\t// https://github.com/tc39/proposal-global\r\n\t\t\t// `global` is also defined in NodeJS\r\n\t\t\treturn global;\r\n\t\t} else if (typeof window !== 'undefined') {\r\n\t\t\t// window is defined in browsers\r\n\t\t\treturn window;\r\n\t\t}\r\n\t\telse if (typeof self !== 'undefined') {\r\n\t\t\t// self is defined in WebWorkers\r\n\t\t\treturn self;\r\n\t\t}\r\n\t\treturn this;\r\n\t})();\r\n\r\n\tvar _document = null;\r\n\r\n\tObject.defineProperty(hoster,\"document\",function(){\r\n\t\tif (!_document) {\r\n\t\t\tvar w = typeof window === 'undefined' ? require('html-element') : window;\r\n\t\t\t_document = w.document;\r\n\t\t}\r\n\r\n\t\treturn _document;\r\n\t});\r\n\r\n\tif (hoster.isBrowser) {\r\n\t    function uaMatch( ua ) {\r\n\t\t    ua = ua.toLowerCase();\r\n\r\n\t\t    var match = /(chrome)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(webkit)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(opera)(?:.*version|)[ \\/]([\\w.]+)/.exec( ua ) ||\r\n\t\t      /(msie) ([\\w.]+)/.exec( ua ) ||\r\n\t\t      ua.indexOf('compatible') < 0 && /(mozilla)(?:.*? rv:([\\w.]+)|)/.exec( ua ) ||\r\n\t\t      [];\r\n\r\n\t\t    return {\r\n\t\t      browser: match[ 1 ] || '',\r\n\t\t      version: match[ 2 ] || '0'\r\n\t\t    };\r\n\t  \t};\r\n\r\n\t    var matched = uaMatch( navigator.userAgent );\r\n\r\n\t    var browser = hoster.browser = {};\r\n\r\n\t    if ( matched.browser ) {\r\n\t      browser[ matched.browser ] = true;\r\n\t      browser.version = matched.version;\r\n\t    }\r\n\r\n\t    // Chrome is Webkit, but Webkit is also Safari.\r\n\t    if ( browser.chrome ) {\r\n\t      browser.webkit = true;\r\n\t    } else if ( browser.webkit ) {\r\n\t      browser.safari = true;\r\n\t    }\r\n\t}\r\n\r\n\treturn  skylark.attach(\"langx.hoster\",hoster);\r\n});\ndefine('skylark-langx-hoster/main',[\r\n\t\"./hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx-hoster', ['skylark-langx-hoster/main'], function (main) { return main; });\n\ndefine('skylark-langx/hoster',[\r\n\t\"skylark-langx-hoster\"\r\n],function(hoster){\r\n\treturn hoster;\r\n});\ndefine('skylark-langx/numbers',[\r\n\t\"skylark-langx-numbers\"\r\n],function(numbers){\r\n\treturn numbers;\r\n});\ndefine('skylark-langx/objects',[\r\n    \"skylark-langx-objects\"\r\n],function(objects){\r\n    return objects;\r\n});\ndefine('skylark-langx-strings/strings',[\r\n    \"skylark-langx-ns\"\r\n],function(skylark){\r\n    // add default escape function for escaping HTML entities\r\n    var escapeCharMap = Object.freeze({\r\n        '&': '&amp;',\r\n        '<': '&lt;',\r\n        '>': '&gt;',\r\n        '\"': '&quot;',\r\n        \"'\": '&#x27;',\r\n        '`': '&#x60;',\r\n        '=': '&#x3D;',\r\n    });\r\n    function replaceChar(c) {\r\n        return escapeCharMap[c];\r\n    }\r\n    var escapeChars = /[&<>\"'`=]/g;\r\n\r\n\r\n     /*\r\n     * Converts camel case into dashes.\r\n     * @param {String} str\r\n     * @return {String}\r\n     * @exapmle marginTop -> margin-top\r\n     */\r\n    function dasherize(str) {\r\n        return str.replace(/::/g, '/')\r\n            .replace(/([A-Z]+)([A-Z][a-z])/g, '$1_$2')\r\n            .replace(/([a-z\\d])([A-Z])/g, '$1_$2')\r\n            .replace(/_/g, '-')\r\n            .toLowerCase();\r\n    }\r\n\r\n    function deserializeValue(value) {\r\n        try {\r\n            return value ?\r\n                value == \"true\" ||\r\n                (value == \"false\" ? false :\r\n                    value == \"null\" ? null :\r\n                    +value + \"\" == value ? +value :\r\n                    /^[\\[\\{]/.test(value) ? JSON.parse(value) :\r\n                    value) : value;\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n\r\n    function escapeHTML(str) {\r\n        if (str == null) {\r\n            return '';\r\n        }\r\n        if (!str) {\r\n            return String(str);\r\n        }\r\n\r\n        return str.toString().replace(escapeChars, replaceChar);\r\n    }\r\n\r\n    function generateUUID() {\r\n        return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n            var r = Math.random() * 16 | 0;\r\n            var v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n            return v.toString(16);\r\n        });\r\n    }\r\n\r\n    function trim(str) {\r\n        return str == null ? \"\" : String.prototype.trim.call(str);\r\n    }\r\n\r\n    function substitute( /*String*/ template,\r\n        /*Object|Array*/\r\n        map,\r\n        /*Function?*/\r\n        transform,\r\n        /*Object?*/\r\n        thisObject) {\r\n        // summary:\r\n        //    Performs parameterized substitutions on a string. Throws an\r\n        //    exception if any parameter is unmatched.\r\n        // template:\r\n        //    a string with expressions in the form `${key}` to be replaced or\r\n        //    `${key:format}` which specifies a format function. keys are case-sensitive.\r\n        // map:\r\n        //    hash to search for substitutions\r\n        // transform:\r\n        //    a function to process all parameters before substitution takes\r\n\r\n\r\n        thisObject = thisObject || window;\r\n        transform = transform ?\r\n            proxy(thisObject, transform) : function(v) {\r\n                return v;\r\n            };\r\n\r\n        function getObject(key, map) {\r\n            if (key.match(/\\./)) {\r\n                var retVal,\r\n                    getValue = function(keys, obj) {\r\n                        var _k = keys.pop();\r\n                        if (_k) {\r\n                            if (!obj[_k]) return null;\r\n                            return getValue(keys, retVal = obj[_k]);\r\n                        } else {\r\n                            return retVal;\r\n                        }\r\n                    };\r\n                return getValue(key.split(\".\").reverse(), map);\r\n            } else {\r\n                return map[key];\r\n            }\r\n        }\r\n\r\n        return template.replace(/\\$\\{([^\\s\\:\\}]+)(?:\\:([^\\s\\:\\}]+))?\\}/g,\r\n            function(match, key, format) {\r\n                var value = getObject(key, map);\r\n                if (format) {\r\n                    value = getObject(format, thisObject).call(thisObject, value, key);\r\n                }\r\n                return transform(value, key).toString();\r\n            }); // String\r\n    }\r\n\r\n    var idCounter = 0;\r\n    function uniqueId (prefix) {\r\n        var id = ++idCounter + '';\r\n        return prefix ? prefix + id : id;\r\n    }\r\n\r\n\r\n    /**\r\n     * https://github.com/cho45/micro-template.js\r\n     * (c) cho45 http://cho45.github.com/mit-license\r\n     */\r\n    function template (id, data) {\r\n\r\n        function include(name, args) {\r\n            var stash = {};\r\n            for (var key in template.context.stash) if (template.context.stash.hasOwnProperty(key)) {\r\n                stash[key] = template.context.stash[key];\r\n            }\r\n            if (args) for (var key in args) if (args.hasOwnProperty(key)) {\r\n                stash[key] = args[key];\r\n            }\r\n            var context = template.context;\r\n            context.ret += template(name, stash);\r\n            template.context = context;\r\n        }\r\n\r\n        function wrapper(name, fun) {\r\n            var current = template.context.ret;\r\n            template.context.ret = '';\r\n            fun.apply(template.context);\r\n            var content = template.context.ret;\r\n            var orig_content = template.context.stash.content;\r\n            template.context.stash.content = content;\r\n            template.context.ret = current + template(name, template.context.stash);\r\n            template.context.stash.content = orig_content;\r\n        }\r\n\r\n        var me = arguments.callee;\r\n        if (!me.cache[id]) me.cache[id] = (function () {\r\n            var name = id, string = /^[\\w\\-]+$/.test(id) ? me.get(id): (name = 'template(string)', id); // no warnings\r\n            var line = 1, body = (\r\n                \"try { \" +\r\n                    (me.variable ?  \"var \" + me.variable + \" = this.stash;\" : \"with (this.stash) { \") +\r\n                        \"this.ret += '\"  +\r\n                        string.\r\n                            replace(/<%/g, '\\x11').replace(/%>/g, '\\x13'). // if you want other tag, just edit this line\r\n                            replace(/'(?![^\\x11\\x13]+?\\x13)/g, '\\\\x27').\r\n                            replace(/^\\s*|\\s*$/g, '').\r\n                            replace(/\\n|\\r\\n/g, function () { return \"';\\nthis.line = \" + (++line) + \"; this.ret += '\\\\n\" }).\r\n                            replace(/\\x11=raw(.+?)\\x13/g, \"' + ($1) + '\").\r\n                            replace(/\\x11=(.+?)\\x13/g, \"' + this.escapeHTML($1) + '\").\r\n                            replace(/\\x11(.+?)\\x13/g, \"'; $1; this.ret += '\") +\r\n                    \"'; \" + (me.variable ? \"\" : \"}\") + \"return this.ret;\" +\r\n                \"} catch (e) { throw 'TemplateError: ' + e + ' (on \" + name + \"' + ' line ' + this.line + ')'; } \" +\r\n                \"//@ sourceURL=\" + name + \"\\n\" // source map\r\n            ).replace(/this\\.ret \\+= '';/g, '');\r\n            var func = new Function(body);\r\n            var map  = { '&' : '&amp;', '<' : '&lt;', '>' : '&gt;', '\\x22' : '&#x22;', '\\x27' : '&#x27;' };\r\n            var escapeHTML = function (string) { return (''+string).replace(/[&<>\\'\\\"]/g, function (_) { return map[_] }) };\r\n            return function (stash) { return func.call(me.context = { escapeHTML: escapeHTML, line: 1, ret : '', stash: stash }) };\r\n        })();\r\n        return data ? me.cache[id](data) : me.cache[id];\r\n    }\r\n\r\n    template.cache = {};\r\n    \r\n\r\n    template.get = function (id) {\r\n        return document.getElementById(id).innerHTML;\r\n    };\r\n\r\n    function rtrim(str) {\r\n        return str.replace(/\\s+$/g, '');\r\n    }\r\n\r\n    // Slugify a string\r\n    function slugify(str) {\r\n        str = str.replace(/^\\s+|\\s+$/g, '');\r\n\r\n        // Make the string lowercase\r\n        str = str.toLowerCase();\r\n\r\n        // Remove accents, swap ñ for n, etc\r\n        var from = \"ÁÄÂÀÃÅČÇĆĎÉĚËÈÊẼĔȆÍÌÎÏŇÑÓÖÒÔÕØŘŔŠŤÚŮÜÙÛÝŸŽáäâàãåčçćďéěëèêẽĕȇíìîïňñóöòôõøðřŕšťúůüùûýÿžþÞĐđßÆa·/_,:;\";\r\n        var to   = \"AAAAAACCCDEEEEEEEEIIIINNOOOOOORRSTUUUUUYYZaaaaaacccdeeeeeeeeiiiinnooooooorrstuuuuuyyzbBDdBAa------\";\r\n        for (var i=0, l=from.length ; i<l ; i++) {\r\n            str = str.replace(new RegExp(from.charAt(i), 'g'), to.charAt(i));\r\n        }\r\n\r\n        // Remove invalid chars\r\n        //str = str.replace(/[^a-z0-9 -]/g, '') \r\n        // Collapse whitespace and replace by -\r\n        str = str.replace(/\\s+/g, '-') \r\n        // Collapse dashes\r\n        .replace(/-+/g, '-'); \r\n\r\n        return str;\r\n    }    \r\n\r\n    // return boolean if string 'true' or string 'false', or if a parsable string which is a number\r\n    // also supports JSON object and/or arrays parsing\r\n    function toType(str) {\r\n        var type = typeof str;\r\n        if (type !== 'string') {\r\n            return str;\r\n        }\r\n        var nb = parseFloat(str);\r\n        if (!isNaN(nb) && isFinite(str)) {\r\n            return nb;\r\n        }\r\n        if (str === 'false') {\r\n            return false;\r\n        }\r\n        if (str === 'true') {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            str = JSON.parse(str);\r\n        } catch (e) {}\r\n\r\n        return str;\r\n    }\r\n\r\n\treturn skylark.attach(\"langx.strings\",{\r\n        camelCase: function(str) {\r\n            return str.replace(/-([\\da-z])/g, function(a) {\r\n                return a.toUpperCase().replace('-', '');\r\n            });\r\n        },\r\n\r\n        dasherize: dasherize,\r\n\r\n        deserializeValue: deserializeValue,\r\n\r\n        escapeHTML : escapeHTML,\r\n\r\n        generateUUID : generateUUID,\r\n\r\n        lowerFirst: function(str) {\r\n            return str.charAt(0).toLowerCase() + str.slice(1);\r\n        },\r\n\r\n        rtrim : rtrim,\r\n\r\n        serializeValue: function(value) {\r\n            return JSON.stringify(value)\r\n        },\r\n\r\n\r\n        substitute: substitute,\r\n\r\n        slugify : slugify,\r\n\r\n        template : template,\r\n\r\n        trim: trim,\r\n\r\n        uniqueId: uniqueId,\r\n\r\n        upperFirst: function(str) {\r\n            return str.charAt(0).toUpperCase() + str.slice(1);\r\n        }\r\n\t}) ; \r\n\r\n});\ndefine('skylark-langx-strings/main',[\r\n\t\"./strings\"\r\n],function(strings){\r\n\treturn strings;\r\n});\ndefine('skylark-langx-strings', ['skylark-langx-strings/main'], function (main) { return main; });\n\ndefine('skylark-langx/strings',[\r\n    \"skylark-langx-strings\"\r\n],function(strings){\r\n    return strings;\r\n});\ndefine('skylark-langx-xhr/Xhr',[\r\n  \"skylark-langx-ns/ns\",\r\n  \"skylark-langx-types\",\r\n  \"skylark-langx-objects\",\r\n  \"skylark-langx-arrays\",\r\n  \"skylark-langx-funcs\",\r\n  \"skylark-langx-async/Deferred\",\r\n  \"skylark-langx-emitter/Evented\"\r\n],function(skylark,types,objects,arrays,funcs,Deferred,Evented){\r\n\r\n    var each = objects.each,\r\n        mixin = objects.mixin,\r\n        noop = funcs.noop,\r\n        isArray = types.isArray,\r\n        isFunction = types.isFunction,\r\n        isPlainObject = types.isPlainObject,\r\n        type = types.type;\r\n \r\n     var getAbsoluteUrl = (function() {\r\n        var a;\r\n\r\n        return function(url) {\r\n            if (!a) a = document.createElement('a');\r\n            a.href = url;\r\n\r\n            return a.href;\r\n        };\r\n    })();\r\n   \r\n    var Xhr = (function(){\r\n        var jsonpID = 0,\r\n            key,\r\n            name,\r\n            rscript = /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi,\r\n            scriptTypeRE = /^(?:text|application)\\/javascript/i,\r\n            xmlTypeRE = /^(?:text|application)\\/xml/i,\r\n            jsonType = 'application/json',\r\n            htmlType = 'text/html',\r\n            blankRE = /^\\s*$/;\r\n\r\n        var XhrDefaultOptions = {\r\n            async: true,\r\n\r\n            // Default type of request\r\n            type: 'GET',\r\n            // Callback that is executed before request\r\n            beforeSend: noop,\r\n            // Callback that is executed if the request succeeds\r\n            success: noop,\r\n            // Callback that is executed the the server drops error\r\n            error: noop,\r\n            // Callback that is executed on request complete (both: error and success)\r\n            complete: noop,\r\n            // The context for the callbacks\r\n            context: null,\r\n            // Whether to trigger \"global\" Ajax events\r\n            global: true,\r\n\r\n            // MIME types mapping\r\n            // IIS returns Javascript as \"application/x-javascript\"\r\n            accepts: {\r\n                script: 'text/javascript, application/javascript, application/x-javascript',\r\n                json: 'application/json',\r\n                xml: 'application/xml, text/xml',\r\n                html: 'text/html',\r\n                text: 'text/plain'\r\n            },\r\n            // Whether the request is to another domain\r\n            crossDomain: false,\r\n            // Default timeout\r\n            timeout: 0,\r\n            // Whether data should be serialized to string\r\n            processData: true,\r\n            // Whether the browser should be allowed to cache GET responses\r\n            cache: true,\r\n\r\n            xhrFields : {\r\n                withCredentials : true\r\n            }\r\n        };\r\n\r\n        function mimeToDataType(mime) {\r\n            if (mime) {\r\n                mime = mime.split(';', 2)[0];\r\n            }\r\n            if (mime) {\r\n                if (mime == htmlType) {\r\n                    return \"html\";\r\n                } else if (mime == jsonType) {\r\n                    return \"json\";\r\n                } else if (scriptTypeRE.test(mime)) {\r\n                    return \"script\";\r\n                } else if (xmlTypeRE.test(mime)) {\r\n                    return \"xml\";\r\n                }\r\n            }\r\n            return \"text\";\r\n        }\r\n\r\n        function appendQuery(url, query) {\r\n            if (query == '') return url\r\n            return (url + '&' + query).replace(/[&?]{1,2}/, '?')\r\n        }\r\n\r\n        // serialize payload and append it to the URL for GET requests\r\n        function serializeData(options) {\r\n            options.data = options.data || options.query;\r\n            if (options.processData && options.data && type(options.data) != \"string\") {\r\n                options.data = param(options.data, options.traditional);\r\n            }\r\n            if (options.data && (!options.type || options.type.toUpperCase() == 'GET')) {\r\n                options.url = appendQuery(options.url, options.data);\r\n                options.data = undefined;\r\n            }\r\n        }\r\n\r\n        function serialize(params, obj, traditional, scope) {\r\n            var t, array = isArray(obj),\r\n                hash = isPlainObject(obj)\r\n            each(obj, function(key, value) {\r\n                t =type(value);\r\n                if (scope) key = traditional ? scope :\r\n                    scope + '[' + (hash || t == 'object' || t == 'array' ? key : '') + ']'\r\n                // handle data in serializeArray() format\r\n                if (!scope && array) params.add(value.name, value.value)\r\n                // recurse into nested objects\r\n                else if (t == \"array\" || (!traditional && t == \"object\"))\r\n                    serialize(params, value, traditional, key)\r\n                else params.add(key, value)\r\n            })\r\n        }\r\n\r\n        var param = function(obj, traditional) {\r\n            var params = []\r\n            params.add = function(key, value) {\r\n                if (isFunction(value)) {\r\n                  value = value();\r\n                }\r\n                if (value == null) {\r\n                  value = \"\";\r\n                }\r\n                this.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\r\n            };\r\n            serialize(params, obj, traditional)\r\n            return params.join('&').replace(/%20/g, '+')\r\n        };\r\n\r\n        var Xhr = Evented.inherit({\r\n            klassName : \"Xhr\",\r\n\r\n            _request  : function(args) {\r\n                var _ = this._,\r\n                    self = this,\r\n                    options = mixin({},XhrDefaultOptions,_.options,args),\r\n                    xhr = _.xhr = new XMLHttpRequest();\r\n\r\n                serializeData(options)\r\n\r\n                if (options.beforeSend) {\r\n                    options.beforeSend.call(this, xhr, options);\r\n                }                \r\n\r\n                var dataType = options.dataType || options.handleAs,\r\n                    mime = options.mimeType || options.accepts[dataType],\r\n                    headers = options.headers,\r\n                    xhrFields = options.xhrFields,\r\n                    isFormData = options.data && options.data instanceof FormData,\r\n                    basicAuthorizationToken = options.basicAuthorizationToken,\r\n                    type = options.type,\r\n                    url = options.url,\r\n                    async = options.async,\r\n                    user = options.user , \r\n                    password = options.password,\r\n                    deferred = new Deferred(),\r\n                    contentType = isFormData ? false : 'application/x-www-form-urlencoded';\r\n\r\n                if (xhrFields) {\r\n                    for (name in xhrFields) {\r\n                        xhr[name] = xhrFields[name];\r\n                    }\r\n                }\r\n\r\n                if (mime && mime.indexOf(',') > -1) {\r\n                    mime = mime.split(',', 2)[0];\r\n                }\r\n                if (mime && xhr.overrideMimeType) {\r\n                    xhr.overrideMimeType(mime);\r\n                }\r\n\r\n                //if (dataType) {\r\n                //    xhr.responseType = dataType;\r\n                //}\r\n\r\n                var finish = function() {\r\n                    xhr.onloadend = noop;\r\n                    xhr.onabort = noop;\r\n                    xhr.onprogress = noop;\r\n                    xhr.ontimeout = noop;\r\n                    xhr = null;\r\n                }\r\n                var onloadend = function() {\r\n                    var result, error = false\r\n                    if ((xhr.status >= 200 && xhr.status < 300) || xhr.status == 304 || (xhr.status == 0 && getAbsoluteUrl(url).startsWith('file:'))) {\r\n                        dataType = dataType || mimeToDataType(options.mimeType || xhr.getResponseHeader('content-type'));\r\n\r\n                        result = xhr.responseText;\r\n                        try {\r\n                            if (dataType == 'script') {\r\n                                eval(result);\r\n                            } else if (dataType == 'xml') {\r\n                                result = xhr.responseXML;\r\n                            } else if (dataType == 'json') {\r\n                                result = blankRE.test(result) ? null : JSON.parse(result);\r\n                            } else if (dataType == \"blob\") {\r\n                                result = Blob([xhrObj.response]);\r\n                            } else if (dataType == \"arraybuffer\") {\r\n                                result = xhr.reponse;\r\n                            }\r\n                        } catch (e) { \r\n                            error = e;\r\n                        }\r\n\r\n                        if (error) {\r\n                            deferred.reject(error,xhr.status,xhr);\r\n                        } else {\r\n                            deferred.resolve(result,xhr.status,xhr);\r\n                        }\r\n                    } else {\r\n                        deferred.reject(new Error(xhr.statusText),xhr.status,xhr);\r\n                    }\r\n                    finish();\r\n                };\r\n\r\n                var onabort = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"abort\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n \r\n                var ontimeout = function() {\r\n                    if (deferred) {\r\n                        deferred.reject(new Error(\"timeout\"),xhr.status,xhr);\r\n                    }\r\n                    finish();                 \r\n                }\r\n\r\n                var onprogress = function(evt) {\r\n                    if (deferred) {\r\n                        deferred.notify(evt,xhr.status,xhr);\r\n                    }\r\n                }\r\n\r\n                xhr.onloadend = onloadend;\r\n                xhr.onabort = onabort;\r\n                xhr.ontimeout = ontimeout;\r\n                xhr.onprogress = onprogress;\r\n\r\n                xhr.open(type, url, async, user, password);\r\n               \r\n                if (headers) {\r\n                    for ( var key in headers) {\r\n                        var value = headers[key];\r\n \r\n                        if(key.toLowerCase() === 'content-type'){\r\n                            contentType = headers[hdr];\r\n                        } else {\r\n                           xhr.setRequestHeader(key, value);\r\n                        }\r\n                    }\r\n                }   \r\n\r\n                if  (contentType && contentType !== false){\r\n                    xhr.setRequestHeader('Content-Type', contentType);\r\n                }\r\n\r\n                if(!headers || !('X-Requested-With' in headers)){\r\n                    xhr.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\r\n                }\r\n\r\n\r\n                //If basicAuthorizationToken is defined set its value into \"Authorization\" header\r\n                if (basicAuthorizationToken) {\r\n                    xhr.setRequestHeader(\"Authorization\", basicAuthorizationToken);\r\n                }\r\n\r\n                xhr.send(options.data ? options.data : null);\r\n\r\n                return deferred.promise;\r\n\r\n            },\r\n\r\n            \"abort\": function() {\r\n                var _ = this._,\r\n                    xhr = _.xhr;\r\n\r\n                if (xhr) {\r\n                    xhr.abort();\r\n                }    \r\n            },\r\n\r\n\r\n            \"request\": function(args) {\r\n                return this._request(args);\r\n            },\r\n\r\n            get : function(args) {\r\n                args = args || {};\r\n                args.type = \"GET\";\r\n                return this._request(args);\r\n            },\r\n\r\n            post : function(args) {\r\n                args = args || {};\r\n                args.type = \"POST\";\r\n                return this._request(args);\r\n            },\r\n\r\n            patch : function(args) {\r\n                args = args || {};\r\n                args.type = \"PATCH\";\r\n                return this._request(args);\r\n            },\r\n\r\n            put : function(args) {\r\n                args = args || {};\r\n                args.type = \"PUT\";\r\n                return this._request(args);\r\n            },\r\n\r\n            del : function(args) {\r\n                args = args || {};\r\n                args.type = \"DELETE\";\r\n                return this._request(args);\r\n            },\r\n\r\n            \"init\": function(options) {\r\n                this._ = {\r\n                    options : options || {}\r\n                };\r\n            }\r\n        });\r\n\r\n        [\"request\",\"get\",\"post\",\"put\",\"del\",\"patch\"].forEach(function(name){\r\n            Xhr[name] = function(url,args) {\r\n                var xhr = new Xhr({\"url\" : url});\r\n                return xhr[name](args);\r\n            };\r\n        });\r\n\r\n        Xhr.defaultOptions = XhrDefaultOptions;\r\n        Xhr.param = param;\r\n\r\n        return Xhr;\r\n    })();\r\n\r\n\treturn skylark.attach(\"langx.Xhr\",Xhr);\t\r\n});\ndefine('skylark-langx-xhr/main',[\r\n\t\"./Xhr\"\r\n],function(Xhr){\r\n\treturn Xhr;\r\n});\ndefine('skylark-langx-xhr', ['skylark-langx-xhr/main'], function (main) { return main; });\n\ndefine('skylark-langx/Xhr',[\r\n    \"skylark-langx-xhr\"\r\n],function(xhr){\r\n    return xhr;\r\n});\ndefine('skylark-langx/Restful',[\r\n    \"./Evented\",\r\n    \"./objects\",\r\n    \"./strings\",\r\n    \"./Xhr\"\r\n],function(Evented,objects,strings,Xhr){\r\n    var mixin = objects.mixin,\r\n        substitute = strings.substitute;\r\n\r\n    var Restful = Evented.inherit({\r\n        \"klassName\" : \"Restful\",\r\n\r\n        \"idAttribute\": \"id\",\r\n        \r\n        getBaseUrl : function(args) {\r\n            //$$baseEndpoint : \"/files/${fileId}/comments\",\r\n            var baseEndpoint = substitute(this.baseEndpoint,args),\r\n                baseUrl = this.server + this.basePath + baseEndpoint;\r\n            if (args[this.idAttribute]!==undefined) {\r\n                baseUrl = baseUrl + \"/\" + args[this.idAttribute]; \r\n            }\r\n            return baseUrl;\r\n        },\r\n        _head : function(args) {\r\n            //get resource metadata .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n        },\r\n        _get : function(args) {\r\n            //get resource ,one or list .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, null if list\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            return Xhr.get(this.getBaseUrl(args),args);\r\n        },\r\n        _post  : function(args,verb) {\r\n            //create or move resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.post(url, args);\r\n        },\r\n\r\n        _put  : function(args,verb) {\r\n            //update resource .\r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            //verb : the verb ,ex: copy,touch,trash,untrash,watch\r\n            var url = this.getBaseUrl(args);\r\n            if (verb) {\r\n                url = url + \"/\" + verb;\r\n            }\r\n            return Xhr.put(url, args);\r\n        },\r\n\r\n        _delete : function(args) {\r\n            //delete resource . \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}         \r\n\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.del(url);\r\n        },\r\n\r\n        _patch : function(args){\r\n            //update resource metadata. \r\n            //args : id and other info for the resource ,ex\r\n            //{\r\n            //  \"id\" : 234,  // the own id, required\r\n            //  \"data\" : body // the own data,required\r\n            //  \"fileId\"   : 2 // the parent resource id, option by resource\r\n            //}\r\n            var url = this.getBaseUrl(args);\r\n            return Xhr.patch(url, args);\r\n        },\r\n        query: function(params) {\r\n            \r\n            return this._post(params);\r\n        },\r\n\r\n        retrieve: function(params) {\r\n            return this._get(params);\r\n        },\r\n\r\n        create: function(params) {\r\n            return this._post(params);\r\n        },\r\n\r\n        update: function(params) {\r\n            return this._put(params);\r\n        },\r\n\r\n        delete: function(params) {\r\n            // HTTP request : DELETE http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._delete(params);\r\n        },\r\n\r\n        patch: function(params) {\r\n           // HTTP request : PATCH http://center.utilhub.com/registry/v1/apps/{appid}\r\n            return this._patch(params);\r\n        },\r\n        init: function(params) {\r\n            mixin(this,params);\r\n //           this._xhr = XHRx();\r\n       }\r\n    });\r\n\r\n    return Restful;\r\n});\ndefine('skylark-langx/Stateful',[\r\n\t\"./Evented\",\r\n  \"./strings\",\r\n  \"./objects\"\r\n],function(Evented,strings,objects){\r\n    var isEqual = objects.isEqual,\r\n        mixin = objects.mixin,\r\n        result = objects.result,\r\n        isEmptyObject = objects.isEmptyObject,\r\n        clone = objects.clone,\r\n        uniqueId = strings.uniqueId;\r\n\r\n    var Stateful = Evented.inherit({\r\n        _construct : function(attributes, options) {\r\n            var attrs = attributes || {};\r\n            options || (options = {});\r\n            this.cid = uniqueId(this.cidPrefix);\r\n            this.attributes = {};\r\n            if (options.collection) this.collection = options.collection;\r\n            if (options.parse) attrs = this.parse(attrs, options) || {};\r\n            var defaults = result(this, 'defaults');\r\n            attrs = mixin({}, defaults, attrs);\r\n            this.set(attrs, options);\r\n            this.changed = {};\r\n        },\r\n\r\n        // A hash of attributes whose current and previous value differ.\r\n        changed: null,\r\n\r\n        // The value returned during the last failed validation.\r\n        validationError: null,\r\n\r\n        // The default name for the JSON `id` attribute is `\"id\"`. MongoDB and\r\n        // CouchDB users may want to set this to `\"_id\"`.\r\n        idAttribute: 'id',\r\n\r\n        // The prefix is used to create the client id which is used to identify models locally.\r\n        // You may want to override this if you're experiencing name clashes with model ids.\r\n        cidPrefix: 'c',\r\n\r\n\r\n        // Return a copy of the model's `attributes` object.\r\n        toJSON: function(options) {\r\n          return clone(this.attributes);\r\n        },\r\n\r\n\r\n        // Get the value of an attribute.\r\n        get: function(attr) {\r\n          return this.attributes[attr];\r\n        },\r\n\r\n        // Returns `true` if the attribute contains a value that is not null\r\n        // or undefined.\r\n        has: function(attr) {\r\n          return this.get(attr) != null;\r\n        },\r\n\r\n        // Set a hash of model attributes on the object, firing `\"change\"`. This is\r\n        // the core primitive operation of a model, updating the data and notifying\r\n        // anyone who needs to know about the change in state. The heart of the beast.\r\n        set: function(key, val, options) {\r\n          if (key == null) return this;\r\n\r\n          // Handle both `\"key\", value` and `{key: value}` -style arguments.\r\n          var attrs;\r\n          if (typeof key === 'object') {\r\n            attrs = key;\r\n            options = val;\r\n          } else {\r\n            (attrs = {})[key] = val;\r\n          }\r\n\r\n          options || (options = {});\r\n\r\n          // Run validation.\r\n          if (!this._validate(attrs, options)) return false;\r\n\r\n          // Extract attributes and options.\r\n          var unset      = options.unset;\r\n          var silent     = options.silent;\r\n          var changes    = [];\r\n          var changing   = this._changing;\r\n          this._changing = true;\r\n\r\n          if (!changing) {\r\n            this._previousAttributes = clone(this.attributes);\r\n            this.changed = {};\r\n          }\r\n\r\n          var current = this.attributes;\r\n          var changed = this.changed;\r\n          var prev    = this._previousAttributes;\r\n\r\n          // For each `set` attribute, update or delete the current value.\r\n          for (var attr in attrs) {\r\n            val = attrs[attr];\r\n            if (!isEqual(current[attr], val)) changes.push(attr);\r\n            if (!isEqual(prev[attr], val)) {\r\n              changed[attr] = val;\r\n            } else {\r\n              delete changed[attr];\r\n            }\r\n            unset ? delete current[attr] : current[attr] = val;\r\n          }\r\n\r\n          // Update the `id`.\r\n          if (this.idAttribute in attrs) this.id = this.get(this.idAttribute);\r\n\r\n          // Trigger all relevant attribute changes.\r\n          if (!silent) {\r\n            if (changes.length) this._pending = options;\r\n            for (var i = 0; i < changes.length; i++) {\r\n              this.trigger('change:' + changes[i], this, current[changes[i]], options);\r\n            }\r\n          }\r\n\r\n          // You might be wondering why there's a `while` loop here. Changes can\r\n          // be recursively nested within `\"change\"` events.\r\n          if (changing) return this;\r\n          if (!silent) {\r\n            while (this._pending) {\r\n              options = this._pending;\r\n              this._pending = false;\r\n              this.trigger('change', this, options);\r\n            }\r\n          }\r\n          this._pending = false;\r\n          this._changing = false;\r\n          return this;\r\n        },\r\n\r\n        // Remove an attribute from the model, firing `\"change\"`. `unset` is a noop\r\n        // if the attribute doesn't exist.\r\n        unset: function(attr, options) {\r\n          return this.set(attr, void 0, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Clear all attributes on the model, firing `\"change\"`.\r\n        clear: function(options) {\r\n          var attrs = {};\r\n          for (var key in this.attributes) attrs[key] = void 0;\r\n          return this.set(attrs, mixin({}, options, {unset: true}));\r\n        },\r\n\r\n        // Determine if the model has changed since the last `\"change\"` event.\r\n        // If you specify an attribute name, determine if that attribute has changed.\r\n        hasChanged: function(attr) {\r\n          if (attr == null) return !isEmptyObject(this.changed);\r\n          return this.changed[attr] !== undefined;\r\n        },\r\n\r\n        // Return an object containing all the attributes that have changed, or\r\n        // false if there are no changed attributes. Useful for determining what\r\n        // parts of a view need to be updated and/or what attributes need to be\r\n        // persisted to the server. Unset attributes will be set to undefined.\r\n        // You can also pass an attributes object to diff against the model,\r\n        // determining if there *would be* a change.\r\n        changedAttributes: function(diff) {\r\n          if (!diff) return this.hasChanged() ? clone(this.changed) : false;\r\n          var old = this._changing ? this._previousAttributes : this.attributes;\r\n          var changed = {};\r\n          for (var attr in diff) {\r\n            var val = diff[attr];\r\n            if (isEqual(old[attr], val)) continue;\r\n            changed[attr] = val;\r\n          }\r\n          return !isEmptyObject(changed) ? changed : false;\r\n        },\r\n\r\n        // Get the previous value of an attribute, recorded at the time the last\r\n        // `\"change\"` event was fired.\r\n        previous: function(attr) {\r\n          if (attr == null || !this._previousAttributes) return null;\r\n          return this._previousAttributes[attr];\r\n        },\r\n\r\n        // Get all of the attributes of the model at the time of the previous\r\n        // `\"change\"` event.\r\n        previousAttributes: function() {\r\n          return clone(this._previousAttributes);\r\n        },\r\n\r\n        // Create a new model with identical attributes to this one.\r\n        clone: function() {\r\n          return new this.constructor(this.attributes);\r\n        },\r\n\r\n        // A model is new if it has never been saved to the server, and lacks an id.\r\n        isNew: function() {\r\n          return !this.has(this.idAttribute);\r\n        },\r\n\r\n        // Check if the model is currently in a valid state.\r\n        isValid: function(options) {\r\n          return this._validate({}, mixin({}, options, {validate: true}));\r\n        },\r\n\r\n        // Run validation against the next complete set of model attributes,\r\n        // returning `true` if all is well. Otherwise, fire an `\"invalid\"` event.\r\n        _validate: function(attrs, options) {\r\n          if (!options.validate || !this.validate) return true;\r\n          attrs = mixin({}, this.attributes, attrs);\r\n          var error = this.validationError = this.validate(attrs, options) || null;\r\n          if (!error) return true;\r\n          this.trigger('invalid', this, error, mixin(options, {validationError: error}));\r\n          return false;\r\n        }\r\n    });\r\n\r\n\treturn Stateful;\r\n});\ndefine('skylark-langx-topic/topic',[\r\n\t\"skylark-langx-ns\",\r\n\t\"skylark-langx-emitter/Evented\"\r\n],function(skylark,Evented){\r\n\tvar hub = new Evented();\r\n\r\n\treturn skylark.attach(\"langx.topic\",{\r\n\t    publish: function(name, arg1,argn) {\r\n\t        var data = [].slice.call(arguments, 1);\r\n\r\n\t        return hub.trigger({\r\n\t            type : name,\r\n\t            data : data\r\n\t        });\r\n\t    },\r\n\r\n        subscribe: function(name, listener,ctx) {\r\n        \tvar handler = function(e){\r\n                listener.apply(ctx,e.data);\r\n            };\r\n            hub.on(name, handler);\r\n            return {\r\n            \tremove : function(){\r\n            \t\thub.off(name,handler);\r\n            \t}\r\n            }\r\n\r\n        }\r\n\r\n\t});\r\n});\ndefine('skylark-langx-topic/main',[\r\n\t\"./topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx-topic', ['skylark-langx-topic/main'], function (main) { return main; });\n\ndefine('skylark-langx/topic',[\r\n\t\"skylark-langx-topic\"\r\n],function(topic){\r\n\treturn topic;\r\n});\ndefine('skylark-langx/types',[\r\n    \"skylark-langx-types\"\r\n],function(types){\r\n    return types;\r\n});\ndefine('skylark-langx/langx',[\r\n    \"./skylark\",\r\n    \"./arrays\",\r\n    \"./ArrayStore\",\r\n    \"./aspect\",\r\n    \"./async\",\r\n    \"./datetimes\",\r\n    \"./Deferred\",\r\n    \"./Evented\",\r\n    \"./funcs\",\r\n    \"./hoster\",\r\n    \"./klass\",\r\n    \"./numbers\",\r\n    \"./objects\",\r\n    \"./Restful\",\r\n    \"./Stateful\",\r\n    \"./strings\",\r\n    \"./topic\",\r\n    \"./types\",\r\n    \"./Xhr\"\r\n], function(skylark,arrays,ArrayStore,aspect,async,datetimes,Deferred,Evented,funcs,hoster,klass,numbers,objects,Restful,Stateful,strings,topic,types,Xhr) {\r\n    \"use strict\";\r\n    var toString = {}.toString,\r\n        concat = Array.prototype.concat,\r\n        indexOf = Array.prototype.indexOf,\r\n        slice = Array.prototype.slice,\r\n        filter = Array.prototype.filter,\r\n        mixin = objects.mixin,\r\n        safeMixin = objects.safeMixin,\r\n        isFunction = types.isFunction;\r\n\r\n\r\n    function createEvent(type, props) {\r\n        var e = new CustomEvent(type, props);\r\n\r\n        return safeMixin(e, props);\r\n    }\r\n    \r\n\r\n    function funcArg(context, arg, idx, payload) {\r\n        return isFunction(arg) ? arg.call(context, idx, payload) : arg;\r\n    }\r\n\r\n    function getQueryParams(url) {\r\n        var url = url || window.location.href,\r\n            segs = url.split(\"?\"),\r\n            params = {};\r\n\r\n        if (segs.length > 1) {\r\n            segs[1].split(\"&\").forEach(function(queryParam) {\r\n                var nv = queryParam.split('=');\r\n                params[nv[0]] = nv[1];\r\n            });\r\n        }\r\n        return params;\r\n    }\r\n\r\n\r\n    function toPixel(value) {\r\n        // style values can be floats, client code may want\r\n        // to round for integer pixels.\r\n        return parseFloat(value) || 0;\r\n    }\r\n\r\n\r\n    var _uid = 1;\r\n\r\n    function uid(obj) {\r\n        return obj._uid || (obj._uid = _uid++);\r\n    }\r\n\r\n    function langx() {\r\n        return langx;\r\n    }\r\n\r\n    mixin(langx, {\r\n        createEvent : createEvent,\r\n\r\n        funcArg: funcArg,\r\n\r\n        getQueryParams: getQueryParams,\r\n\r\n        toPixel: toPixel,\r\n\r\n        uid: uid,\r\n\r\n        URL: typeof window !== \"undefined\" ? window.URL || window.webkitURL : null\r\n\r\n    });\r\n\r\n\r\n    mixin(langx, arrays,aspect,datetimes,funcs,numbers,objects,strings,types,{\r\n        ArrayStore : ArrayStore,\r\n\r\n        async : async,\r\n        \r\n        Deferred: Deferred,\r\n\r\n        Evented: Evented,\r\n\r\n        hoster : hoster,\r\n\r\n        klass : klass,\r\n\r\n        Restful: Restful,\r\n        \r\n        Stateful: Stateful,\r\n\r\n        topic : topic,\r\n\r\n        Xhr: Xhr\r\n\r\n    });\r\n\r\n    return skylark.langx = langx;\r\n});\ndefine('skylark-domx-browser/browser',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark,langx) {\r\n    \"use strict\";\r\n\r\n    var browser = langx.hoster.browser;\r\n \r\n    var checkedCssProperties = {\r\n            \"transitionproperty\": \"TransitionProperty\",\r\n        },\r\n        transEndEventNames = {\r\n          WebkitTransition : 'webkitTransitionEnd',\r\n          MozTransition    : 'transitionend',\r\n          OTransition      : 'oTransitionEnd otransitionend',\r\n          transition       : 'transitionend'\r\n        },\r\n        transEndEventName = null;\r\n\r\n\r\n    var css3PropPrefix = \"\",\r\n        css3StylePrefix = \"\",\r\n        css3EventPrefix = \"\",\r\n\r\n        cssStyles = {},\r\n        cssProps = {},\r\n\r\n        vendorPrefix,\r\n        vendorPrefixRE,\r\n        vendorPrefixesRE = /^(Webkit|webkit|O|Moz|moz|ms)(.*)$/,\r\n\r\n        document = window.document,\r\n        testEl = document.createElement(\"div\"),\r\n\r\n        matchesSelector = testEl.webkitMatchesSelector ||\r\n                          testEl.mozMatchesSelector ||\r\n                          testEl.oMatchesSelector ||\r\n                          testEl.matchesSelector,\r\n\r\n        requestFullScreen = testEl.requestFullscreen || \r\n                            testEl.webkitRequestFullscreen || \r\n                            testEl.mozRequestFullScreen || \r\n                            testEl.msRequestFullscreen,\r\n\r\n        exitFullScreen =  document.exitFullscreen ||\r\n                          document.webkitCancelFullScreen ||\r\n                          document.mozCancelFullScreen ||\r\n                          document.msExitFullscreen,\r\n\r\n        testStyle = testEl.style;\r\n\r\n    for (var name in testStyle) {\r\n        var matched = name.match(vendorPrefixRE || vendorPrefixesRE);\r\n        if (matched) {\r\n            if (!vendorPrefixRE) {\r\n                vendorPrefix = matched[1];\r\n                vendorPrefixRE = new RegExp(\"^(\" + vendorPrefix + \")(.*)$\");\r\n\r\n                css3StylePrefix = vendorPrefix;\r\n                css3PropPrefix = '-' + vendorPrefix.toLowerCase() + '-';\r\n                css3EventPrefix = vendorPrefix.toLowerCase();\r\n            }\r\n\r\n            cssStyles[langx.lowerFirst(matched[2])] = name;\r\n            var cssPropName = langx.dasherize(matched[2]);\r\n            cssProps[cssPropName] = css3PropPrefix + cssPropName;\r\n\r\n            if (transEndEventNames[name]) {\r\n              transEndEventName = transEndEventNames[name];\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!transEndEventName) {\r\n        if (testStyle[\"transition\"] !== undefined) {\r\n            transEndEventName = transEndEventNames[\"transition\"];\r\n        }\r\n    }\r\n\r\n    function normalizeCssEvent(name) {\r\n        return css3EventPrefix ? css3EventPrefix + name : name.toLowerCase();\r\n    }\r\n\r\n    function normalizeCssProperty(name) {\r\n        return cssProps[name] || name;\r\n    }\r\n\r\n    function normalizeStyleProperty(name) {\r\n        return cssStyles[name] || name;\r\n    }\r\n\r\n    langx.mixin(browser, {\r\n        css3PropPrefix: css3PropPrefix,\r\n\r\n        isIE : !!/msie/i.exec( window.navigator.userAgent ),\r\n\r\n        normalizeStyleProperty: normalizeStyleProperty,\r\n\r\n        normalizeCssProperty: normalizeCssProperty,\r\n\r\n        normalizeCssEvent: normalizeCssEvent,\r\n\r\n        matchesSelector: matchesSelector,\r\n\r\n        requestFullScreen : requestFullScreen,\r\n\r\n        exitFullscreen : requestFullScreen,\r\n\r\n        location: function() {\r\n            return window.location;\r\n        },\r\n\r\n        support : {\r\n\r\n        }\r\n\r\n    });\r\n\r\n    if  (transEndEventName) {\r\n        browser.support.transition = {\r\n            end : transEndEventName\r\n        };\r\n    }\r\n\r\n    testEl = null;\r\n\r\n    return skylark.attach(\"domx.browser\",browser);\r\n});\r\n\ndefine('skylark-domx-browser/main',[\r\n\t\"./browser\"\r\n],function(browser){\r\n\treturn browser;\r\n});\ndefine('skylark-domx-browser', ['skylark-domx-browser/main'], function (main) { return main; });\n\ndefine('skylark-domx-styler/styler',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\"\r\n], function(skylark, langx) {\r\n    var every = Array.prototype.every,\r\n        forEach = Array.prototype.forEach,\r\n        camelCase = langx.camelCase,\r\n        dasherize = langx.dasherize;\r\n\r\n    function maybeAddPx(name, value) {\r\n        return (typeof value == \"number\" && !cssNumber[dasherize(name)]) ? value + \"px\" : value\r\n    }\r\n\r\n    var cssNumber = {\r\n            'column-count': 1,\r\n            'columns': 1,\r\n            'font-weight': 1,\r\n            'line-height': 1,\r\n            'opacity': 1,\r\n            'z-index': 1,\r\n            'zoom': 1\r\n        },\r\n        classReCache = {\r\n\r\n        };\r\n\r\n    function classRE(name) {\r\n        return name in classReCache ?\r\n            classReCache[name] : (classReCache[name] = new RegExp('(^|\\\\s)' + name + '(\\\\s|$)'));\r\n    }\r\n\r\n    // access className property while respecting SVGAnimatedString\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} value\r\n     */\r\n    function className(node, value) {\r\n        var klass = node.className || '',\r\n            svg = klass && klass.baseVal !== undefined\r\n\r\n        if (value === undefined) return svg ? klass.baseVal : klass\r\n        svg ? (klass.baseVal = value) : (node.className = value)\r\n    }\r\n\r\n    function disabled(elm, value ) {\r\n        if (arguments.length < 2) {\r\n            return !!this.dom.disabled;\r\n        }\r\n\r\n        elm.disabled = value;\r\n\r\n        return this;\r\n    }\r\n\r\n    var elementDisplay = {};\r\n\r\n    function defaultDisplay(nodeName) {\r\n        var element, display\r\n        if (!elementDisplay[nodeName]) {\r\n            element = document.createElement(nodeName)\r\n            document.body.appendChild(element)\r\n            display = getStyles(element).getPropertyValue(\"display\")\r\n            element.parentNode.removeChild(element)\r\n            display == \"none\" && (display = \"block\")\r\n            elementDisplay[nodeName] = display\r\n        }\r\n        return elementDisplay[nodeName]\r\n    }\r\n    /*\r\n     * Display the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function show(elm) {\r\n        styler.css(elm, \"display\", \"\");\r\n        if (styler.css(elm, \"display\") == \"none\") {\r\n            styler.css(elm, \"display\", defaultDisplay(elm.nodeName));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function isInvisible(elm) {\r\n        return styler.css(elm, \"display\") == \"none\" || styler.css(elm, \"opacity\") == 0;\r\n    }\r\n\r\n    /*\r\n     * Hide the matched elements.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function hide(elm) {\r\n        styler.css(elm, \"display\", \"none\");\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Adds the specified class(es) to each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function addClass(elm, name) {\r\n        if (!name) return this\r\n        var cls = className(elm),\r\n            names;\r\n        if (langx.isString(name)) {\r\n            names = name.split(/\\s+/g);\r\n        } else {\r\n            names = name;\r\n        }\r\n        names.forEach(function(klass) {\r\n            var re = classRE(klass);\r\n            if (!cls.match(re)) {\r\n                cls += (cls ? \" \" : \"\") + klass;\r\n            }\r\n        });\r\n\r\n        className(elm, cls);\r\n\r\n        return this;\r\n    }\r\n\r\n    function getStyles( elem ) {\r\n\r\n        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)\r\n        // IE throws on elements created in popups\r\n        // FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\r\n        var view = elem.ownerDocument.defaultView;\r\n\r\n        if ( !view || !view.opener ) {\r\n            view = window;\r\n        }\r\n\r\n        return view.getComputedStyle( elem);\r\n    }\r\n\r\n\r\n    /*\r\n     * Get the value of a computed style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} property\r\n     * @param {Any} value\r\n     */\r\n    function css(elm, property, value) {\r\n        if (arguments.length < 3) {\r\n            var computedStyle,\r\n                computedStyle = getStyles(elm)\r\n            if (langx.isString(property)) {\r\n                return elm.style[camelCase(property)] || computedStyle.getPropertyValue(dasherize(property))\r\n            } else if (langx.isArrayLike(property)) {\r\n                var props = {}\r\n                forEach.call(property, function(prop) {\r\n                    props[prop] = (elm.style[camelCase(prop)] || computedStyle.getPropertyValue(dasherize(prop)))\r\n                })\r\n                return props\r\n            }\r\n        }\r\n\r\n        var css = '';\r\n        if (typeof(property) == 'string') {\r\n            if (!value && value !== 0) {\r\n                elm.style.removeProperty(dasherize(property));\r\n            } else {\r\n                css = dasherize(property) + \":\" + maybeAddPx(property, value)\r\n            }\r\n        } else {\r\n            for (key in property) {\r\n                if (property[key] === undefined) {\r\n                    continue;\r\n                }\r\n                if (!property[key] && property[key] !== 0) {\r\n                    elm.style.removeProperty(dasherize(key));\r\n                } else {\r\n                    css += dasherize(key) + ':' + maybeAddPx(key, property[key]) + ';'\r\n                }\r\n            }\r\n        }\r\n\r\n        elm.style.cssText += ';' + css;\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Determine whether any of the matched elements are assigned the given class.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function hasClass(elm, name) {\r\n        var re = classRE(name);\r\n        return elm.className && elm.className.match(re);\r\n    }\r\n\r\n    /*\r\n     * Remove a single class, multiple classes, or all classes from each element in the set of matched elements.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     */\r\n    function removeClass(elm, name) {\r\n        if (name) {\r\n            var cls = className(elm),\r\n                names;\r\n\r\n            if (langx.isString(name)) {\r\n                names = name.split(/\\s+/g);\r\n            } else {\r\n                names = name;\r\n            }\r\n\r\n            names.forEach(function(klass) {\r\n                var re = classRE(klass);\r\n                if (cls.match(re)) {\r\n                    cls = cls.replace(re, \" \");\r\n                }\r\n            });\r\n\r\n            className(elm, cls.trim());\r\n        } else {\r\n            className(elm, \"\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * Add or remove one or more classes from the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String} name\r\n     * @param {} when\r\n     */\r\n    function toggleClass(elm, name, when) {\r\n        var self = this;\r\n        name.split(/\\s+/g).forEach(function(klass) {\r\n            if (when === undefined) {\r\n                when = !self.hasClass(elm, klass);\r\n            }\r\n            if (when) {\r\n                self.addClass(elm, klass);\r\n            } else {\r\n                self.removeClass(elm, klass)\r\n            }\r\n        });\r\n\r\n        return self;\r\n    }\r\n\r\n    var styler = function() {\r\n        return styler;\r\n    };\r\n\r\n    langx.mixin(styler, {\r\n        autocssfix: false,\r\n        cssHooks: {\r\n\r\n        },\r\n\r\n        addClass: addClass,\r\n        className: className,\r\n        css: css,\r\n        disabled : disabled,        \r\n        hasClass: hasClass,\r\n        hide: hide,\r\n        isInvisible: isInvisible,\r\n        removeClass: removeClass,\r\n        show: show,\r\n        toggleClass: toggleClass\r\n    });\r\n\r\n    return skylark.attach(\"domx.styler\", styler);\r\n});\ndefine('skylark-domx-styler/main',[\r\n\t\"./styler\"\r\n],function(styler){\r\n\treturn styler;\r\n});\ndefine('skylark-domx-styler', ['skylark-domx-styler/main'], function (main) { return main; });\n\ndefine('skylark-domx-noder/noder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, browser, styler) {\r\n    var isIE = !!navigator.userAgent.match(/Trident/g) || !!navigator.userAgent.match(/MSIE/g),\r\n        fragmentRE = /^\\s*<(\\w+|!)[^>]*>/,\r\n        singleTagRE = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/,\r\n        div = document.createElement(\"div\"),\r\n        table = document.createElement('table'),\r\n        tableBody = document.createElement('tbody'),\r\n        tableRow = document.createElement('tr'),\r\n        containers = {\r\n            'tr': tableBody,\r\n            'tbody': table,\r\n            'thead': table,\r\n            'tfoot': table,\r\n            'td': tableRow,\r\n            'th': tableRow,\r\n            '*': div\r\n        },\r\n        rootNodeRE = /^(?:body|html)$/i,\r\n        map = Array.prototype.map,\r\n        slice = Array.prototype.slice;\r\n\r\n    function ensureNodes(nodes, copyByClone) {\r\n        if (!langx.isArrayLike(nodes)) {\r\n            nodes = [nodes];\r\n        }\r\n        if (copyByClone) {\r\n            nodes = map.call(nodes, function(node) {\r\n                return node.cloneNode(true);\r\n            });\r\n        }\r\n        return langx.flatten(nodes);\r\n    }\r\n\r\n    function nodeName(elm, chkName) {\r\n        var name = elm.nodeName && elm.nodeName.toLowerCase();\r\n        if (chkName !== undefined) {\r\n            return name === chkName.toLowerCase();\r\n        }\r\n        return name;\r\n    };\r\n\r\n\r\n    function activeElement(doc) {\r\n        doc = doc || document;\r\n        var el;\r\n\r\n        // Support: IE 9 only\r\n        // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\r\n        try {\r\n            el = doc.activeElement;\r\n        } catch ( error ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 9 - 11 only\r\n        // IE may return null instead of an element\r\n        // Interestingly, this only seems to occur when NOT in an iframe\r\n        if ( !el ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        // Support: IE 11 only\r\n        // IE11 returns a seemingly empty object in some cases when accessing\r\n        // document.activeElement from an <iframe>\r\n        if ( !el.nodeName ) {\r\n            el = doc.body;\r\n        }\r\n\r\n        return el;\r\n    };\r\n\r\n    function enhancePlaceContent(placing,node) {\r\n        if (langx.isFunction(placing)) {\r\n            return placing.apply(node,[]);\r\n        }\r\n        if (langx.isArrayLike(placing)) {\r\n            var neddsFlattern;\r\n            for (var i=0;i<placing.length;i++) {\r\n                if (langx.isFunction(placing[i])) {\r\n                    placing[i] = placing[i].apply(node,[]);\r\n                    if (langx.isArrayLike(placing[i])) {\r\n                        neddsFlattern = true;\r\n                    }\r\n                }\r\n            }\r\n            if (neddsFlattern) {\r\n                placing = langx.flatten(placing);\r\n            }\r\n        }\r\n        return placing;\r\n    }\r\n    function after(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone),\r\n                refNode = refNode.nextSibling;\r\n\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                if (refNode) {\r\n                    parent.insertBefore(nodes[i], refNode);\r\n                } else {\r\n                    parent.appendChild(nodes[i]);\r\n                }\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function append(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var parentNode = node,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            parentNode.appendChild(nodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function before(node, placing, copyByClone) {\r\n        placing = enhancePlaceContent(placing,node);\r\n        var refNode = node,\r\n            parent = refNode.parentNode;\r\n        if (parent) {\r\n            var nodes = ensureNodes(placing, copyByClone);\r\n            for (var i = 0; i < nodes.length; i++) {\r\n                parent.insertBefore(nodes[i], refNode);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Get the children of the specified node, including text and comment nodes.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contents(elm) {\r\n        if (nodeName(elm, \"iframe\")) {\r\n            return elm.contentDocument;\r\n        }\r\n        return elm.childNodes;\r\n    }\r\n\r\n    /*   \r\n     * Create a element and set attributes on it.\r\n     * @param {HTMLElement} tag\r\n     * @param {props} props\r\n     * @param } parent\r\n     */\r\n    function createElement(tag, props, parent) {\r\n        var node = document.createElement(tag);\r\n        if (props) {\r\n            for (var name in props) {\r\n                node.setAttribute(name, props[name]);\r\n            }\r\n        }\r\n        if (parent) {\r\n            append(parent, node);\r\n        }\r\n        return node;\r\n    }\r\n\r\n    /*   \r\n     * Create a DocumentFragment from the HTML fragment.\r\n     * @param {String} html\r\n     */\r\n    function createFragment(html) {\r\n        // A special case optimization for a single tag\r\n        html = langx.trim(html);\r\n        if (singleTagRE.test(html)) {\r\n            return [createElement(RegExp.$1)];\r\n        }\r\n\r\n        var name = fragmentRE.test(html) && RegExp.$1\r\n        if (!(name in containers)) {\r\n            name = \"*\"\r\n        }\r\n        var container = containers[name];\r\n        container.innerHTML = \"\" + html;\r\n        dom = slice.call(container.childNodes);\r\n\r\n        dom.forEach(function(node) {\r\n            container.removeChild(node);\r\n        })\r\n\r\n        return dom;\r\n    }\r\n\r\n    /*   \r\n     * Create a deep copy of the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {Boolean} deep\r\n     */\r\n    function clone(node, deep) {\r\n        var self = this,\r\n            clone;\r\n\r\n        // TODO: Add feature detection here in the future\r\n        if (!isIE || node.nodeType !== 1 || deep) {\r\n            return node.cloneNode(deep);\r\n        }\r\n\r\n        // Make a HTML5 safe shallow copy\r\n        if (!deep) {\r\n            clone = document.createElement(node.nodeName);\r\n\r\n            // Copy attribs\r\n            each(self.getAttribs(node), function(attr) {\r\n                self.setAttrib(clone, attr.nodeName, self.getAttrib(node, attr.nodeName));\r\n            });\r\n\r\n            return clone;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node .\r\n     * @param {String} node\r\n     * @param {Node} child\r\n     */\r\n    function contains(node, child) {\r\n        return isChildOf(child, node);\r\n    }\r\n\r\n    /*   \r\n     * Create a new Text node.\r\n     * @param {String} text\r\n     * @param {Node} child\r\n     */\r\n    function createTextNode(text) {\r\n        return document.createTextNode(text);\r\n    }\r\n\r\n    /*   \r\n     * Get the current document object.\r\n     */\r\n    function doc() {\r\n        return document;\r\n    }\r\n\r\n    /*   \r\n     * Remove all child nodes of the set of matched elements from the DOM.\r\n     * @param {Object} node\r\n     */\r\n    function empty(node) {\r\n        while (node.hasChildNodes()) {\r\n            var child = node.firstChild;\r\n            node.removeChild(child);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    var fulledEl = null;\r\n\r\n    function fullScreen(el) {\r\n        if (el === false) {\r\n            browser.exitFullScreen.apply(document);\r\n        } else if (el) {\r\n            browser.requestFullScreen.apply(el);\r\n            fulledEl = el;\r\n        } else {\r\n            return (\r\n                document.fullscreenElement ||\r\n                document.webkitFullscreenElement ||\r\n                document.mozFullScreenElement ||\r\n                document.msFullscreenElement\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n    // Selectors\r\n    function focusable( element, hasTabindex ) {\r\n        var map, mapName, img, focusableIfVisible, fieldset,\r\n            nodeName = element.nodeName.toLowerCase();\r\n\r\n        if ( \"area\" === nodeName ) {\r\n            map = element.parentNode;\r\n            mapName = map.name;\r\n            if ( !element.href || !mapName || map.nodeName.toLowerCase() !== \"map\" ) {\r\n                return false;\r\n            }\r\n            img = $( \"img[usemap='#\" + mapName + \"']\" );\r\n            return img.length > 0 && img.is( \":visible\" );\r\n        }\r\n\r\n        if ( /^(input|select|textarea|button|object)$/.test( nodeName ) ) {\r\n            focusableIfVisible = !element.disabled;\r\n\r\n            if ( focusableIfVisible ) {\r\n\r\n                // Form controls within a disabled fieldset are disabled.\r\n                // However, controls within the fieldset's legend do not get disabled.\r\n                // Since controls generally aren't placed inside legends, we skip\r\n                // this portion of the check.\r\n                fieldset = $( element ).closest( \"fieldset\" )[ 0 ];\r\n                if ( fieldset ) {\r\n                    focusableIfVisible = !fieldset.disabled;\r\n                }\r\n            }\r\n        } else if ( \"a\" === nodeName ) {\r\n            focusableIfVisible = element.href || hasTabindex;\r\n        } else {\r\n            focusableIfVisible = hasTabindex;\r\n        }\r\n\r\n        return focusableIfVisible && $( element ).is( \":visible\" ) && visible( $( element ) );\r\n    };\r\n\r\n\r\n   var rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi;\r\n \r\n    /*   \r\n     * Get the HTML contents of the first element in the set of matched elements.\r\n     * @param {HTMLElement} node\r\n     * @param {String} html\r\n     */\r\n    function html(node, html) {\r\n        if (html === undefined) {\r\n            return node.innerHTML;\r\n        } else {\r\n            this.empty(node);\r\n            html = html || \"\";\r\n            if (langx.isString(html)) {\r\n                html = html.replace( rxhtmlTag, \"<$1></$2>\" );\r\n            }\r\n            if (langx.isString(html) || langx.isNumber(html)) {               \r\n                node.innerHTML = html;\r\n            } else if (langx.isArrayLike(html)) {\r\n                for (var i = 0; i < html.length; i++) {\r\n                    node.appendChild(html[i]);\r\n                }\r\n            } else {\r\n                node.appendChild(html);\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n\r\n\r\n    /*   \r\n     * Check to see if a dom node is a descendant of another dom node.\r\n     * @param {Node} node\r\n     * @param {Node} parent\r\n     * @param {Node} directly\r\n     */\r\n    function isChildOf(node, parent, directly) {\r\n        if (directly) {\r\n            return node.parentNode === parent;\r\n        }\r\n        if (document.documentElement.contains) {\r\n            return parent.contains(node);\r\n        }\r\n        while (node) {\r\n            if (parent === node) {\r\n                return true;\r\n            }\r\n\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is a document.\r\n     * @param {Node} node\r\n     */\r\n    function isDocument(node) {\r\n        return node != null && node.nodeType == node.DOCUMENT_NODE\r\n    }\r\n\r\n    /*   \r\n     * Check to see if a dom node is in the document\r\n     * @param {Node} node\r\n     */\r\n    function isInDocument(node) {\r\n      return (node === document.body) ? true : document.body.contains(node);\r\n    }        \r\n\r\n    var blockNodes = [\"div\", \"p\", \"ul\", \"ol\", \"li\", \"blockquote\", \"hr\", \"pre\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"table\"];\r\n\r\n    function isBlockNode(node) {\r\n        if (!node || node.nodeType === 3) {\r\n          return false;\r\n        }\r\n        return new RegExp(\"^(\" + (blockNodes.join('|')) + \")$\").test(node.nodeName.toLowerCase());\r\n    }\r\n\r\n\r\n    /*   \r\n     * Get the owner document object for the specified element.\r\n     * @param {Node} elm\r\n     */\r\n    function ownerDoc(elm) {\r\n        if (!elm) {\r\n            return document;\r\n        }\r\n\r\n        if (elm.nodeType == 9) {\r\n            return elm;\r\n        }\r\n\r\n        return elm.ownerDocument;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function ownerWindow(elm) {\r\n        var doc = ownerDoc(elm);\r\n        return doc.defaultView || doc.parentWindow;\r\n    }\r\n\r\n    /*   \r\n     * insert one or more nodes as the first children of the specified node.\r\n     * @param {Node} node\r\n     * @param {Node or ArrayLike} placing\r\n     * @param {Boolean Optional} copyByClone\r\n     */\r\n    function prepend(node, placing, copyByClone) {\r\n        var parentNode = node,\r\n            refNode = parentNode.firstChild,\r\n            nodes = ensureNodes(placing, copyByClone);\r\n        for (var i = 0; i < nodes.length; i++) {\r\n            if (refNode) {\r\n                parentNode.insertBefore(nodes[i], refNode);\r\n            } else {\r\n                parentNode.appendChild(nodes[i]);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     */\r\n    function offsetParent(elm) {\r\n        var parent = elm.offsetParent || document.body;\r\n        while (parent && !rootNodeRE.test(parent.nodeName) && styler.css(parent, \"position\") == \"static\") {\r\n            parent = parent.offsetParent;\r\n        }\r\n        return parent;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} elm\r\n     * @param {Node} params\r\n     */\r\n    function overlay(elm, params) {\r\n        var overlayDiv = createElement(\"div\", params);\r\n        styler.css(overlayDiv, {\r\n            position: \"absolute\",\r\n            top: 0,\r\n            left: 0,\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            zIndex: 0x7FFFFFFF,\r\n            opacity: 0.7\r\n        });\r\n        elm.appendChild(overlayDiv);\r\n        return overlayDiv;\r\n\r\n    }\r\n\r\n    /*   \r\n     * Remove the set of matched elements from the DOM.\r\n     * @param {Node} node\r\n     */\r\n    function remove(node) {\r\n        if (node && node.parentNode) {\r\n            try {\r\n                node.parentNode.removeChild(node);\r\n            } catch (e) {\r\n                console.warn(\"The node is already removed\", e);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function removeChild(node,children) {\r\n        if (!langx.isArrayLike(children)) {\r\n            children = [children];\r\n        }\r\n        for (var i=0;i<children.length;i++) {\r\n            node.removeChild(children[i]);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    function scrollParent( elm, includeHidden ) {\r\n        var position = styler.css(elm,\"position\" ),\r\n            excludeStaticParent = position === \"absolute\",\r\n            overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n            scrollParent = this.parents().filter( function() {\r\n                var parent = $( this );\r\n                if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                    return false;\r\n                }\r\n                return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                    parent.css( \"overflow-x\" ) );\r\n            } ).eq( 0 );\r\n\r\n        return position === \"fixed\" || !scrollParent.length ?\r\n            $( this[ 0 ].ownerDocument || document ) :\r\n            scrollParent;\r\n    };\r\n\r\n\r\n    function reflow(elm) {\r\n        if (el == null) {\r\n          elm = document;\r\n        }\r\n        elm.offsetHeight;\r\n\r\n        return this;      \r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {Node} node\r\n     * @param {Node} oldNode\r\n     */\r\n    function replace(node, oldNode) {\r\n        oldNode.parentNode.replaceChild(node, oldNode);\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Replace an old node with the specified node.\r\n     * @param {HTMLElement} elm\r\n     * @param {Node} params\r\n     */\r\n    function throb(elm, params) {\r\n        params = params || {};\r\n        var self = this,\r\n            text = params.text,\r\n            style = params.style,\r\n            time = params.time,\r\n            callback = params.callback,\r\n            timer,\r\n\r\n            throbber = this.createElement(\"div\", {\r\n                \"class\": params.className || \"throbber\"\r\n            }),\r\n            _overlay = overlay(throbber, {\r\n                \"class\": 'overlay fade'\r\n            }),\r\n            throb = this.createElement(\"div\", {\r\n                \"class\": \"throb\"\r\n            }),\r\n            textNode = this.createTextNode(text || \"\"),\r\n            remove = function() {\r\n                if (timer) {\r\n                    clearTimeout(timer);\r\n                    timer = null;\r\n                }\r\n                if (throbber) {\r\n                    self.remove(throbber);\r\n                    throbber = null;\r\n                }\r\n            },\r\n            update = function(params) {\r\n                if (params && params.text && throbber) {\r\n                    textNode.nodeValue = params.text;\r\n                }\r\n            };\r\n        if (params.style) {\r\n            styler.css(throbber,params.style);\r\n        }\r\n        throb.appendChild(textNode);\r\n        throbber.appendChild(throb);\r\n        elm.appendChild(throbber);\r\n        var end = function() {\r\n            remove();\r\n            if (callback) callback();\r\n        };\r\n        if (time) {\r\n            timer = setTimeout(end, time);\r\n        }\r\n\r\n        return {\r\n            remove: remove,\r\n            update: update\r\n        };\r\n    }\r\n\r\n\r\n    /*   \r\n     * traverse the specified node and its descendants, perform the callback function on each\r\n     * @param {Node} node\r\n     * @param {Function} fn\r\n     */\r\n    function traverse(node, fn) {\r\n        fn(node)\r\n        for (var i = 0, len = node.childNodes.length; i < len; i++) {\r\n            traverse(node.childNodes[i], fn);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     *\r\n     * @param {Node} node\r\n     */\r\n    function reverse(node) {\r\n        var firstChild = node.firstChild;\r\n        for (var i = node.children.length - 1; i > 0; i--) {\r\n            if (i > 0) {\r\n                var child = node.children[i];\r\n                node.insertBefore(child, firstChild);\r\n            }\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around each element in the set of matched elements.\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapper(node, wrapperNode) {\r\n        if (langx.isString(wrapperNode)) {\r\n            wrapperNode = this.createFragment(wrapperNode).firstChild;\r\n        }\r\n        node.parentNode.insertBefore(wrapperNode, node);\r\n        wrapperNode.appendChild(node);\r\n    }\r\n\r\n    /*   \r\n     * Wrap an HTML structure around the content of each element in the set of matched\r\n     * @param {Node} node\r\n     * @param {Node} wrapperNode\r\n     */\r\n    function wrapperInner(node, wrapperNode) {\r\n        var childNodes = slice.call(node.childNodes);\r\n        node.appendChild(wrapperNode);\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            wrapperNode.appendChild(childNodes[i]);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Remove the parents of the set of matched elements from the DOM, leaving the matched\r\n     * @param {Node} node\r\n     */\r\n    function unwrap(node) {\r\n        var child, parent = node.parentNode;\r\n        if (parent) {\r\n            if (this.isDoc(parent.parentNode)) return;\r\n            parent.parentNode.insertBefore(node, parent);\r\n        }\r\n    }\r\n\r\n    function noder() {\r\n        return noder;\r\n    }\r\n\r\n    langx.mixin(noder, {\r\n        active  : activeElement,\r\n\r\n        blur : function(el) {\r\n            el.blur();\r\n        },\r\n\r\n        body: function() {\r\n            return document.body;\r\n        },\r\n\r\n        clone: clone,\r\n        contents: contents,\r\n\r\n        createElement: createElement,\r\n\r\n        createFragment: createFragment,\r\n\r\n        contains: contains,\r\n\r\n        createTextNode: createTextNode,\r\n\r\n        doc: doc,\r\n\r\n        empty: empty,\r\n\r\n        fullScreen: fullScreen,\r\n\r\n        focusable: focusable,\r\n\r\n        html: html,\r\n\r\n        isChildOf: isChildOf,\r\n\r\n        isDocument: isDocument,\r\n\r\n        isInDocument: isInDocument,\r\n\r\n        isWindow: langx.isWindow,\r\n\r\n        nodeName : nodeName,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        ownerDoc: ownerDoc,\r\n\r\n        ownerWindow: ownerWindow,\r\n\r\n        after: after,\r\n\r\n        before: before,\r\n\r\n        prepend: prepend,\r\n\r\n        append: append,\r\n\r\n        reflow: reflow,\r\n\r\n        remove: remove,\r\n\r\n        removeChild : removeChild,\r\n\r\n        replace: replace,\r\n\r\n        throb: throb,\r\n\r\n        traverse: traverse,\r\n\r\n        reverse: reverse,\r\n\r\n        wrapper: wrapper,\r\n\r\n        wrapperInner: wrapperInner,\r\n\r\n        unwrap: unwrap\r\n    });\r\n\r\n    return skylark.attach(\"domx.noder\" , noder);\r\n});\ndefine('skylark-domx-noder/main',[\r\n\t\"./noder\"\r\n],function(noder){\r\n\treturn noder;\r\n});\ndefine('skylark-domx-noder', ['skylark-domx-noder/main'], function (main) { return main; });\n\ndefine('skylark-domx-finder/finder',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, browser, noder, velm) {\r\n    var local = {},\r\n        filter = Array.prototype.filter,\r\n        slice = Array.prototype.slice,\r\n        nativeMatchesSelector = browser.matchesSelector;\r\n\r\n    /*\r\n    ---\r\n    name: Slick.Parser\r\n    description: Standalone CSS3 Selector parser\r\n    provides: Slick.Parser\r\n    ...\r\n    */\r\n    ;\r\n    (function() {\r\n\r\n        var parsed,\r\n            separatorIndex,\r\n            combinatorIndex,\r\n            reversed,\r\n            cache = {},\r\n            reverseCache = {},\r\n            reUnescape = /\\\\/g;\r\n\r\n        var parse = function(expression, isReversed) {\r\n            if (expression == null) return null;\r\n            if (expression.Slick === true) return expression;\r\n            expression = ('' + expression).replace(/^\\s+|\\s+$/g, '');\r\n            reversed = !!isReversed;\r\n            var currentCache = (reversed) ? reverseCache : cache;\r\n            if (currentCache[expression]) return currentCache[expression];\r\n            parsed = {\r\n                Slick: true,\r\n                expressions: [],\r\n                raw: expression,\r\n                reverse: function() {\r\n                    return parse(this.raw, true);\r\n                }\r\n            };\r\n            separatorIndex = -1;\r\n            while (expression != (expression = expression.replace(regexp, parser)));\r\n            parsed.length = parsed.expressions.length;\r\n            return currentCache[parsed.raw] = (reversed) ? reverse(parsed) : parsed;\r\n        };\r\n\r\n        var reverseCombinator = function(combinator) {\r\n            if (combinator === '!') return ' ';\r\n            else if (combinator === ' ') return '!';\r\n            else if ((/^!/).test(combinator)) return combinator.replace(/^!/, '');\r\n            else return '!' + combinator;\r\n        };\r\n\r\n        var reverse = function(expression) {\r\n            var expressions = expression.expressions;\r\n            for (var i = 0; i < expressions.length; i++) {\r\n                var exp = expressions[i];\r\n                var last = {\r\n                    parts: [],\r\n                    tag: '*',\r\n                    combinator: reverseCombinator(exp[0].combinator)\r\n                };\r\n\r\n                for (var j = 0; j < exp.length; j++) {\r\n                    var cexp = exp[j];\r\n                    if (!cexp.reverseCombinator) cexp.reverseCombinator = ' ';\r\n                    cexp.combinator = cexp.reverseCombinator;\r\n                    delete cexp.reverseCombinator;\r\n                }\r\n\r\n                exp.reverse().push(last);\r\n            }\r\n            return expression;\r\n        };\r\n\r\n        var escapeRegExp = (function() {\r\n            // Credit: XRegExp 0.6.1 (c) 2007-2008 Steven Levithan <http://stevenlevithan.com/regex/xregexp/> MIT License\r\n            var from = /(?=[\\-\\[\\]{}()*+?.\\\\\\^$|,#\\s])/g,\r\n                to = '\\\\';\r\n            return function(string) {\r\n                return string.replace(from, to)\r\n            }\r\n        }())\r\n\r\n        var regexp = new RegExp(\r\n            \"^(?:\\\\s*(,)\\\\s*|\\\\s*(<combinator>+)\\\\s*|(\\\\s+)|(<unicode>+|\\\\*)|\\\\#(<unicode>+)|\\\\.(<unicode>+)|\\\\[\\\\s*(<unicode1>+)(?:\\\\s*([*^$!~|]?=)(?:\\\\s*(?:([\\\"']?)(.*?)\\\\9)))?\\\\s*\\\\](?!\\\\])|(:+)(<unicode>+)(?:\\\\((?:(?:([\\\"'])([^\\\\13]*)\\\\13)|((?:\\\\([^)]+\\\\)|[^()]*)+))\\\\))?)\"\r\n            .replace(/<combinator>/, '[' + escapeRegExp(\">+~`!@$%^&={}\\\\;</\") + ']')\r\n            .replace(/<unicode>/g, '(?:[\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n            .replace(/<unicode1>/g, '(?:[:\\\\w\\\\u00a1-\\\\uFFFF-]|\\\\\\\\[^\\\\s0-9a-f])')\r\n        );\r\n\r\n        function parser(\r\n            rawMatch,\r\n\r\n            separator,\r\n            combinator,\r\n            combinatorChildren,\r\n\r\n            tagName,\r\n            id,\r\n            className,\r\n\r\n            attributeKey,\r\n            attributeOperator,\r\n            attributeQuote,\r\n            attributeValue,\r\n\r\n            pseudoMarker,\r\n            pseudoClass,\r\n            pseudoQuote,\r\n            pseudoClassQuotedValue,\r\n            pseudoClassValue\r\n        ) {\r\n            if (separator || separatorIndex === -1) {\r\n                parsed.expressions[++separatorIndex] = [];\r\n                combinatorIndex = -1;\r\n                if (separator) return '';\r\n            }\r\n\r\n            if (combinator || combinatorChildren || combinatorIndex === -1) {\r\n                combinator = combinator || ' ';\r\n                var currentSeparator = parsed.expressions[separatorIndex];\r\n                if (reversed && currentSeparator[combinatorIndex])\r\n                    currentSeparator[combinatorIndex].reverseCombinator = reverseCombinator(combinator);\r\n                currentSeparator[++combinatorIndex] = {\r\n                    combinator: combinator,\r\n                    tag: '*'\r\n                };\r\n            }\r\n\r\n            var currentParsed = parsed.expressions[separatorIndex][combinatorIndex];\r\n\r\n            if (tagName) {\r\n                currentParsed.tag = tagName.replace(reUnescape, '');\r\n\r\n            } else if (id) {\r\n                currentParsed.id = id.replace(reUnescape, '');\r\n\r\n            } else if (className) {\r\n                className = className.replace(reUnescape, '');\r\n\r\n                if (!currentParsed.classList) currentParsed.classList = [];\r\n                if (!currentParsed.classes) currentParsed.classes = [];\r\n                currentParsed.classList.push(className);\r\n                currentParsed.classes.push({\r\n                    value: className,\r\n                    regexp: new RegExp('(^|\\\\s)' + escapeRegExp(className) + '(\\\\s|$)')\r\n                });\r\n\r\n            } else if (pseudoClass) {\r\n                pseudoClassValue = pseudoClassValue || pseudoClassQuotedValue;\r\n                pseudoClassValue = pseudoClassValue ? pseudoClassValue.replace(reUnescape, '') : null;\r\n\r\n                if (!currentParsed.pseudos) currentParsed.pseudos = [];\r\n                currentParsed.pseudos.push({\r\n                    key: pseudoClass.replace(reUnescape, ''),\r\n                    value: pseudoClassValue,\r\n                    type: pseudoMarker.length == 1 ? 'class' : 'element'\r\n                });\r\n\r\n            } else if (attributeKey) {\r\n                attributeKey = attributeKey.replace(reUnescape, '');\r\n                attributeValue = (attributeValue || '').replace(reUnescape, '');\r\n\r\n                var test, regexp;\r\n\r\n                switch (attributeOperator) {\r\n                    case '^=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue));\r\n                        break;\r\n                    case '$=':\r\n                        regexp = new RegExp(escapeRegExp(attributeValue) + '$');\r\n                        break;\r\n                    case '~=':\r\n                        regexp = new RegExp('(^|\\\\s)' + escapeRegExp(attributeValue) + '(\\\\s|$)');\r\n                        break;\r\n                    case '|=':\r\n                        regexp = new RegExp('^' + escapeRegExp(attributeValue) + '(-|$)');\r\n                        break;\r\n                    case '=':\r\n                        test = function(value) {\r\n                            return attributeValue == value;\r\n                        };\r\n                        break;\r\n                    case '*=':\r\n                        test = function(value) {\r\n                            return value && value.indexOf(attributeValue) > -1;\r\n                        };\r\n                        break;\r\n                    case '!=':\r\n                        test = function(value) {\r\n                            return attributeValue != value;\r\n                        };\r\n                        break;\r\n                    default:\r\n                        test = function(value) {\r\n                            return !!value;\r\n                        };\r\n                }\r\n\r\n                if (attributeValue == '' && (/^[*$^]=$/).test(attributeOperator)) test = function() {\r\n                    return false;\r\n                };\r\n\r\n                if (!test) test = function(value) {\r\n                    return value && regexp.test(value);\r\n                };\r\n\r\n                if (!currentParsed.attributes) currentParsed.attributes = [];\r\n                currentParsed.attributes.push({\r\n                    key: attributeKey,\r\n                    operator: attributeOperator,\r\n                    value: attributeValue,\r\n                    test: test\r\n                });\r\n\r\n            }\r\n\r\n            return '';\r\n        };\r\n\r\n        // Slick NS\r\n\r\n        var Slick = (this.Slick || {});\r\n\r\n        Slick.parse = function(expression) {\r\n            return parse(expression);\r\n        };\r\n\r\n        Slick.escapeRegExp = escapeRegExp;\r\n\r\n        if (!this.Slick) this.Slick = Slick;\r\n\r\n    }).apply(local);\r\n\r\n\r\n    var simpleClassSelectorRE = /^\\.([\\w-]*)$/,\r\n        simpleIdSelectorRE = /^#([\\w-]*)$/,\r\n        rinputs = /^(?:input|select|textarea|button)$/i,\r\n        rheader = /^h\\d$/i,\r\n        slice = Array.prototype.slice;\r\n\r\n\r\n    local.parseSelector = local.Slick.parse;\r\n\r\n\r\n    var pseudos = local.pseudos = {\r\n        // custom pseudos\r\n        \"button\": function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === \"button\" || name === \"button\";\r\n        },\r\n\r\n        'checked': function(elm) {\r\n            return !!elm.checked;\r\n        },\r\n\r\n        'contains': function(elm, idx, nodes, text) {\r\n            if ($(this).text().indexOf(text) > -1) return this\r\n        },\r\n\r\n        'disabled': function(elm) {\r\n            return !!elm.disabled;\r\n        },\r\n\r\n        'enabled': function(elm) {\r\n            return !elm.disabled;\r\n        },\r\n\r\n        'eq': function(elm, idx, nodes, value) {\r\n            return (idx == value);\r\n        },\r\n\r\n        'even': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 0;\r\n        },\r\n\r\n        'focus': function(elm) {\r\n            return document.activeElement === elm && (elm.href || elm.type || elm.tabindex);\r\n        },\r\n\r\n        'focusable': function( elm ) {\r\n            return noder.focusable(elm, elm.tabindex != null );\r\n        },\r\n\r\n        'first': function(elm, idx) {\r\n            return (idx === 0);\r\n        },\r\n\r\n        'gt': function(elm, idx, nodes, value) {\r\n            return (idx > value);\r\n        },\r\n\r\n        'has': function(elm, idx, nodes, sel) {\r\n            return find(elm, sel);\r\n        },\r\n\r\n        // Element/input types\r\n        \"header\": function(elem) {\r\n            return rheader.test(elem.nodeName);\r\n        },\r\n\r\n        'hidden': function(elm) {\r\n            return !local.pseudos[\"visible\"](elm);\r\n        },\r\n\r\n        \"input\": function(elem) {\r\n            return rinputs.test(elem.nodeName);\r\n        },\r\n\r\n        'last': function(elm, idx, nodes) {\r\n            return (idx === nodes.length - 1);\r\n        },\r\n\r\n        'lt': function(elm, idx, nodes, value) {\r\n            return (idx < value);\r\n        },\r\n\r\n        'not': function(elm, idx, nodes, sel) {\r\n            return !matches(elm, sel);\r\n        },\r\n\r\n        'odd': function(elm, idx, nodes, value) {\r\n            return (idx % 2) === 1;\r\n        },\r\n\r\n        /*   \r\n         * Get the parent of each element in the current set of matched elements.\r\n         * @param {Object} elm\r\n         */\r\n        'parent': function(elm) {\r\n            return !!elm.parentNode;\r\n        },\r\n\r\n        'selected': function(elm) {\r\n            return !!elm.selected;\r\n        },\r\n\r\n        'tabbable': function(elm) {\r\n            var tabIndex = elm.tabindex,\r\n                hasTabindex = tabIndex != null;\r\n            return ( !hasTabindex || tabIndex >= 0 ) && noder.focusable( element, hasTabindex );\r\n        },\r\n\r\n        'text': function(elm) {\r\n            return elm.type === \"text\";\r\n        },\r\n\r\n        'visible': function(elm) {\r\n            return elm.offsetWidth && elm.offsetWidth\r\n        }\r\n    };\r\n\r\n    [\"first\", \"eq\", \"last\"].forEach(function(item) {\r\n        pseudos[item].isArrayFilter = true;\r\n    });\r\n\r\n\r\n\r\n    pseudos[\"nth\"] = pseudos[\"eq\"];\r\n\r\n    function createInputPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return name === \"input\" && elem.type === type;\r\n        };\r\n    }\r\n\r\n    function createButtonPseudo(type) {\r\n        return function(elem) {\r\n            var name = elem.nodeName.toLowerCase();\r\n            return (name === \"input\" || name === \"button\") && elem.type === type;\r\n        };\r\n    }\r\n\r\n    // Add button/input type pseudos\r\n    for (i in {\r\n        radio: true,\r\n        checkbox: true,\r\n        file: true,\r\n        password: true,\r\n        image: true\r\n    }) {\r\n        pseudos[i] = createInputPseudo(i);\r\n    }\r\n    for (i in {\r\n        submit: true,\r\n        reset: true\r\n    }) {\r\n        pseudos[i] = createButtonPseudo(i);\r\n    }\r\n\r\n\r\n    local.divide = function(cond) {\r\n        var nativeSelector = \"\",\r\n            customPseudos = [],\r\n            tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos;\r\n\r\n\r\n        if (id = cond.id) {\r\n            nativeSelector += (\"#\" + id);\r\n        }\r\n        if (classes = cond.classes) {\r\n            for (var i = classes.length; i--;) {\r\n                nativeSelector += (\".\" + classes[i].value);\r\n            }\r\n        }\r\n        if (attributes = cond.attributes) {\r\n            for (var i = 0; i < attributes.length; i++) {\r\n                if (attributes[i].operator) {\r\n                    nativeSelector += (\"[\" + attributes[i].key + attributes[i].operator + JSON.stringify(attributes[i].value) + \"]\");\r\n                } else {\r\n                    nativeSelector += (\"[\" + attributes[i].key + \"]\");\r\n                }\r\n            }\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (this.pseudos[part.key]) {\r\n                    customPseudos.push(part);\r\n                } else {\r\n                    if (part.value !== undefined) {\r\n                        nativeSelector += (\":\" + part.key + \"(\" + JSON.stringify(part))\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (tag = cond.tag) {\r\n            if (tag !== \"*\") {\r\n                nativeSelector = tag.toUpperCase() + nativeSelector;\r\n            }\r\n        }\r\n\r\n        if (!nativeSelector) {\r\n            nativeSelector = \"*\";\r\n        }\r\n\r\n        return {\r\n            nativeSelector: nativeSelector,\r\n            customPseudos: customPseudos\r\n        }\r\n\r\n    };\r\n\r\n    local.check = function(node, cond, idx, nodes, arrayFilte) {\r\n        var tag,\r\n            id,\r\n            classes,\r\n            attributes,\r\n            pseudos,\r\n\r\n            i, part, cls, pseudo;\r\n\r\n        if (!arrayFilte) {\r\n            if (tag = cond.tag) {\r\n                var nodeName = node.nodeName.toUpperCase();\r\n                if (tag == '*') {\r\n                    if (nodeName < '@') return false; // Fix for comment nodes and closed nodes\r\n                } else {\r\n                    if (nodeName != (tag || \"\").toUpperCase()) return false;\r\n                }\r\n            }\r\n\r\n            if (id = cond.id) {\r\n                if (node.getAttribute('id') != id) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n\r\n            if (classes = cond.classes) {\r\n                for (i = classes.length; i--;) {\r\n                    cls = node.getAttribute('class');\r\n                    if (!(cls && classes[i].regexp.test(cls))) return false;\r\n                }\r\n            }\r\n\r\n            if (attributes = cond.attributes) {\r\n                for (i = attributes.length; i--;) {\r\n                    part = attributes[i];\r\n                    if (part.operator ? !part.test(node.getAttribute(part.key)) : !node.hasAttribute(part.key)) return false;\r\n                }\r\n            }\r\n\r\n        }\r\n        if (pseudos = cond.pseudos) {\r\n            for (i = pseudos.length; i--;) {\r\n                part = pseudos[i];\r\n                if (pseudo = this.pseudos[part.key]) {\r\n                    if ((arrayFilte && pseudo.isArrayFilter) || (!arrayFilte && !pseudo.isArrayFilter)) {\r\n                        if (!pseudo(node, idx, nodes, part.value)) {\r\n                            return false;\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (!arrayFilte && !nativeMatchesSelector.call(node, part.key)) {\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    local.match = function(node, selector) {\r\n\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            parsed = selector;\r\n        }\r\n\r\n        if (!parsed) {\r\n            return true;\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            simpleExpCounter = 0,\r\n            i,\r\n            currentExpression;\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n                if (this.check(node, exp)) {\r\n                    return true;\r\n                }\r\n                simpleExpCounter++;\r\n            }\r\n        }\r\n\r\n        if (simpleExpCounter == parsed.length) {\r\n            return false;\r\n        }\r\n\r\n        var nodes = this.query(document, parsed),\r\n            item;\r\n        for (i = 0; item = nodes[i++];) {\r\n            if (item === node) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n\r\n\r\n    local.filterSingle = function(nodes, exp) {\r\n        var matchs = filter.call(nodes, function(node, idx) {\r\n            return local.check(node, exp, idx, nodes, false);\r\n        });\r\n\r\n        matchs = filter.call(matchs, function(node, idx) {\r\n            return local.check(node, exp, idx, matchs, true);\r\n        });\r\n        return matchs;\r\n    };\r\n\r\n    local.filter = function(nodes, selector) {\r\n        var parsed;\r\n\r\n        if (langx.isString(selector)) {\r\n            parsed = local.Slick.parse(selector);\r\n        } else {\r\n            return local.filterSingle(nodes, selector);\r\n        }\r\n\r\n        // simple (single) selectors\r\n        var expressions = parsed.expressions,\r\n            i,\r\n            currentExpression,\r\n            ret = [];\r\n        for (i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            if (currentExpression.length == 1) {\r\n                var exp = currentExpression[0];\r\n\r\n                var matchs = local.filterSingle(nodes, exp);\r\n\r\n                ret = langx.uniq(ret.concat(matchs));\r\n            } else {\r\n                throw new Error(\"not supported selector:\" + selector);\r\n            }\r\n        }\r\n\r\n        return ret;\r\n\r\n    };\r\n\r\n    local.combine = function(elm, bit) {\r\n        var op = bit.combinator,\r\n            cond = bit,\r\n            node1,\r\n            nodes = [];\r\n\r\n        switch (op) {\r\n            case '>': // direct children\r\n                nodes = children(elm, cond);\r\n                break;\r\n            case '+': // next sibling\r\n                node1 = nextSibling(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '^': // first child\r\n                node1 = firstChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '~': // next siblings\r\n                nodes = nextSiblings(elm, cond);\r\n                break;\r\n            case '++': // next sibling and previous sibling\r\n                var prev = previousSibling(elm, cond, true),\r\n                    next = nextSibling(elm, cond, true);\r\n                if (prev) {\r\n                    nodes.push(prev);\r\n                }\r\n                if (next) {\r\n                    nodes.push(next);\r\n                }\r\n                break;\r\n            case '~~': // next siblings and previous siblings\r\n                nodes = siblings(elm, cond);\r\n                break;\r\n            case '!': // all parent nodes up to document\r\n                nodes = ancestors(elm, cond);\r\n                break;\r\n            case '!>': // direct parent (one level)\r\n                node1 = parent(elm, cond);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!+': // previous sibling\r\n                nodes = previousSibling(elm, cond, true);\r\n                break;\r\n            case '!^': // last child\r\n                node1 = lastChild(elm, cond, true);\r\n                if (node1) {\r\n                    nodes.push(node1);\r\n                }\r\n                break;\r\n            case '!~': // previous siblings\r\n                nodes = previousSiblings(elm, cond);\r\n                break;\r\n            default:\r\n                var divided = this.divide(bit);\r\n                nodes = slice.call(elm.querySelectorAll(divided.nativeSelector));\r\n                if (divided.customPseudos) {\r\n                    for (var i = divided.customPseudos.length - 1; i >= 0; i--) {\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, false)\r\n                        });\r\n\r\n                        nodes = filter.call(nodes, function(item, idx) {\r\n                            return local.check(item, {\r\n                                pseudos: [divided.customPseudos[i]]\r\n                            }, idx, nodes, true)\r\n                        });\r\n                    }\r\n                }\r\n                break;\r\n\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    local.query = function(node, selector, single) {\r\n\r\n\r\n        var parsed = this.Slick.parse(selector);\r\n\r\n        var\r\n            founds = [],\r\n            currentExpression, currentBit,\r\n            expressions = parsed.expressions;\r\n\r\n        for (var i = 0;\r\n            (currentExpression = expressions[i]); i++) {\r\n            var currentItems = [node],\r\n                found;\r\n            for (var j = 0;\r\n                (currentBit = currentExpression[j]); j++) {\r\n                found = langx.map(currentItems, function(item, i) {\r\n                    return local.combine(item, currentBit)\r\n                });\r\n                if (found) {\r\n                    currentItems = found;\r\n                }\r\n            }\r\n            if (found) {\r\n                founds = founds.concat(found);\r\n            }\r\n        }\r\n\r\n        return founds;\r\n    }\r\n\r\n    /*\r\n     * Get the nearest ancestor of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestor(node, selector, root) {\r\n        var rootIsSelector = root && langx.isString(root);\r\n        while (node = node.parentNode) {\r\n            if (matches(node, selector)) {\r\n                return node;\r\n            }\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the ancestors of the specitied element , optionally filtered by a selector.\r\n     * @param {HTMLElement} node\r\n     * @param {String Optional } selector\r\n     * @param {Object} root\r\n     */\r\n    function ancestors(node, selector, root) {\r\n        var ret = [],\r\n            rootIsSelector = root && langx.isString(root);\r\n        while ((node = node.parentNode) && (node.nodeType !== 9)) {\r\n            if (root) {\r\n                if (rootIsSelector) {\r\n                    if (matches(node, root)) {\r\n                        break;\r\n                    }\r\n                } else if (langx.isArrayLike(root)) {\r\n                    if (langx.inArray(node,root)>-1) {\r\n                        break;\r\n                    }\r\n                } else if (node == root) {\r\n                    break;\r\n                }\r\n            }\r\n            ret.push(node); // TODO\r\n        }\r\n\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Returns a element by its ID.\r\n     * @param {string} id\r\n     */\r\n    function byId(id, doc) {\r\n        doc = doc || noder.doc();\r\n        return doc.getElementById(id);\r\n    }\r\n\r\n    /*\r\n     * Get the children of the specified element , optionally filtered by a selector.\r\n     * @param {string} node\r\n     * @param {String optionlly} selector\r\n     */\r\n    function children(node, selector) {\r\n        var childNodes = node.childNodes,\r\n            ret = [];\r\n        for (var i = 0; i < childNodes.length; i++) {\r\n            var node = childNodes[i];\r\n            if (node.nodeType == 1) {\r\n                ret.push(node);\r\n            }\r\n        }\r\n        if (selector) {\r\n            ret = local.filter(ret, selector);\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    function closest(node, selector) {\r\n        while (node && !(matches(node, selector))) {\r\n            node = node.parentNode;\r\n        }\r\n\r\n        return node;\r\n    }\r\n\r\n    /*\r\n     * Get the decendant of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendants(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return slice.call(elm.querySelectorAll(selector));\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        return local.query(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the nearest decendent of the specified element,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function descendant(elm, selector) {\r\n        // Selector\r\n        try {\r\n            return elm.querySelector(selector);\r\n        } catch (matchError) {\r\n            //console.log(matchError);\r\n        }\r\n        var nodes = local.query(elm, selector);\r\n        if (nodes.length > 0) {\r\n            return nodes[0];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function find(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        if (matches(elm, selector)) {\r\n            return elm;\r\n        } else {\r\n            return descendant(elm, selector);\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the findAll of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function findAll(elm, selector) {\r\n        if (!selector) {\r\n            selector = elm;\r\n            elm = document.body;\r\n        }\r\n        return descendants(elm, selector);\r\n    }\r\n\r\n    /*\r\n     * Get the first child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String} first\r\n     */\r\n    function firstChild(elm, selector, first) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[0];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (first) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the last child of the specified element , optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {String } last\r\n     */\r\n    function lastChild(elm, selector, last) {\r\n        var childNodes = elm.childNodes,\r\n            node = childNodes[childNodes.length - 1];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (last) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Check the specified element against a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function matches(elm, selector) {\r\n        if (!selector || !elm || elm.nodeType !== 1) {\r\n            return false\r\n        }\r\n\r\n        if (langx.isString(selector)) {\r\n            try {\r\n                return nativeMatchesSelector.call(elm, selector.replace(/\\[([^=]+)=\\s*([^'\"\\]]+?)\\s*\\]/g, '[$1=\"$2\"]'));\r\n            } catch (matchError) {\r\n                //console.log(matchError);\r\n            }\r\n            return local.match(elm, selector);\r\n        } else if (langx.isArrayLike(selector)) {\r\n            return langx.inArray(elm, selector) > -1;\r\n        } else if (langx.isPlainObject(selector)) {\r\n            return local.check(elm, selector);\r\n        } else {\r\n            return elm === selector;\r\n        }\r\n\r\n    }\r\n\r\n    /*\r\n     * Get the nearest next sibing of the specitied element , optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional} adjacent\r\n     */\r\n    function nextSibling(elm, selector, adjacent) {\r\n        var node = elm.nextSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get the next siblings of the specified element , optional filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function nextSiblings(elm, selector) {\r\n        var node = elm.nextSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Get the parent element of the specified element. if a selector is provided, it retrieves the parent element only if it matches that selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function parent(elm, selector) {\r\n        var node = elm.parentNode;\r\n        if (node && (!selector || matches(node, selector))) {\r\n            return node;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get hte nearest previous sibling of the specified element ,optional matched by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     * @param {Boolean Optional } adjacent\r\n     */\r\n    function previousSibling(elm, selector, adjacent) {\r\n        var node = elm.previousSibling;\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    return node;\r\n                }\r\n                if (adjacent) {\r\n                    break;\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /*\r\n     * Get all preceding siblings of each element in the set of matched elements, optionally filtered by a selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function previousSiblings(elm, selector) {\r\n        var node = elm.previousSibling,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.previousSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    /*\r\n     * Selects all sibling elements that follow after the “prev” element, have the same parent, and match the filtering “siblings” selector.\r\n     * @param {HTMLElement} elm\r\n     * @param {String optionlly} selector\r\n     */\r\n    function siblings(elm, selector) {\r\n        var node = elm.parentNode.firstChild,\r\n            ret = [];\r\n        while (node) {\r\n            if (node.nodeType == 1 && node !== elm) {\r\n                if (!selector || matches(node, selector)) {\r\n                    ret.push(node);\r\n                }\r\n            }\r\n            node = node.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n\r\n    var finder = function() {\r\n        return finder;\r\n    };\r\n\r\n    langx.mixin(finder, {\r\n\r\n        ancestor: ancestor,\r\n\r\n        ancestors: ancestors,\r\n\r\n        byId: byId,\r\n\r\n        children: children,\r\n\r\n        closest: closest,\r\n\r\n        descendant: descendant,\r\n\r\n        descendants: descendants,\r\n\r\n        find: find,\r\n\r\n        findAll: findAll,\r\n\r\n        firstChild: firstChild,\r\n\r\n        lastChild: lastChild,\r\n\r\n        matches: matches,\r\n\r\n        nextSibling: nextSibling,\r\n\r\n        nextSiblings: nextSiblings,\r\n\r\n        parent: parent,\r\n\r\n        previousSibling,\r\n\r\n        previousSiblings,\r\n\r\n        pseudos: local.pseudos,\r\n\r\n        siblings: siblings\r\n    });\r\n\r\n    return skylark.attach(\"domx.finder\", finder);\r\n});\ndefine('skylark-domx-finder/main',[\r\n\t\"./finder\"\r\n],function(finder){\r\n\treturn finder;\r\n});\ndefine('skylark-domx-finder', ['skylark-domx-finder/main'], function (main) { return main; });\n\ndefine('skylark-domx-data/data',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\"\r\n], function(skylark, langx, finder,noder) {\r\n    var map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        camelCase = langx.camelCase,\r\n        deserializeValue = langx.deserializeValue,\r\n\r\n        capitalRE = /([A-Z])/g,\r\n        propMap = {\r\n            'tabindex': 'tabIndex',\r\n            'readonly': 'readOnly',\r\n            'for': 'htmlFor',\r\n            'class': 'className',\r\n            'maxlength': 'maxLength',\r\n            'cellspacing': 'cellSpacing',\r\n            'cellpadding': 'cellPadding',\r\n            'rowspan': 'rowSpan',\r\n            'colspan': 'colSpan',\r\n            'usemap': 'useMap',\r\n            'frameborder': 'frameBorder',\r\n            'contenteditable': 'contentEditable'\r\n        };\r\n\r\n    // Strip and collapse whitespace according to HTML spec\r\n    function stripAndCollapse( value ) {\r\n      var tokens = value.match( /[^\\x20\\t\\r\\n\\f]+/g ) || [];\r\n      return tokens.join( \" \" );\r\n    }\r\n\r\n\r\n    var valHooks = {\r\n      option: {\r\n        get: function( elem ) {\r\n          var val = elem.getAttribute( \"value\" );\r\n          return val != null ?  val :  stripAndCollapse(text( elem ) );\r\n        }\r\n      },\r\n      select: {\r\n        get: function( elem ) {\r\n          var value, option, i,\r\n            options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === \"select-one\",\r\n            values = one ? null : [],\r\n            max = one ? index + 1 : options.length;\r\n\r\n          if ( index < 0 ) {\r\n            i = max;\r\n\r\n          } else {\r\n            i = one ? index : 0;\r\n          }\r\n\r\n          // Loop through all the selected options\r\n          for ( ; i < max; i++ ) {\r\n            option = options[ i ];\r\n\r\n            if ( option.selected &&\r\n\r\n                // Don't return options that are disabled or in a disabled optgroup\r\n                !option.disabled &&\r\n                ( !option.parentNode.disabled ||\r\n                  !noder.nodeName( option.parentNode, \"optgroup\" ) ) ) {\r\n\r\n              // Get the specific value for the option\r\n              value = val(option);\r\n\r\n              // We don't need an array for one selects\r\n              if ( one ) {\r\n                return value;\r\n              }\r\n\r\n              // Multi-Selects return an array\r\n              values.push( value );\r\n            }\r\n          }\r\n\r\n          return values;\r\n        },\r\n\r\n        set: function( elem, value ) {\r\n          var optionSet, option,\r\n            options = elem.options,\r\n            values = langx.makeArray( value ),\r\n            i = options.length;\r\n\r\n          while ( i-- ) {\r\n            option = options[ i ];\r\n\r\n            /* eslint-disable no-cond-assign */\r\n\r\n            if ( option.selected =\r\n              langx.inArray( valHooks.option.get( option ), values ) > -1\r\n            ) {\r\n              optionSet = true;\r\n            }\r\n\r\n            /* eslint-enable no-cond-assign */\r\n          }\r\n\r\n          // Force browsers to behave consistently when non-matching value is set\r\n          if ( !optionSet ) {\r\n            elem.selectedIndex = -1;\r\n          }\r\n          return values;\r\n        }\r\n      }\r\n    };\r\n\r\n\r\n    // Radios and checkboxes getter/setter\r\n    langx.each( [ \"radio\", \"checkbox\" ], function() {\r\n      valHooks[ this ] = {\r\n        set: function( elem, value ) {\r\n          if ( langx.isArray( value ) ) {\r\n            return ( elem.checked = langx.inArray( val(elem), value ) > -1 );\r\n          }\r\n        }\r\n      };\r\n    });\r\n\r\n\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function setAttribute(elm, name, value) {\r\n        if (value == null) {\r\n            elm.removeAttribute(name);\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n        }\r\n    }\r\n\r\n    function aria(elm, name, value) {\r\n        return this.attr(elm, \"aria-\" + name, value);\r\n    }\r\n\r\n    /*\r\n     * Set property values\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n\r\n    function attr(elm, name, value) {\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var attrName in name) {\r\n                    attr(elm, attrName, name[attrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                if (elm.hasAttribute && elm.hasAttribute(name)) {\r\n                    return elm.getAttribute(name);\r\n                }\r\n            }\r\n        } else {\r\n            elm.setAttribute(name, value);\r\n            return this;\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n     *  Read all \"data-*\" attributes from a node\r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function _attributeData(elm) {\r\n        var store = {}\r\n        langx.each(elm.attributes || [], function(i, attr) {\r\n            if (attr.name.indexOf('data-') == 0) {\r\n                store[camelCase(attr.name.replace('data-', ''))] = deserializeValue(attr.value);\r\n            }\r\n        })\r\n        return store;\r\n    }\r\n\r\n    function _store(elm, confirm) {\r\n        var store = elm[\"_$_store\"];\r\n        if (!store && confirm) {\r\n            store = elm[\"_$_store\"] = _attributeData(elm);\r\n        }\r\n        return store;\r\n    }\r\n\r\n    function _getData(elm, name) {\r\n        if (name === undefined) {\r\n            return _store(elm, true);\r\n        } else {\r\n            var store = _store(elm);\r\n            if (store) {\r\n                if (name in store) {\r\n                    return store[name];\r\n                }\r\n                var camelName = camelCase(name);\r\n                if (camelName in store) {\r\n                    return store[camelName];\r\n                }\r\n            }\r\n            var attrName = 'data-' + name.replace(capitalRE, \"-$1\").toLowerCase()\r\n            return attr(elm, attrName);\r\n        }\r\n\r\n    }\r\n\r\n    function _setData(elm, name, value) {\r\n        var store = _store(elm, true);\r\n        store[camelCase(name)] = value;\r\n    }\r\n\r\n\r\n    /*\r\n     * xxx\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function data(elm, name, value) {\r\n\r\n        if (value === undefined) {\r\n            if (typeof name === \"object\") {\r\n                for (var dataAttrName in name) {\r\n                    _setData(elm, dataAttrName, name[dataAttrName]);\r\n                }\r\n                return this;\r\n            } else {\r\n                return _getData(elm, name);\r\n            }\r\n        } else {\r\n            _setData(elm, name, value);\r\n            return this;\r\n        }\r\n    } \r\n    /*\r\n     * Remove from the element all items that have not yet been run. \r\n     * @param {Object} elm  \r\n     */\r\n\r\n    function cleanData(elm) {\r\n        if (elm[\"_$_store\"]) {\r\n            delete elm[\"_$_store\"];\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Remove a previously-stored piece of data. \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function removeData(elm, names) {\r\n        if (names) {\r\n            if (langx.isString(names)) {\r\n                names = names.split(/\\s+/);\r\n            }\r\n            var store = _store(elm, true);\r\n            names.forEach(function(name) {\r\n                delete store[name];\r\n            });            \r\n        } else {\r\n            cleanData(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*\r\n     * xxx \r\n     * @param {Object} elm  \r\n     * @param {Array} names\r\n     */\r\n    function pluck(nodes, property) {\r\n        return map.call(nodes, function(elm) {\r\n            return elm[property];\r\n        });\r\n    }\r\n\r\n    /*\r\n     * Get or set the value of an property for the specified element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     * @param {String} value\r\n     */\r\n    function prop(elm, name, value) {\r\n        name = propMap[name] || name;\r\n        if (value === undefined) {\r\n            return elm[name];\r\n        } else {\r\n            elm[name] = value;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * remove Attributes  \r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeAttr(elm, name) {\r\n        name.split(' ').forEach(function(attr) {\r\n            setAttribute(elm, attr);\r\n        });\r\n        return this;\r\n    }\r\n\r\n\r\n    /*\r\n     * Remove the value of a property for the first element in the set of matched elements or set one or more properties for every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} name\r\n     */\r\n    function removeProp(elm, name) {\r\n        name.split(' ').forEach(function(prop) {\r\n            delete elm[prop];\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Get the combined text contents of each element in the set of matched elements, including their descendants, or set the text contents of the matched elements.  \r\n     * @param {Object} elm  \r\n     * @param {String} txt\r\n     */\r\n    function text(elm, txt) {\r\n        if (txt === undefined) {\r\n            return elm.textContent;\r\n        } else {\r\n            elm.textContent = txt == null ? '' : '' + txt;\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*   \r\n     * Get the current value of the first element in the set of matched elements or set the value of every matched element.\r\n     * @param {Object} elm  \r\n     * @param {String} value\r\n     */\r\n    function val(elm, value) {\r\n        var hooks = valHooks[ elm.type ] || valHooks[ elm.nodeName.toLowerCase() ];\r\n        if (value === undefined) {\r\n/*\r\n            if (elm.multiple) {\r\n                // select multiple values\r\n                var selectedOptions = filter.call(finder.find(elm, \"option\"), (function(option) {\r\n                    return option.selected;\r\n                }));\r\n                return pluck(selectedOptions, \"value\");\r\n            } else {\r\n                if (/input|textarea/i.test(elm.tagName)) {\r\n                  return elm.value;\r\n                }\r\n                return text(elm);\r\n            }\r\n*/\r\n\r\n          if ( hooks &&  \"get\" in hooks &&  ( ret = hooks.get( elm, \"value\" ) ) !== undefined ) {\r\n            return ret;\r\n          }\r\n\r\n          ret = elm.value;\r\n\r\n          // Handle most common string cases\r\n          if ( typeof ret === \"string\" ) {\r\n            return ret.replace( /\\r/g, \"\" );\r\n          }\r\n\r\n          // Handle cases where value is null/undef or number\r\n          return ret == null ? \"\" : ret;\r\n\r\n        } else {\r\n/*          \r\n            if (/input|textarea/i.test(elm.tagName)) {\r\n              elm.value = value;\r\n            } else {\r\n              text(elm,value);\r\n            }\r\n            return this;\r\n*/\r\n          // Treat null/undefined as \"\"; convert numbers to string\r\n          if ( value == null ) {\r\n            value = \"\";\r\n\r\n          } else if ( typeof value === \"number\" ) {\r\n            value += \"\";\r\n\r\n          } else if ( langx.isArray( value ) ) {\r\n            value = langx.map( value, function( value1 ) {\r\n              return value1 == null ? \"\" : value1 + \"\";\r\n            } );\r\n          }\r\n\r\n          // If set returns undefined, fall back to normal setting\r\n          if ( !hooks || !( \"set\" in hooks ) || hooks.set( elm, value, \"value\" ) === undefined ) {\r\n            elm.value = value;\r\n          }\r\n        }      \r\n    }\r\n\r\n\r\n    finder.pseudos.data = function( elem, i, match,dataName ) {\r\n        return !!data( elem, dataName || match[3]);\r\n    };\r\n   \r\n\r\n    function datax() {\r\n        return datax;\r\n    }\r\n\r\n    langx.mixin(datax, {\r\n        aria: aria,\r\n\r\n        attr: attr,\r\n\r\n        cleanData: cleanData,\r\n\r\n        data: data,\r\n\r\n        pluck: pluck,\r\n\r\n        prop: prop,\r\n\r\n        removeAttr: removeAttr,\r\n\r\n        removeData: removeData,\r\n\r\n        removeProp: removeProp,\r\n\r\n        text: text,\r\n\r\n        val: val,\r\n\r\n        valHooks : valHooks\r\n    });\r\n\r\n    return skylark.attach(\"domx.data\", datax);\r\n});\ndefine('skylark-domx-data/main',[\r\n\t\"./data\"\r\n],function(data){\r\n\treturn data;\r\n});\ndefine('skylark-domx-data', ['skylark-domx-data/main'], function (main) { return main; });\n\ndefine('skylark-domx-eventer/eventer',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\"\r\n], function(skylark, langx, browser, finder, noder, datax) {\r\n    var mixin = langx.mixin,\r\n        each = langx.each,\r\n        slice = Array.prototype.slice,\r\n        uid = langx.uid,\r\n        ignoreProperties = /^([A-Z]|returnValue$|layer[XY]$)/,\r\n        eventMethods = {\r\n            preventDefault: \"isDefaultPrevented\",\r\n            stopImmediatePropagation: \"isImmediatePropagationStopped\",\r\n            stopPropagation: \"isPropagationStopped\"\r\n        },\r\n        readyRE = /complete|loaded|interactive/;\r\n\r\n    function compatible(event, source) {\r\n        if (source || !event.isDefaultPrevented) {\r\n            if (!source) {\r\n                source = event;\r\n            }\r\n\r\n            langx.each(eventMethods, function(name, predicate) {\r\n                var sourceMethod = source[name];\r\n                event[name] = function() {\r\n                    this[predicate] = langx.returnTrue;\r\n                    return sourceMethod && sourceMethod.apply(source, arguments);\r\n                }\r\n                event[predicate] = langx.returnFalse;\r\n            });\r\n        }\r\n        return event;\r\n    }\r\n\r\n    function parse(event) {\r\n        var segs = (\"\" + event).split(\".\");\r\n        return {\r\n            type: segs[0],\r\n            ns: segs.slice(1).sort().join(\" \")\r\n        };\r\n    }\r\n\r\n    //create a custom dom event\r\n    var createEvent = (function() {\r\n        var EventCtors = [\r\n                window[\"CustomEvent\"], // 0 default\r\n                window[\"CompositionEvent\"], // 1\r\n                window[\"DragEvent\"], // 2\r\n                window[\"Event\"], // 3\r\n                window[\"FocusEvent\"], // 4\r\n                window[\"KeyboardEvent\"], // 5\r\n                window[\"MessageEvent\"], // 6\r\n                window[\"MouseEvent\"], // 7\r\n                window[\"MouseScrollEvent\"], // 8\r\n                window[\"MouseWheelEvent\"], // 9\r\n                window[\"MutationEvent\"], // 10\r\n                window[\"ProgressEvent\"], // 11\r\n                window[\"TextEvent\"], // 12\r\n                window[\"TouchEvent\"], // 13\r\n                window[\"UIEvent\"], // 14\r\n                window[\"WheelEvent\"], // 15\r\n                window[\"ClipboardEvent\"] // 16\r\n            ],\r\n            NativeEvents = {\r\n                \"compositionstart\": 1, // CompositionEvent\r\n                \"compositionend\": 1, // CompositionEvent\r\n                \"compositionupdate\": 1, // CompositionEvent\r\n\r\n                \"beforecopy\": 16, // ClipboardEvent\r\n                \"beforecut\": 16, // ClipboardEvent\r\n                \"beforepaste\": 16, // ClipboardEvent\r\n                \"copy\": 16, // ClipboardEvent\r\n                \"cut\": 16, // ClipboardEvent\r\n                \"paste\": 16, // ClipboardEvent\r\n\r\n                \"drag\": 2, // DragEvent\r\n                \"dragend\": 2, // DragEvent\r\n                \"dragenter\": 2, // DragEvent\r\n                \"dragexit\": 2, // DragEvent\r\n                \"dragleave\": 2, // DragEvent\r\n                \"dragover\": 2, // DragEvent\r\n                \"dragstart\": 2, // DragEvent\r\n                \"drop\": 2, // DragEvent\r\n\r\n                \"abort\": 3, // Event\r\n                \"change\": 3, // Event\r\n                \"error\": 3, // Event\r\n                \"selectionchange\": 3, // Event\r\n                \"submit\": 3, // Event\r\n                \"reset\": 3, // Event\r\n\r\n                \"focus\": 4, // FocusEvent\r\n                \"blur\": 4, // FocusEvent\r\n                \"focusin\": 4, // FocusEvent\r\n                \"focusout\": 4, // FocusEvent\r\n\r\n                \"keydown\": 5, // KeyboardEvent\r\n                \"keypress\": 5, // KeyboardEvent\r\n                \"keyup\": 5, // KeyboardEvent\r\n\r\n                \"message\": 6, // MessageEvent\r\n\r\n                \"click\": 7, // MouseEvent\r\n                \"contextmenu\": 7, // MouseEvent\r\n                \"dblclick\": 7, // MouseEvent\r\n                \"mousedown\": 7, // MouseEvent\r\n                \"mouseup\": 7, // MouseEvent\r\n                \"mousemove\": 7, // MouseEvent\r\n                \"mouseover\": 7, // MouseEvent\r\n                \"mouseout\": 7, // MouseEvent\r\n                \"mouseenter\": 7, // MouseEvent\r\n                \"mouseleave\": 7, // MouseEvent\r\n\r\n\r\n                \"textInput\": 12, // TextEvent\r\n\r\n                \"touchstart\": 13, // TouchEvent\r\n                \"touchmove\": 13, // TouchEvent\r\n                \"touchend\": 13, // TouchEvent\r\n\r\n                \"load\": 14, // UIEvent\r\n                \"resize\": 14, // UIEvent\r\n                \"select\": 14, // UIEvent\r\n                \"scroll\": 14, // UIEvent\r\n                \"unload\": 14, // UIEvent,\r\n\r\n                \"wheel\": 15 // WheelEvent\r\n            };\r\n\r\n        function getEventCtor(type) {\r\n            var idx = NativeEvents[type];\r\n            if (!idx) {\r\n                idx = 0;\r\n            }\r\n            return EventCtors[idx];\r\n        }\r\n\r\n        return function(type, props) {\r\n            //create a custom dom event\r\n\r\n            if (langx.isString(type)) {\r\n                props = props || {};\r\n            } else {\r\n                props = type || {};\r\n                type = props.type || \"\";\r\n            }\r\n            var parsed = parse(type);\r\n            type = parsed.type;\r\n\r\n            props = langx.mixin({\r\n                bubbles: true,\r\n                cancelable: true\r\n            }, props);\r\n\r\n            if (parsed.ns) {\r\n                props.namespace = parsed.ns;\r\n            }\r\n\r\n            var ctor = getEventCtor(type),\r\n                e = new ctor(type, props);\r\n\r\n            langx.safeMixin(e, props);\r\n\r\n            return compatible(e);\r\n        };\r\n    })();\r\n\r\n    function createProxy(src, props) {\r\n        var key,\r\n            proxy = {\r\n                originalEvent: src\r\n            };\r\n        for (key in src) {\r\n            if (key !== \"keyIdentifier\" && !ignoreProperties.test(key) && src[key] !== undefined) {\r\n                proxy[key] = src[key];\r\n            }\r\n        }\r\n        if (props) {\r\n            langx.mixin(proxy, props);\r\n        }\r\n        return compatible(proxy, src);\r\n    }\r\n\r\n    var\r\n        specialEvents = {},\r\n        focusinSupported = \"onfocusin\" in window,\r\n        focus = { focus: \"focusin\", blur: \"focusout\" },\r\n        hover = { mouseenter: \"mouseover\", mouseleave: \"mouseout\" },\r\n        realEvent = function(type) {\r\n            return hover[type] || (focusinSupported && focus[type]) || type;\r\n        },\r\n        handlers = {},\r\n        EventBindings = langx.klass({\r\n            init: function(target, event) {\r\n                this._target = target;\r\n                this._event = event;\r\n                this._bindings = [];\r\n            },\r\n\r\n            add: function(fn, options) {\r\n                var bindings = this._bindings,\r\n                    binding = {\r\n                        fn: fn,\r\n                        options: langx.mixin({}, options)\r\n                    };\r\n\r\n                bindings.push(binding);\r\n\r\n                var self = this;\r\n                if (!self._listener) {\r\n                    self._listener = function(domEvt) {\r\n                        var elm = this,\r\n                            e = createProxy(domEvt),\r\n                            args = domEvt._args,\r\n                            bindings = self._bindings,\r\n                            ns = e.namespace;\r\n\r\n                        if (langx.isDefined(args)) {\r\n                            args = [e].concat(args);\r\n                        } else {\r\n                            args = [e];\r\n                        }\r\n\r\n                        langx.each(bindings, function(idx, binding) {\r\n                            var match = elm;\r\n                            if (e.isImmediatePropagationStopped && e.isImmediatePropagationStopped()) {\r\n                                return false;\r\n                            }\r\n                            var fn = binding.fn,\r\n                                options = binding.options || {},\r\n                                selector = options.selector,\r\n                                one = options.one,\r\n                                data = options.data;\r\n\r\n                            if (ns && ns != options.ns && options.ns.indexOf(ns) === -1) {\r\n                                return;\r\n                            }\r\n                            if (selector) {\r\n                                match = finder.closest(e.target, selector);\r\n                                if (match && match !== elm) {\r\n                                    langx.mixin(e, {\r\n                                        currentTarget: match,\r\n                                        liveFired: elm\r\n                                    });\r\n                                } else {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            var originalEvent = self._event;\r\n                            if (originalEvent in hover) {\r\n                                var related = e.relatedTarget;\r\n                                if (related && (related === match || noder.contains(match, related))) {\r\n                                    return;\r\n                                }\r\n                            }\r\n\r\n                            if (langx.isDefined(data)) {\r\n                                e.data = data;\r\n                            }\r\n\r\n                            if (one) {\r\n                                self.remove(fn, options);\r\n                            }\r\n\r\n                            var result = fn.apply(match, args);\r\n\r\n                            if (result === false) {\r\n                                e.preventDefault();\r\n                                e.stopPropagation();\r\n                            }\r\n                        });;\r\n                    };\r\n\r\n                    var event = self._event;\r\n                    /*\r\n                                        if (event in hover) {\r\n                                            var l = self._listener;\r\n                                            self._listener = function(e) {\r\n                                                var related = e.relatedTarget;\r\n                                                if (!related || (related !== this && !noder.contains(this, related))) {\r\n                                                    return l.apply(this, arguments);\r\n                                                }\r\n                                            }\r\n                                        }\r\n                    */\r\n\r\n                    if (self._target.addEventListener) {\r\n                        self._target.addEventListener(realEvent(event), self._listener, false);\r\n                    } else {\r\n                        console.warn(\"invalid eventer object\", self._target);\r\n                    }\r\n                }\r\n\r\n            },\r\n            remove: function(fn, options) {\r\n                options = langx.mixin({}, options);\r\n\r\n                function matcherFor(ns) {\r\n                    return new RegExp(\"(?:^| )\" + ns.replace(\" \", \" .* ?\") + \"(?: |$)\");\r\n                }\r\n                var matcher;\r\n                if (options.ns) {\r\n                    matcher = matcherFor(options.ns);\r\n                }\r\n\r\n                this._bindings = this._bindings.filter(function(binding) {\r\n                    var removing = (!fn || fn === binding.fn) &&\r\n                        (!matcher || matcher.test(binding.options.ns)) &&\r\n                        (!options.selector || options.selector == binding.options.selector);\r\n\r\n                    return !removing;\r\n                });\r\n                if (this._bindings.length == 0) {\r\n                    if (this._target.removeEventListener) {\r\n                        this._target.removeEventListener(realEvent(this._event), this._listener, false);\r\n                    }\r\n                    this._listener = null;\r\n                }\r\n            }\r\n        }),\r\n        EventsHandler = langx.klass({\r\n            init: function(elm) {\r\n                this._target = elm;\r\n                this._handler = {};\r\n            },\r\n\r\n            // add a event listener\r\n            // selector Optional\r\n            register: function(event, callback, options) {\r\n                // Seperate the event from the namespace\r\n                var parsed = parse(event),\r\n                    event = parsed.type,\r\n                    specialEvent = specialEvents[event],\r\n                    bindingEvent = specialEvent && (specialEvent.bindType || specialEvent.bindEventName);\r\n\r\n                var events = this._handler;\r\n\r\n                // Check if there is already a handler for this event\r\n                if (events[event] === undefined) {\r\n                    events[event] = new EventBindings(this._target, bindingEvent || event);\r\n                }\r\n\r\n                // Register the new callback function\r\n                events[event].add(callback, langx.mixin({\r\n                    ns: parsed.ns\r\n                }, options)); // options:{selector:xxx}\r\n            },\r\n\r\n            // remove a event listener\r\n            unregister: function(event, fn, options) {\r\n                // Check for parameter validtiy\r\n                var events = this._handler,\r\n                    parsed = parse(event);\r\n                event = parsed.type;\r\n\r\n                if (event) {\r\n                    var listener = events[event];\r\n\r\n                    if (listener) {\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                } else {\r\n                    //remove all events\r\n                    for (event in events) {\r\n                        var listener = events[event];\r\n                        listener.remove(fn, langx.mixin({\r\n                            ns: parsed.ns\r\n                        }, options));\r\n                    }\r\n                }\r\n            }\r\n        }),\r\n\r\n        findHandler = function(elm) {\r\n            var id = uid(elm),\r\n                handler = handlers[id];\r\n            if (!handler) {\r\n                handler = handlers[id] = new EventsHandler(elm);\r\n            }\r\n            return handler;\r\n        };\r\n\r\n    /*   \r\n     * Remove an event handler for one or more events from the specified element.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional } selector\r\n     * @param {Function} callback\r\n     */\r\n    function off(elm, events, selector, callback) {\r\n        var $this = this\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                off(elm, type, selector, fn);\r\n            })\r\n            return $this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback) && callback !== false) {\r\n            callback = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        if (events) events.forEach(function(event) {\r\n\r\n            handler.unregister(event, callback, {\r\n                selector: selector,\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach an event handler function for one or more events to the selected elements.\r\n     * @param {HTMLElement} elm  \r\n     * @param {String} events\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     * @param {Boolean　Optional} one\r\n     */\r\n    function on(elm, events, selector, data, callback, one) {\r\n\r\n        var autoRemove, delegator;\r\n        if (langx.isPlainObject(events)) {\r\n            langx.each(events, function(type, fn) {\r\n                on(elm, type, selector, data, fn, one);\r\n            });\r\n            return this;\r\n        }\r\n\r\n        if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n            callback = data;\r\n            data = selector;\r\n            selector = undefined;\r\n        }\r\n\r\n        if (langx.isFunction(data)) {\r\n            callback = data;\r\n            data = undefined;\r\n        }\r\n\r\n        if (callback === false) {\r\n            callback = langx.returnFalse;\r\n        }\r\n\r\n        if (typeof events == \"string\") {\r\n            if (events.indexOf(\",\") > -1) {\r\n                events = events.split(\",\");\r\n            } else {\r\n                events = events.split(/\\s/);\r\n            }\r\n        }\r\n\r\n        var handler = findHandler(elm);\r\n\r\n        events.forEach(function(event) {\r\n            if (event == \"ready\") {\r\n                return ready(callback);\r\n            }\r\n            handler.register(event, callback, {\r\n                data: data,\r\n                selector: selector,\r\n                one: !!one\r\n            });\r\n        });\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Attach a handler to an event for the elements. The handler is executed at most once per \r\n     * @param {HTMLElement} elm  \r\n     * @param {String} event\r\n     * @param {String　Optional} selector\r\n     * @param {Anything Optional} data\r\n     * @param {Function} callback\r\n     */\r\n    function one(elm, events, selector, data, callback) {\r\n        on(elm, events, selector, data, callback, 1);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Prevents propagation and clobbers the default action of the passed event. The same as calling event.preventDefault() and event.stopPropagation(). \r\n     * @param {String} event\r\n     */\r\n    function stop(event) {\r\n        if (window.document.all) {\r\n            event.keyCode = 0;\r\n        }\r\n        if (event.preventDefault) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n        return this;\r\n    }\r\n    /*   \r\n     * Execute all handlers and behaviors attached to the matched elements for the given event  \r\n     * @param {String} evented\r\n     * @param {String} type\r\n     * @param {Array or PlainObject } args\r\n     */\r\n    function trigger(evented, type, args) {\r\n        var e;\r\n        if (type instanceof Event) {\r\n            e = type;\r\n        } else {\r\n            e = createEvent(type, args);\r\n        }\r\n        e._args = args;\r\n\r\n        var fn = (evented.dispatchEvent || evented.trigger);\r\n        if (fn) {\r\n            fn.call(evented, e);\r\n        } else {\r\n            console.warn(\"The evented parameter is not a eventable object\");\r\n        }\r\n\r\n        return this;\r\n    }\r\n    /*   \r\n     * Specify a function to execute when the DOM is fully loaded.  \r\n     * @param {Function} callback\r\n     */\r\n    function ready(callback) {\r\n        // need to check if document.body exists for IE as that browser reports\r\n        // document ready when it hasn't yet created the body elm\r\n        if (readyRE.test(document.readyState) && document.body) {\r\n            langx.defer(callback);\r\n        } else {\r\n            document.addEventListener('DOMContentLoaded', callback, false);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    var keyCodeLookup = {\r\n        \"backspace\": 8,\r\n        \"comma\": 188,\r\n        \"delete\": 46,\r\n        \"down\": 40,\r\n        \"end\": 35,\r\n        \"enter\": 13,\r\n        \"escape\": 27,\r\n        \"home\": 36,\r\n        \"left\": 37,\r\n        \"page_down\": 34,\r\n        \"page_up\": 33,\r\n        \"period\": 190,\r\n        \"right\": 39,\r\n        \"space\": 32,\r\n        \"tab\": 9,\r\n        \"up\": 38\r\n    };\r\n    //example:\r\n    //shortcuts(elm).add(\"CTRL+ALT+SHIFT+X\",function(){console.log(\"test!\")});\r\n    function shortcuts(elm) {\r\n\r\n        var registry = datax.data(elm, \"shortcuts\");\r\n        if (!registry) {\r\n            registry = {};\r\n            datax.data(elm, \"shortcuts\", registry);\r\n            var run = function(shortcut, event) {\r\n                var n = event.metaKey || event.ctrlKey;\r\n                if (shortcut.ctrl == n && shortcut.alt == event.altKey && shortcut.shift == event.shiftKey) {\r\n                    if (event.keyCode == shortcut.keyCode || event.charCode && event.charCode == shortcut.charCode) {\r\n                        event.preventDefault();\r\n                        if (\"keydown\" == event.type) {\r\n                            shortcut.fn(event);\r\n                        }\r\n                        return true;\r\n                    }\r\n                }\r\n            };\r\n            on(elm, \"keyup keypress keydown\", function(event) {\r\n                if (!(/INPUT|TEXTAREA/.test(event.target.nodeName))) {\r\n                    for (var key in registry) {\r\n                        run(registry[key], event);\r\n                    }\r\n                }\r\n            });\r\n\r\n        }\r\n\r\n        return {\r\n            add: function(pattern, fn) {\r\n                var shortcutKeys;\r\n                if (pattern.indexOf(\",\") > -1) {\r\n                    shortcutKeys = pattern.toLowerCase().split(\",\");\r\n                } else {\r\n                    shortcutKeys = pattern.toLowerCase().split(\" \");\r\n                }\r\n                shortcutKeys.forEach(function(shortcutKey) {\r\n                    var setting = {\r\n                        fn: fn,\r\n                        alt: false,\r\n                        ctrl: false,\r\n                        shift: false\r\n                    };\r\n                    shortcutKey.split(\"+\").forEach(function(key) {\r\n                        switch (key) {\r\n                            case \"alt\":\r\n                            case \"ctrl\":\r\n                            case \"shift\":\r\n                                setting[key] = true;\r\n                                break;\r\n                            default:\r\n                                setting.charCode = key.charCodeAt(0);\r\n                                setting.keyCode = keyCodeLookup[key] || key.toUpperCase().charCodeAt(0);\r\n                        }\r\n                    });\r\n                    var regKey = (setting.ctrl ? \"ctrl\" : \"\") + \",\" + (setting.alt ? \"alt\" : \"\") + \",\" + (setting.shift ? \"shift\" : \"\") + \",\" + setting.keyCode;\r\n                    registry[regKey] = setting;\r\n                })\r\n            }\r\n\r\n        };\r\n\r\n    }\r\n\r\n    if (browser.support.transition) {\r\n        specialEvents.transitionEnd = {\r\n//          handle: function (e) {\r\n//            if ($(e.target).is(this)) return e.handleObj.handler.apply(this, arguments)\r\n//          },\r\n          bindType: browser.support.transition.end,\r\n          delegateType: browser.support.transition.end\r\n        }        \r\n    }\r\n\r\n    function eventer() {\r\n        return eventer;\r\n    }\r\n\r\n    langx.mixin(eventer, {\r\n        create: createEvent,\r\n\r\n        keys: keyCodeLookup,\r\n\r\n        off: off,\r\n\r\n        on: on,\r\n\r\n        one: one,\r\n\r\n        proxy: createProxy,\r\n\r\n        ready: ready,\r\n\r\n        shortcuts: shortcuts,\r\n\r\n        special: specialEvents,\r\n\r\n        stop: stop,\r\n\r\n        trigger: trigger\r\n\r\n    });\r\n\r\n    return skylark.attach(\"domx.eventer\",eventer);\r\n});\ndefine('skylark-domx-eventer/main',[\r\n\t\"./eventer\"\r\n],function(eventer){\r\n\treturn eventer;\r\n});\ndefine('skylark-domx-eventer', ['skylark-domx-eventer/main'], function (main) { return main; });\n\ndefine('skylark-domx-geom/geom',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-styler\"\r\n], function(skylark, langx, noder, styler) {\r\n    var rootNodeRE = /^(?:body|html)$/i,\r\n        px = langx.toPixel,\r\n        offsetParent = noder.offsetParent,\r\n        cachedScrollbarWidth;\r\n\r\n    function scrollbarWidth() {\r\n        if (cachedScrollbarWidth !== undefined) {\r\n            return cachedScrollbarWidth;\r\n        }\r\n        var w1, w2,\r\n            div = noder.createFragment(\"<div style=\" +\r\n                \"'display:block;position:absolute;width:200px;height:200px;overflow:hidden;'>\" +\r\n                \"<div style='height:300px;width:auto;'></div></div>\")[0],\r\n            innerDiv = div.childNodes[0];\r\n\r\n        noder.append(document.body, div);\r\n\r\n        w1 = innerDiv.offsetWidth;\r\n\r\n        styler.css(div, \"overflow\", \"scroll\");\r\n\r\n        w2 = innerDiv.offsetWidth;\r\n\r\n        if (w1 === w2) {\r\n            w2 = div[0].clientWidth;\r\n        }\r\n\r\n        noder.remove(div);\r\n\r\n        return (cachedScrollbarWidth = w1 - w2);\r\n    }\r\n    /*\r\n     * Get the widths of each border of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function borderExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.borderLeftWidth, elm),\r\n            top: px(s.borderTopWidth, elm),\r\n            right: px(s.borderRightWidth, elm),\r\n            bottom: px(s.borderBottomWidth, elm)\r\n        }\r\n    }\r\n\r\n    //viewport coordinate\r\n    /*\r\n     * Get or set the viewport position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingPosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            return rootNodeRE.test(elm.nodeName) ? { top: 0, left: 0 } : elm.getBoundingClientRect();\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the viewport rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function boundingRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            return elm.getBoundingClientRect()\r\n        } else {\r\n            boundingPosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the height of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function clientHeight(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).height;\r\n        } else {\r\n            return clientSize(elm, {\r\n                height: value\r\n            });\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the size of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientSize(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            return {\r\n                width: elm.clientWidth,\r\n                height: elm.clientHeight\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width - pex.left - pex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height - pex.top - pex.bottom;\r\n                }\r\n            } else {\r\n                var bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined) {\r\n                    props.width = props.width + bex.left + bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined) {\r\n                    props.height = props.height + bex.top + bex.bottom;\r\n                }\r\n\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n        return {\r\n            width: elm.clientWidth,\r\n            height: elm.clientHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get or set the width of the specified element client box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} dimension\r\n     */\r\n    function clientWidth(elm, value) {\r\n        if (value == undefined) {\r\n            return clientSize(elm).width;\r\n        } else {\r\n            clientSize(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the rect of the specified element content box.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function contentRect(elm) {\r\n        var cs = clientSize(elm),\r\n            pex = paddingExtents(elm);\r\n\r\n\r\n        //// On Opera, offsetLeft includes the parent's border\r\n        //if(has(\"opera\")){\r\n        //    pe.l += be.l;\r\n        //    pe.t += be.t;\r\n        //}\r\n        return {\r\n            left: pex.left,\r\n            top: pex.top,\r\n            width: cs.width - pex.left - pex.right,\r\n            height: cs.height - pex.top - pex.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLDocument} doc\r\n     */\r\n    function getDocumentSize(doc) {\r\n        var documentElement = doc.documentElement,\r\n            body = doc.body,\r\n            max = Math.max,\r\n            scrollWidth = max(documentElement.scrollWidth, body.scrollWidth),\r\n            clientWidth = max(documentElement.clientWidth, body.clientWidth),\r\n            offsetWidth = max(documentElement.offsetWidth, body.offsetWidth),\r\n            scrollHeight = max(documentElement.scrollHeight, body.scrollHeight),\r\n            clientHeight = max(documentElement.clientHeight, body.clientHeight),\r\n            offsetHeight = max(documentElement.offsetHeight, body.offsetHeight);\r\n\r\n        return {\r\n            width: scrollWidth < offsetWidth ? clientWidth : scrollWidth,\r\n            height: scrollHeight < offsetHeight ? clientHeight : scrollHeight\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the document size.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function height(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).height;\r\n        } else {\r\n            size(elm, {\r\n                height: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each margin of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function marginExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.marginLeft),\r\n            top: px(s.marginTop),\r\n            right: px(s.marginRight),\r\n            bottom: px(s.marginBottom),\r\n        }\r\n    }\r\n\r\n\r\n    function marginRect(elm) {\r\n        var obj = relativeRect(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            left: obj.left,\r\n            top: obj.top,\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n\r\n    function marginSize(elm) {\r\n        var obj = size(elm),\r\n            me = marginExtents(elm);\r\n\r\n        return {\r\n            width: obj.width + me.left + me.right,\r\n            height: obj.height + me.top + me.bottom\r\n        };\r\n    }\r\n\r\n    /*\r\n     * Get the widths of each padding of the specified element.\r\n     * @param {HTMLElement} elm\r\n     */\r\n    function paddingExtents(elm) {\r\n        if (noder.isWindow(elm)) {\r\n            return {\r\n                left : 0,\r\n                top : 0,\r\n                right : 0,\r\n                bottom : 0\r\n            }\r\n        }\r\n        var s = getComputedStyle(elm);\r\n        return {\r\n            left: px(s.paddingLeft),\r\n            top: px(s.paddingTop),\r\n            right: px(s.paddingRight),\r\n            bottom: px(s.paddingBottom),\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document position of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    //coordinate to the document\r\n    function pagePosition(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset\r\n            }\r\n        } else {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                parentOffset = pagePosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            relativePosition(elm, {\r\n                top: coords.top - parentOffset.top - mex.top - pbex.top,\r\n                left: coords.left - parentOffset.left - mex.left - pbex.left\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the document rect of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function pageRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var obj = elm.getBoundingClientRect()\r\n            return {\r\n                left: obj.left + window.pageXOffset,\r\n                top: obj.top + window.pageYOffset,\r\n                width: Math.round(obj.width),\r\n                height: Math.round(obj.height)\r\n            }\r\n        } else {\r\n            pagePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the position of the specified element border box , relative to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    // coordinate relative to it's parent\r\n    function relativePosition(elm, coords) {\r\n        if (coords == undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingPosition(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left\r\n            }\r\n        } else {\r\n            var props = {\r\n                top: coords.top,\r\n                left: coords.left\r\n            }\r\n\r\n            if (styler.css(elm, \"position\") == \"static\") {\r\n                props['position'] = \"relative\";\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*\r\n     * Get or set the rect of the specified element border box , relatived to parent element.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject} coords\r\n     */\r\n    function relativeRect(elm, coords) {\r\n        if (coords === undefined) {\r\n            var // Get *real* offsetParent\r\n                parent = offsetParent(elm),\r\n                // Get correct offsets\r\n                offset = boundingRect(elm),\r\n                parentOffset = boundingPosition(parent),\r\n                mex = marginExtents(elm),\r\n                pbex = borderExtents(parent);\r\n\r\n            // Subtract parent offsets and element margins\r\n            return {\r\n                top: offset.top - parentOffset.top - pbex.top, // - mex.top,\r\n                left: offset.left - parentOffset.left - pbex.left, // - mex.left,\r\n                width: offset.width,\r\n                height: offset.height\r\n            }\r\n        } else {\r\n            relativePosition(elm, coords);\r\n            size(elm, coords);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Scroll the specified element into view.\r\n     * @param {HTMLElement} elm\r\n     * @param {} align\r\n     */\r\n    function scrollIntoView(elm, align) {\r\n        function getOffset(elm, rootElm) {\r\n            var x, y, parent = elm;\r\n\r\n            x = y = 0;\r\n            while (parent && parent != rootElm && parent.nodeType) {\r\n                x += parent.offsetLeft || 0;\r\n                y += parent.offsetTop || 0;\r\n                parent = parent.offsetParent;\r\n            }\r\n\r\n            return { x: x, y: y };\r\n        }\r\n\r\n        var parentElm = elm.parentNode;\r\n        var x, y, width, height, parentWidth, parentHeight;\r\n        var pos = getOffset(elm, parentElm);\r\n\r\n        x = pos.x;\r\n        y = pos.y;\r\n        width = elm.offsetWidth;\r\n        height = elm.offsetHeight;\r\n        parentWidth = parentElm.clientWidth;\r\n        parentHeight = parentElm.clientHeight;\r\n\r\n        if (align == \"end\") {\r\n            x -= parentWidth - width;\r\n            y -= parentHeight - height;\r\n        } else if (align == \"center\") {\r\n            x -= (parentWidth / 2) - (width / 2);\r\n            y -= (parentHeight / 2) - (height / 2);\r\n        }\r\n\r\n        parentElm.scrollLeft = x;\r\n        parentElm.scrollTop = y;\r\n\r\n        return this;\r\n    }\r\n    /*\r\n     * Get or set the current horizontal position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollLeft(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollLeft = \"scrollLeft\" in elm;\r\n        if (value === undefined) {\r\n            return hasScrollLeft ? elm.scrollLeft : elm.pageXOffset\r\n        } else {\r\n            if (hasScrollLeft) {\r\n                elm.scrollLeft = value;\r\n            } else {\r\n                elm.scrollTo(value, elm.scrollY);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or the current vertical position of the scroll bar for the specified element.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function scrollTop(elm, value) {\r\n        if (elm.nodeType === 9) {\r\n            elm = elm.defaultView;\r\n        }\r\n        var hasScrollTop = \"scrollTop\" in elm;\r\n\r\n        if (value === undefined) {\r\n            return hasScrollTop ? elm.scrollTop : elm.pageYOffset\r\n        } else {\r\n            if (hasScrollTop) {\r\n                elm.scrollTop = value;\r\n            } else {\r\n                elm.scrollTo(elm.scrollX, value);\r\n            }\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {PlainObject}dimension\r\n     */\r\n    function size(elm, dimension) {\r\n        if (dimension == undefined) {\r\n            if (langx.isWindow(elm)) {\r\n                return {\r\n                    width: elm.innerWidth,\r\n                    height: elm.innerHeight\r\n                }\r\n\r\n            } else if (langx.isDocument(elm)) {\r\n                return getDocumentSize(document);\r\n            } else {\r\n                return {\r\n                    width: elm.offsetWidth,\r\n                    height: elm.offsetHeight\r\n                }\r\n            }\r\n        } else {\r\n            var isBorderBox = (styler.css(elm, \"box-sizing\") === \"border-box\"),\r\n                props = {\r\n                    width: dimension.width,\r\n                    height: dimension.height\r\n                };\r\n            if (!isBorderBox) {\r\n                var pex = paddingExtents(elm),\r\n                    bex = borderExtents(elm);\r\n\r\n                if (props.width !== undefined && props.width !== \"\" && props.width !== null) {\r\n                    props.width = props.width - pex.left - pex.right - bex.left - bex.right;\r\n                }\r\n\r\n                if (props.height !== undefined && props.height !== \"\" && props.height !== null) {\r\n                    props.height = props.height - pex.top - pex.bottom - bex.top - bex.bottom;\r\n                }\r\n            }\r\n            styler.css(elm, props);\r\n            return this;\r\n        }\r\n    }\r\n    /*\r\n     * Get or set the size of the specified element border box.\r\n     * @param {HTMLElement} elm\r\n     * @param {Number} value\r\n     */\r\n    function width(elm, value) {\r\n        if (value == undefined) {\r\n            return size(elm).width;\r\n        } else {\r\n            size(elm, {\r\n                width: value\r\n            });\r\n            return this;\r\n        }\r\n    }\r\n\r\n    function geom() {\r\n        return geom;\r\n    }\r\n\r\n    langx.mixin(geom, {\r\n        borderExtents: borderExtents,\r\n        //viewport coordinate\r\n        boundingPosition: boundingPosition,\r\n\r\n        boundingRect: boundingRect,\r\n\r\n        clientHeight: clientHeight,\r\n\r\n        clientSize: clientSize,\r\n\r\n        clientWidth: clientWidth,\r\n\r\n        contentRect: contentRect,\r\n\r\n        getDocumentSize: getDocumentSize,\r\n\r\n        height: height,\r\n\r\n        marginExtents: marginExtents,\r\n\r\n        marginRect: marginRect,\r\n\r\n        marginSize: marginSize,\r\n\r\n        offsetParent: offsetParent,\r\n\r\n        paddingExtents: paddingExtents,\r\n\r\n        //coordinate to the document\r\n        pagePosition: pagePosition,\r\n\r\n        pageRect: pageRect,\r\n\r\n        // coordinate relative to it's parent\r\n        relativePosition: relativePosition,\r\n\r\n        relativeRect: relativeRect,\r\n\r\n        scrollbarWidth: scrollbarWidth,\r\n\r\n        scrollIntoView: scrollIntoView,\r\n\r\n        scrollLeft: scrollLeft,\r\n\r\n        scrollTop: scrollTop,\r\n\r\n        size: size,\r\n\r\n        width: width\r\n    });\r\n\r\n    ( function() {\r\n        var max = Math.max,\r\n            abs = Math.abs,\r\n            rhorizontal = /left|center|right/,\r\n            rvertical = /top|center|bottom/,\r\n            roffset = /[\\+\\-]\\d+(\\.[\\d]+)?%?/,\r\n            rposition = /^\\w+/,\r\n            rpercent = /%$/;\r\n\r\n        function getOffsets( offsets, width, height ) {\r\n            return [\r\n                parseFloat( offsets[ 0 ] ) * ( rpercent.test( offsets[ 0 ] ) ? width / 100 : 1 ),\r\n                parseFloat( offsets[ 1 ] ) * ( rpercent.test( offsets[ 1 ] ) ? height / 100 : 1 )\r\n            ];\r\n        }\r\n\r\n        function parseCss( element, property ) {\r\n            return parseInt( styler.css( element, property ), 10 ) || 0;\r\n        }\r\n\r\n        function getDimensions( raw ) {\r\n            if ( raw.nodeType === 9 ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { top: 0, left: 0 }\r\n                };\r\n            }\r\n            if ( noder.isWindow( raw ) ) {\r\n                return {\r\n                    size: size(raw),\r\n                    offset: { \r\n                        top: scrollTop(raw), \r\n                        left: scrollLeft(raw) \r\n                    }\r\n                };\r\n            }\r\n            if ( raw.preventDefault ) {\r\n                return {\r\n                    size : {\r\n                        width: 0,\r\n                        height: 0\r\n                    },\r\n                    offset: { \r\n                        top: raw.pageY, \r\n                        left: raw.pageX \r\n                    }\r\n                };\r\n            }\r\n            return {\r\n                size: size(raw),\r\n                offset: pagePosition(raw)\r\n            };\r\n        }\r\n\r\n        function getScrollInfo( within ) {\r\n            var overflowX = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-x\" ),\r\n                overflowY = within.isWindow || within.isDocument ? \"\" :\r\n                    styler.css(within.element,\"overflow-y\" ),\r\n                hasOverflowX = overflowX === \"scroll\" ||\r\n                    ( overflowX === \"auto\" && within.width < scrollWidth(within.element) ),\r\n                hasOverflowY = overflowY === \"scroll\" ||\r\n                    ( overflowY === \"auto\" && within.height < scrollHeight(within.element));\r\n            return {\r\n                width: hasOverflowY ? scrollbarWidth() : 0,\r\n                height: hasOverflowX ? scrollbarWidth() : 0\r\n            };\r\n        }\r\n\r\n        function getWithinInfo( element ) {\r\n            var withinElement = element || window,\r\n                isWindow = noder.isWindow( withinElement),\r\n                isDocument = !!withinElement && withinElement.nodeType === 9,\r\n                hasOffset = !isWindow && !isDocument,\r\n                msize = marginSize(withinElement);\r\n            return {\r\n                element: withinElement,\r\n                isWindow: isWindow,\r\n                isDocument: isDocument,\r\n                offset: hasOffset ? pagePosition(element) : { left: 0, top: 0 },\r\n                scrollLeft: scrollLeft(withinElement),\r\n                scrollTop: scrollTop(withinElement),\r\n                width: msize.width,\r\n                height: msize.height\r\n            };\r\n        }\r\n\r\n        function posit(elm,options ) {\r\n            // Make a copy, we don't want to modify arguments\r\n            options = langx.extend( {}, options );\r\n\r\n            var atOffset, targetWidth, targetHeight, targetOffset, basePosition, dimensions,\r\n                target = options.of,\r\n                within = getWithinInfo( options.within ),\r\n                scrollInfo = getScrollInfo( within ),\r\n                collision = ( options.collision || \"flip\" ).split( \" \" ),\r\n                offsets = {};\r\n\r\n            dimensions = getDimensions( target );\r\n            if ( target.preventDefault ) {\r\n\r\n                // Force left top to allow flipping\r\n                options.at = \"left top\";\r\n            }\r\n            targetWidth = dimensions.size.width;\r\n            targetHeight = dimensions.size.height;\r\n            targetOffset = dimensions.offset;\r\n\r\n            // Clone to reuse original targetOffset later\r\n            basePosition = langx.extend( {}, targetOffset );\r\n\r\n            // Force my and at to have valid horizontal and vertical positions\r\n            // if a value is missing or invalid, it will be converted to center\r\n            langx.each( [ \"my\", \"at\" ], function() {\r\n                var pos = ( options[ this ] || \"\" ).split( \" \" ),\r\n                    horizontalOffset,\r\n                    verticalOffset;\r\n\r\n                if ( pos.length === 1 ) {\r\n                    pos = rhorizontal.test( pos[ 0 ] ) ?\r\n                        pos.concat( [ \"center\" ] ) :\r\n                        rvertical.test( pos[ 0 ] ) ?\r\n                            [ \"center\" ].concat( pos ) :\r\n                            [ \"center\", \"center\" ];\r\n                }\r\n                pos[ 0 ] = rhorizontal.test( pos[ 0 ] ) ? pos[ 0 ] : \"center\";\r\n                pos[ 1 ] = rvertical.test( pos[ 1 ] ) ? pos[ 1 ] : \"center\";\r\n\r\n                // Calculate offsets\r\n                horizontalOffset = roffset.exec( pos[ 0 ] );\r\n                verticalOffset = roffset.exec( pos[ 1 ] );\r\n                offsets[ this ] = [\r\n                    horizontalOffset ? horizontalOffset[ 0 ] : 0,\r\n                    verticalOffset ? verticalOffset[ 0 ] : 0\r\n                ];\r\n\r\n                // Reduce to just the positions without the offsets\r\n                options[ this ] = [\r\n                    rposition.exec( pos[ 0 ] )[ 0 ],\r\n                    rposition.exec( pos[ 1 ] )[ 0 ]\r\n                ];\r\n            } );\r\n\r\n            // Normalize collision option\r\n            if ( collision.length === 1 ) {\r\n                collision[ 1 ] = collision[ 0 ];\r\n            }\r\n\r\n            if ( options.at[ 0 ] === \"right\" ) {\r\n                basePosition.left += targetWidth;\r\n            } else if ( options.at[ 0 ] === \"center\" ) {\r\n                basePosition.left += targetWidth / 2;\r\n            }\r\n\r\n            if ( options.at[ 1 ] === \"bottom\" ) {\r\n                basePosition.top += targetHeight;\r\n            } else if ( options.at[ 1 ] === \"center\" ) {\r\n                basePosition.top += targetHeight / 2;\r\n            }\r\n\r\n            atOffset = getOffsets( offsets.at, targetWidth, targetHeight );\r\n            basePosition.left += atOffset[ 0 ];\r\n            basePosition.top += atOffset[ 1 ];\r\n\r\n            return ( function(elem) {\r\n                var collisionPosition, using,\r\n                    msize = marginSize(elem),\r\n                    elemWidth = msize.width,\r\n                    elemHeight = msize.height,\r\n                    marginLeft = parseCss( elem, \"marginLeft\" ),\r\n                    marginTop = parseCss( elem, \"marginTop\" ),\r\n                    collisionWidth = elemWidth + marginLeft + parseCss( elem, \"marginRight\" ) +\r\n                        scrollInfo.width,\r\n                    collisionHeight = elemHeight + marginTop + parseCss( elem, \"marginBottom\" ) +\r\n                        scrollInfo.height,\r\n                    position = langx.extend( {}, basePosition ),\r\n                    myOffset = getOffsets( offsets.my, msize.width, msize.height);\r\n\r\n                if ( options.my[ 0 ] === \"right\" ) {\r\n                    position.left -= elemWidth;\r\n                } else if ( options.my[ 0 ] === \"center\" ) {\r\n                    position.left -= elemWidth / 2;\r\n                }\r\n\r\n                if ( options.my[ 1 ] === \"bottom\" ) {\r\n                    position.top -= elemHeight;\r\n                } else if ( options.my[ 1 ] === \"center\" ) {\r\n                    position.top -= elemHeight / 2;\r\n                }\r\n\r\n                position.left += myOffset[ 0 ];\r\n                position.top += myOffset[ 1 ];\r\n\r\n                collisionPosition = {\r\n                    marginLeft: marginLeft,\r\n                    marginTop: marginTop\r\n                };\r\n\r\n                langx.each( [ \"left\", \"top\" ], function( i, dir ) {\r\n                    if ( positions[ collision[ i ] ] ) {\r\n                        positions[ collision[ i ] ][ dir ]( position, {\r\n                            targetWidth: targetWidth,\r\n                            targetHeight: targetHeight,\r\n                            elemWidth: elemWidth,\r\n                            elemHeight: elemHeight,\r\n                            collisionPosition: collisionPosition,\r\n                            collisionWidth: collisionWidth,\r\n                            collisionHeight: collisionHeight,\r\n                            offset: [ atOffset[ 0 ] + myOffset[ 0 ], atOffset [ 1 ] + myOffset[ 1 ] ],\r\n                            my: options.my,\r\n                            at: options.at,\r\n                            within: within,\r\n                            elem: elem\r\n                        } );\r\n                    }\r\n                } );\r\n\r\n                if ( options.using ) {\r\n\r\n                    // Adds feedback as second argument to using callback, if present\r\n                    using = function( props ) {\r\n                        var left = targetOffset.left - position.left,\r\n                            right = left + targetWidth - elemWidth,\r\n                            top = targetOffset.top - position.top,\r\n                            bottom = top + targetHeight - elemHeight,\r\n                            feedback = {\r\n                                target: {\r\n                                    element: target,\r\n                                    left: targetOffset.left,\r\n                                    top: targetOffset.top,\r\n                                    width: targetWidth,\r\n                                    height: targetHeight\r\n                                },\r\n                                element: {\r\n                                    element: elem,\r\n                                    left: position.left,\r\n                                    top: position.top,\r\n                                    width: elemWidth,\r\n                                    height: elemHeight\r\n                                },\r\n                                horizontal: right < 0 ? \"left\" : left > 0 ? \"right\" : \"center\",\r\n                                vertical: bottom < 0 ? \"top\" : top > 0 ? \"bottom\" : \"middle\"\r\n                            };\r\n                        if ( targetWidth < elemWidth && abs( left + right ) < targetWidth ) {\r\n                            feedback.horizontal = \"center\";\r\n                        }\r\n                        if ( targetHeight < elemHeight && abs( top + bottom ) < targetHeight ) {\r\n                            feedback.vertical = \"middle\";\r\n                        }\r\n                        if ( max( abs( left ), abs( right ) ) > max( abs( top ), abs( bottom ) ) ) {\r\n                            feedback.important = \"horizontal\";\r\n                        } else {\r\n                            feedback.important = \"vertical\";\r\n                        }\r\n                        options.using.call( this, props, feedback );\r\n                    };\r\n                }\r\n\r\n                pagePosition(elem, langx.extend( position, { using: using } ));\r\n            })(elm);\r\n        }\r\n\r\n        var positions = {\r\n            fit: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        outerWidth = within.width,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = withinOffset - collisionPosLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - withinOffset,\r\n                        newOverRight;\r\n\r\n                    // Element is wider than within\r\n                    if ( data.collisionWidth > outerWidth ) {\r\n\r\n                        // Element is initially over the left side of within\r\n                        if ( overLeft > 0 && overRight <= 0 ) {\r\n                            newOverRight = position.left + overLeft + data.collisionWidth - outerWidth -\r\n                                withinOffset;\r\n                            position.left += overLeft - newOverRight;\r\n\r\n                        // Element is initially over right side of within\r\n                        } else if ( overRight > 0 && overLeft <= 0 ) {\r\n                            position.left = withinOffset;\r\n\r\n                        // Element is initially over both left and right sides of within\r\n                        } else {\r\n                            if ( overLeft > overRight ) {\r\n                                position.left = withinOffset + outerWidth - data.collisionWidth;\r\n                            } else {\r\n                                position.left = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far left -> align with left edge\r\n                    } else if ( overLeft > 0 ) {\r\n                        position.left += overLeft;\r\n\r\n                    // Too far right -> align with right edge\r\n                    } else if ( overRight > 0 ) {\r\n                        position.left -= overRight;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.left = max( position.left - collisionPosLeft, position.left );\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        outerHeight = data.within.height,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = withinOffset - collisionPosTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - withinOffset,\r\n                        newOverBottom;\r\n\r\n                    // Element is taller than within\r\n                    if ( data.collisionHeight > outerHeight ) {\r\n\r\n                        // Element is initially over the top of within\r\n                        if ( overTop > 0 && overBottom <= 0 ) {\r\n                            newOverBottom = position.top + overTop + data.collisionHeight - outerHeight -\r\n                                withinOffset;\r\n                            position.top += overTop - newOverBottom;\r\n\r\n                        // Element is initially over bottom of within\r\n                        } else if ( overBottom > 0 && overTop <= 0 ) {\r\n                            position.top = withinOffset;\r\n\r\n                        // Element is initially over both top and bottom of within\r\n                        } else {\r\n                            if ( overTop > overBottom ) {\r\n                                position.top = withinOffset + outerHeight - data.collisionHeight;\r\n                            } else {\r\n                                position.top = withinOffset;\r\n                            }\r\n                        }\r\n\r\n                    // Too far up -> align with top\r\n                    } else if ( overTop > 0 ) {\r\n                        position.top += overTop;\r\n\r\n                    // Too far down -> align with bottom edge\r\n                    } else if ( overBottom > 0 ) {\r\n                        position.top -= overBottom;\r\n\r\n                    // Adjust based on position and margin\r\n                    } else {\r\n                        position.top = max( position.top - collisionPosTop, position.top );\r\n                    }\r\n                }\r\n            },\r\n            flip: {\r\n                left: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.left + within.scrollLeft,\r\n                        outerWidth = within.width,\r\n                        offsetLeft = within.isWindow ? within.scrollLeft : within.offset.left,\r\n                        collisionPosLeft = position.left - data.collisionPosition.marginLeft,\r\n                        overLeft = collisionPosLeft - offsetLeft,\r\n                        overRight = collisionPosLeft + data.collisionWidth - outerWidth - offsetLeft,\r\n                        myOffset = data.my[ 0 ] === \"left\" ?\r\n                            -data.elemWidth :\r\n                            data.my[ 0 ] === \"right\" ?\r\n                                data.elemWidth :\r\n                                0,\r\n                        atOffset = data.at[ 0 ] === \"left\" ?\r\n                            data.targetWidth :\r\n                            data.at[ 0 ] === \"right\" ?\r\n                                -data.targetWidth :\r\n                                0,\r\n                        offset = -2 * data.offset[ 0 ],\r\n                        newOverRight,\r\n                        newOverLeft;\r\n\r\n                    if ( overLeft < 0 ) {\r\n                        newOverRight = position.left + myOffset + atOffset + offset + data.collisionWidth -\r\n                            outerWidth - withinOffset;\r\n                        if ( newOverRight < 0 || newOverRight < abs( overLeft ) ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overRight > 0 ) {\r\n                        newOverLeft = position.left - data.collisionPosition.marginLeft + myOffset +\r\n                            atOffset + offset - offsetLeft;\r\n                        if ( newOverLeft > 0 || abs( newOverLeft ) < overRight ) {\r\n                            position.left += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                },\r\n                top: function( position, data ) {\r\n                    var within = data.within,\r\n                        withinOffset = within.offset.top + within.scrollTop,\r\n                        outerHeight = within.height,\r\n                        offsetTop = within.isWindow ? within.scrollTop : within.offset.top,\r\n                        collisionPosTop = position.top - data.collisionPosition.marginTop,\r\n                        overTop = collisionPosTop - offsetTop,\r\n                        overBottom = collisionPosTop + data.collisionHeight - outerHeight - offsetTop,\r\n                        top = data.my[ 1 ] === \"top\",\r\n                        myOffset = top ?\r\n                            -data.elemHeight :\r\n                            data.my[ 1 ] === \"bottom\" ?\r\n                                data.elemHeight :\r\n                                0,\r\n                        atOffset = data.at[ 1 ] === \"top\" ?\r\n                            data.targetHeight :\r\n                            data.at[ 1 ] === \"bottom\" ?\r\n                                -data.targetHeight :\r\n                                0,\r\n                        offset = -2 * data.offset[ 1 ],\r\n                        newOverTop,\r\n                        newOverBottom;\r\n                    if ( overTop < 0 ) {\r\n                        newOverBottom = position.top + myOffset + atOffset + offset + data.collisionHeight -\r\n                            outerHeight - withinOffset;\r\n                        if ( newOverBottom < 0 || newOverBottom < abs( overTop ) ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    } else if ( overBottom > 0 ) {\r\n                        newOverTop = position.top - data.collisionPosition.marginTop + myOffset + atOffset +\r\n                            offset - offsetTop;\r\n                        if ( newOverTop > 0 || abs( newOverTop ) < overBottom ) {\r\n                            position.top += myOffset + atOffset + offset;\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n            flipfit: {\r\n                left: function() {\r\n                    positions.flip.left.apply( this, arguments );\r\n                    positions.fit.left.apply( this, arguments );\r\n                },\r\n                top: function() {\r\n                    positions.flip.top.apply( this, arguments );\r\n                    positions.fit.top.apply( this, arguments );\r\n                }\r\n            }\r\n        };\r\n\r\n        geom.posit = posit;\r\n    })();\r\n\r\n    return skylark.attach(\"domx.geom\", geom);\r\n});\ndefine('skylark-domx-geom/main',[\r\n\t\"./geom\"\r\n],function(geom){\r\n\treturn geom;\r\n});\ndefine('skylark-domx-geom', ['skylark-domx-geom/main'], function (main) { return main; });\n\ndefine('skylark-domx-fx/fx',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-browser\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-eventer\"\r\n], function(skylark, langx, browser, geom, styler, eventer) {\r\n    var animationName,\r\n        animationDuration,\r\n        animationTiming,\r\n        animationDelay,\r\n        transitionProperty,\r\n        transitionDuration,\r\n        transitionTiming,\r\n        transitionDelay,\r\n\r\n        animationEnd = browser.normalizeCssEvent('AnimationEnd'),\r\n        transitionEnd = browser.normalizeCssEvent('TransitionEnd'),\r\n\r\n        supportedTransforms = /^((translate|rotate|scale)(X|Y|Z|3d)?|matrix(3d)?|perspective|skew(X|Y)?)$/i,\r\n        transform = browser.css3PropPrefix + \"transform\",\r\n        cssReset = {};\r\n\r\n\r\n    cssReset[animationName = browser.normalizeCssProperty(\"animation-name\")] =\r\n        cssReset[animationDuration = browser.normalizeCssProperty(\"animation-duration\")] =\r\n        cssReset[animationDelay = browser.normalizeCssProperty(\"animation-delay\")] =\r\n        cssReset[animationTiming = browser.normalizeCssProperty(\"animation-timing-function\")] = \"\";\r\n\r\n    cssReset[transitionProperty = browser.normalizeCssProperty(\"transition-property\")] =\r\n        cssReset[transitionDuration = browser.normalizeCssProperty(\"transition-duration\")] =\r\n        cssReset[transitionDelay = browser.normalizeCssProperty(\"transition-delay\")] =\r\n        cssReset[transitionTiming = browser.normalizeCssProperty(\"transition-timing-function\")] = \"\";\r\n\r\n\r\n\r\n    /*   \r\n     * Perform a custom animation of a set of CSS properties.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} properties\r\n     * @param {String} ease\r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     * @param {Number or String} delay\r\n     */\r\n    function animate(elm, properties, duration, ease, callback, delay) {\r\n        var key,\r\n            cssValues = {},\r\n            cssProperties = [],\r\n            transforms = \"\",\r\n            that = this,\r\n            endEvent,\r\n            wrappedCallback,\r\n            fired = false,\r\n            hasScrollTop = false,\r\n            resetClipAuto = false;\r\n\r\n        if (langx.isPlainObject(duration)) {\r\n            ease = duration.easing;\r\n            callback = duration.complete;\r\n            delay = duration.delay;\r\n            duration = duration.duration;\r\n        }\r\n\r\n        if (langx.isString(duration)) {\r\n            duration = fx.speeds[duration];\r\n        }\r\n        if (duration === undefined) {\r\n            duration = fx.speeds.normal;\r\n        }\r\n        duration = duration / 1000;\r\n        if (fx.off) {\r\n            duration = 0;\r\n        }\r\n\r\n        if (langx.isFunction(ease)) {\r\n            callback = ease;\r\n            eace = \"swing\";\r\n        } else {\r\n            ease = ease || \"swing\";\r\n        }\r\n\r\n        if (delay) {\r\n            delay = delay / 1000;\r\n        } else {\r\n            delay = 0;\r\n        }\r\n\r\n        if (langx.isString(properties)) {\r\n            // keyframe animation\r\n            cssValues[animationName] = properties;\r\n            cssValues[animationDuration] = duration + \"s\";\r\n            cssValues[animationTiming] = ease;\r\n            endEvent = animationEnd;\r\n        } else {\r\n            // CSS transitions\r\n            for (key in properties) {\r\n                var v = properties[key];\r\n                if (supportedTransforms.test(key)) {\r\n                    transforms += key + \"(\" + v + \") \";\r\n                } else {\r\n                    if (key === \"scrollTop\") {\r\n                        hasScrollTop = true;\r\n                    }\r\n                    if (key == \"clip\" && langx.isPlainObject(v)) {\r\n                        cssValues[key] = \"rect(\" + v.top+\"px,\"+ v.right +\"px,\"+ v.bottom +\"px,\"+ v.left+\"px)\";\r\n                        if (styler.css(elm,\"clip\") == \"auto\") {\r\n                            var size = geom.size(elm);\r\n                            styler.css(elm,\"clip\",\"rect(\"+\"0px,\"+ size.width +\"px,\"+ size.height +\"px,\"+\"0px)\");  \r\n                            resetClipAuto = true;\r\n                        }\r\n\r\n                    } else {\r\n                        cssValues[key] = v;\r\n                    }\r\n                    cssProperties.push(langx.dasherize(key));\r\n                }\r\n            }\r\n            endEvent = transitionEnd;\r\n        }\r\n\r\n        if (transforms) {\r\n            cssValues[transform] = transforms;\r\n            cssProperties.push(transform);\r\n        }\r\n\r\n        if (duration > 0 && langx.isPlainObject(properties)) {\r\n            cssValues[transitionProperty] = cssProperties.join(\", \");\r\n            cssValues[transitionDuration] = duration + \"s\";\r\n            cssValues[transitionDelay] = delay + \"s\";\r\n            cssValues[transitionTiming] = ease;\r\n        }\r\n\r\n        wrappedCallback = function(event) {\r\n            fired = true;\r\n            if (event) {\r\n                if (event.target !== event.currentTarget) {\r\n                    return // makes sure the event didn't bubble from \"below\"\r\n                }\r\n                eventer.off(event.target, endEvent, wrappedCallback)\r\n            } else {\r\n                eventer.off(elm, animationEnd, wrappedCallback) // triggered by setTimeout\r\n            }\r\n            styler.css(elm, cssReset);\r\n            if (resetClipAuto) {\r\n //               styler.css(elm,\"clip\",\"auto\");\r\n            }\r\n            callback && callback.call(this);\r\n        };\r\n\r\n        if (duration > 0) {\r\n            eventer.on(elm, endEvent, wrappedCallback);\r\n            // transitionEnd is not always firing on older Android phones\r\n            // so make sure it gets fired\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, ((duration + delay) * 1000) + 25)();\r\n        }\r\n\r\n        // trigger page reflow so new elements can animate\r\n        elm.clientLeft;\r\n\r\n        styler.css(elm, cssValues);\r\n\r\n        if (duration <= 0) {\r\n            langx.debounce(function() {\r\n                if (fired) {\r\n                    return;\r\n                }\r\n                wrappedCallback.call(that);\r\n            }, 0)();\r\n        }\r\n\r\n        if (hasScrollTop) {\r\n            scrollToTop(elm, properties[\"scrollTop\"], duration, callback);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function show(elm, speed, callback) {\r\n        styler.show(elm);\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            styler.css(elm, \"opacity\", 0)\r\n            animate(elm, { opacity: 1, scale: \"1,1\" }, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Hide an element.\r\n     * @param {Object} elm  \r\n     * @param {String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function hide(elm, speed, callback) {\r\n        if (speed) {\r\n            if (!callback && langx.isFunction(speed)) {\r\n                callback = speed;\r\n                speed = \"normal\";\r\n            }\r\n            animate(elm, { opacity: 0, scale: \"0,0\" }, speed, function() {\r\n                styler.hide(elm);\r\n                if (callback) {\r\n                    callback.call(elm);\r\n                }\r\n            });\r\n        } else {\r\n            styler.hide(elm);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Set the vertical position of the scroll bar for an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} pos\r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function scrollToTop(elm, pos, speed, callback) {\r\n        var scrollFrom = parseInt(elm.scrollTop),\r\n            i = 0,\r\n            runEvery = 5, // run every 5ms\r\n            freq = speed * 1000 / runEvery,\r\n            scrollTo = parseInt(pos);\r\n\r\n        var interval = setInterval(function() {\r\n            i++;\r\n\r\n            if (i <= freq) elm.scrollTop = (scrollTo - scrollFrom) / freq * i + scrollFrom;\r\n\r\n            if (i >= freq + 1) {\r\n                clearInterval(interval);\r\n                if (callback) langx.debounce(callback, 1000)();\r\n            }\r\n        }, runEvery);\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Function} callback\r\n     */\r\n    function toggle(elm, speed, callback) {\r\n        if (styler.isInvisible(elm)) {\r\n            show(elm, speed, callback);\r\n        } else {\r\n            hide(elm, speed, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Adjust the opacity of an element.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {Number or String} opacity\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeTo(elm, speed, opacity, easing, callback) {\r\n        animate(elm, { opacity: opacity }, speed, easing, callback);\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display an element by fading them to opaque.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeIn(elm, speed, easing, callback) {\r\n        var target = styler.css(elm, \"opacity\");\r\n        if (target > 0) {\r\n            styler.css(elm, \"opacity\", 0);\r\n        } else {\r\n            target = 1;\r\n        }\r\n        styler.show(elm);\r\n\r\n        fadeTo(elm, speed, target, easing, callback);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element by fading them to transparent.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} easing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeOut(elm, speed, easing, callback) {\r\n        var _elm = elm,\r\n            complete,\r\n            opacity = styler.css(elm,\"opacity\"),\r\n            options = {};\r\n\r\n        if (langx.isPlainObject(speed)) {\r\n            options.easing = speed.easing;\r\n            options.duration = speed.duration;\r\n            complete = speed.complete;\r\n        } else {\r\n            options.duration = speed;\r\n            if (callback) {\r\n                complete = callback;\r\n                options.easing = easing;\r\n            } else {\r\n                complete = easing;\r\n            }\r\n        }\r\n        options.complete = function() {\r\n            styler.css(elm,\"opacity\",opacity);\r\n            styler.hide(elm);\r\n            if (complete) {\r\n                complete.call(elm);\r\n            }\r\n        }\r\n\r\n        fadeTo(elm, options, 0);\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display or hide an element by animating its opacity.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} speed\r\n     * @param {String} ceasing\r\n     * @param {Function} callback\r\n     */\r\n    function fadeToggle(elm, speed, ceasing, allback) {\r\n        if (styler.isInvisible(elm)) {\r\n            fadeIn(elm, speed, easing, callback);\r\n        } else {\r\n            fadeOut(elm, speed, easing, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Display an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideDown(elm, duration, callback) {\r\n\r\n        // get the element position to restore it then\r\n        var position = styler.css(elm, 'position');\r\n\r\n        // show element if it is hidden\r\n        show(elm);\r\n\r\n        // place it so it displays as usually but hidden\r\n        styler.css(elm, {\r\n            position: 'absolute',\r\n            visibility: 'hidden'\r\n        });\r\n\r\n        // get naturally height, margin, padding\r\n        var marginTop = styler.css(elm, 'margin-top');\r\n        var marginBottom = styler.css(elm, 'margin-bottom');\r\n        var paddingTop = styler.css(elm, 'padding-top');\r\n        var paddingBottom = styler.css(elm, 'padding-bottom');\r\n        var height = styler.css(elm, 'height');\r\n\r\n        // set initial css for animation\r\n        styler.css(elm, {\r\n            position: position,\r\n            visibility: 'visible',\r\n            overflow: 'hidden',\r\n            height: 0,\r\n            marginTop: 0,\r\n            marginBottom: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        });\r\n\r\n        // animate to gotten height, margin and padding\r\n        animate(elm, {\r\n            height: height,\r\n            marginTop: marginTop,\r\n            marginBottom: marginBottom,\r\n            paddingTop: paddingTop,\r\n            paddingBottom: paddingBottom\r\n        }, {\r\n            duration: duration,\r\n            complete: function() {\r\n                if (callback) {\r\n                    callback.apply(elm);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    /*   \r\n     * Hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideUp(elm, duration, callback) {\r\n        // active the function only if the element is visible\r\n        if (geom.height(elm) > 0) {\r\n\r\n            // get the element position to restore it then\r\n            var position = styler.css(elm, 'position');\r\n\r\n            // get the element height, margin and padding to restore them then\r\n            var height = styler.css(elm, 'height');\r\n            var marginTop = styler.css(elm, 'margin-top');\r\n            var marginBottom = styler.css(elm, 'margin-bottom');\r\n            var paddingTop = styler.css(elm, 'padding-top');\r\n            var paddingBottom = styler.css(elm, 'padding-bottom');\r\n\r\n            // set initial css for animation\r\n            styler.css(elm, {\r\n                visibility: 'visible',\r\n                overflow: 'hidden',\r\n                height: height,\r\n                marginTop: marginTop,\r\n                marginBottom: marginBottom,\r\n                paddingTop: paddingTop,\r\n                paddingBottom: paddingBottom\r\n            });\r\n\r\n            // animate element height, margin and padding to zero\r\n            animate(elm, {\r\n                height: 0,\r\n                marginTop: 0,\r\n                marginBottom: 0,\r\n                paddingTop: 0,\r\n                paddingBottom: 0\r\n            }, {\r\n                // callback : restore the element position, height, margin and padding to original values\r\n                duration: duration,\r\n                queue: false,\r\n                complete: function() {\r\n                    hide(elm);\r\n                    styler.css(elm, {\r\n                        visibility: 'visible',\r\n                        overflow: 'hidden',\r\n                        height: height,\r\n                        marginTop: marginTop,\r\n                        marginBottom: marginBottom,\r\n                        paddingTop: paddingTop,\r\n                        paddingBottom: paddingBottom\r\n                    });\r\n                    if (callback) {\r\n                        callback.apply(elm);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return this;\r\n    }\r\n\r\n\r\n    /*   \r\n     * Display or hide an element with a sliding motion.\r\n     * @param {Object} elm  \r\n     * @param {Number or String} duration\r\n     * @param {Function} callback\r\n     */\r\n    function slideToggle(elm, duration, callback) {\r\n\r\n        // if the element is hidden, slideDown !\r\n        if (geom.height(elm) == 0) {\r\n            slideDown(elm, duration, callback);\r\n        }\r\n        // if the element is visible, slideUp !\r\n        else {\r\n            slideUp(elm, duration, callback);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function emulateTransitionEnd(elm,duration) {\r\n        var called = false;\r\n        eventer.one(elm,'transitionEnd', function () { \r\n            called = true;\r\n        })\r\n        var callback = function () { \r\n            if (!called) {\r\n                eventer.trigger(elm,browser.support.transition.end) \r\n            }\r\n        };\r\n        setTimeout(callback, duration);\r\n        \r\n        return this;\r\n    } \r\n\r\n    function fx() {\r\n        return fx;\r\n    }\r\n\r\n    langx.mixin(fx, {\r\n        off: false,\r\n\r\n        speeds: {\r\n            normal: 400,\r\n            fast: 200,\r\n            slow: 600\r\n        },\r\n\r\n        animate,\r\n        emulateTransitionEnd,\r\n        fadeIn,\r\n        fadeOut,\r\n        fadeTo,\r\n        fadeToggle,\r\n        hide,\r\n        scrollToTop,\r\n\r\n        slideDown,\r\n        slideToggle,\r\n        slideUp,\r\n        show,\r\n        toggle\r\n    });\r\n\r\n    return skylark.attach(\"domx.fx\", fx);\r\n});\ndefine('skylark-domx-fx/main',[\r\n\t\"./fx\"\r\n],function(fx){\r\n\treturn fx;\r\n});\ndefine('skylark-domx-fx', ['skylark-domx-fx/main'], function (main) { return main; });\n\ndefine('skylark-domx-scripter/scripter',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-finder\"\r\n], function(skylark, langx, noder, finder) {\r\n\r\n    var head = document.getElementsByTagName('head')[0],\r\n        scriptsByUrl = {},\r\n        scriptElementsById = {},\r\n        count = 0;\r\n\r\n    var rscriptType = ( /^$|^module$|\\/(?:java|ecma)script/i );\r\n\r\n    function scripter() {\r\n        return scripter;\r\n    }\r\n\r\n\r\n    var preservedScriptAttributes = {\r\n        type: true,\r\n        src: true,\r\n        nonce: true,\r\n        noModule: true\r\n    };\r\n\r\n    function evaluate(code,node, doc ) {\r\n        doc = doc || document;\r\n\r\n        var i, val,\r\n            script = doc.createElement(\"script\");\r\n\r\n        script.text = code;\r\n        if ( node ) {\r\n            for ( i in preservedScriptAttributes ) {\r\n\r\n                // Support: Firefox 64+, Edge 18+\r\n                // Some browsers don't support the \"nonce\" property on scripts.\r\n                // On the other hand, just using `getAttribute` is not enough as\r\n                // the `nonce` attribute is reset to an empty string whenever it\r\n                // becomes browsing-context connected.\r\n                // See https://github.com/whatwg/html/issues/2369\r\n                // See https://html.spec.whatwg.org/#nonce-attributes\r\n                // The `node.getAttribute` check was added for the sake of\r\n                // `jQuery.globalEval` so that it can fake a nonce-containing node\r\n                // via an object.\r\n                val = node[ i ] || node.getAttribute && node.getAttribute( i );\r\n                if ( val ) {\r\n                    script.setAttribute( i, val );\r\n                }\r\n            }\r\n        }\r\n        doc.head.appendChild( script ).parentNode.removeChild( script );\r\n\r\n        return this;\r\n    }\r\n\r\n    langx.mixin(scripter, {\r\n        /*\r\n         * Load a script from a url into the document.\r\n         * @param {} url\r\n         * @param {} loadedCallback\r\n         * @param {} errorCallback\r\n         */\r\n        loadJavaScript: function(url, loadedCallback, errorCallback) {\r\n            var script = scriptsByUrl[url];\r\n            if (!script) {\r\n                script = scriptsByUrl[url] = {\r\n                    state: 0, //0:unload,1:loaded,-1:loaderror\r\n                    loadedCallbacks: [],\r\n                    errorCallbacks: []\r\n                }\r\n            }\r\n\r\n            script.loadedCallbacks.push(loadedCallback);\r\n            script.errorCallbacks.push(errorCallback);\r\n\r\n            if (script.state === 1) {\r\n                script.node.onload();\r\n            } else if (script.state === -1) {\r\n                script.node.onerror();\r\n            } else {\r\n                var node = script.node = document.createElement(\"script\"),\r\n                    id = script.id = (count++);\r\n\r\n                node.type = \"text/javascript\";\r\n                node.async = false;\r\n                node.defer = false;\r\n                startTime = new Date().getTime();\r\n                head.appendChild(node);\r\n\r\n                node.onload = function() {\r\n                        script.state = 1;\r\n\r\n                        var callbacks = script.loadedCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    },\r\n                    node.onerror = function() {\r\n                        script.state = -1;\r\n                        var callbacks = script.errorCallbacks,\r\n                            i = callbacks.length;\r\n\r\n                        while (i--) {\r\n                            callbacks[i]();\r\n                        }\r\n                        script.loadedCallbacks = [];\r\n                        script.errorCallbacks = [];\r\n                    };\r\n                node.src = url;\r\n\r\n                scriptElementsById[id] = node;\r\n            }\r\n            return script.id;\r\n        },\r\n        /*\r\n         * Remove the specified script from the document.\r\n         * @param {Number} id\r\n         */\r\n        deleteJavaScript: function(id) {\r\n            var node = scriptElementsById[id];\r\n            if (node) {\r\n                var url = node.src;\r\n                noder.remove(node);\r\n                delete scriptElementsById[id];\r\n                delete scriptsByUrl[url];\r\n            }\r\n        },\r\n\r\n        evaluate : evaluate,\r\n\r\n        html : function(node,value) {\r\n\r\n            var result = noder.html(node,value);\r\n\r\n            if (value !== undefined) {\r\n                var scripts = node.querySelectorAll('script');\r\n\r\n                for (var i =0; i<scripts.length; i++) {\r\n                    var node1 = scripts[i];\r\n                    if (rscriptType.test( node1.type || \"\" ) ) {\r\n                      evaluate(node1.textContent,node1);\r\n                    }\r\n                }       \r\n                return this;         \r\n            } else {\r\n                return result;\r\n            }\r\n\r\n\r\n\r\n        }\r\n    });\r\n\r\n    return skylark.attach(\"domx.scripter\", scripter);\r\n});\ndefine('skylark-domx-scripter/main',[\r\n\t\"./scripter\"\r\n],function(scripter){\r\n\treturn scripter;\r\n});\ndefine('skylark-domx-scripter', ['skylark-domx-scripter/main'], function (main) { return main; });\n\ndefine('skylark-domx-query/query',[\r\n    \"skylark-langx/skylark\",\r\n    \"skylark-langx/langx\",\r\n    \"skylark-domx-noder\",\r\n    \"skylark-domx-data\",\r\n    \"skylark-domx-eventer\",\r\n    \"skylark-domx-finder\",\r\n    \"skylark-domx-geom\",\r\n    \"skylark-domx-styler\",\r\n    \"skylark-domx-fx\",\r\n    \"skylark-domx-scripter\"\r\n], function(skylark, langx, noder, datax, eventer, finder, geom, styler, fx,scripter) {\r\n    var some = Array.prototype.some,\r\n        push = Array.prototype.push,\r\n        every = Array.prototype.every,\r\n        concat = Array.prototype.concat,\r\n        slice = Array.prototype.slice,\r\n        map = Array.prototype.map,\r\n        filter = Array.prototype.filter,\r\n        forEach = Array.prototype.forEach,\r\n        indexOf = Array.prototype.indexOf,\r\n        sort = Array.prototype.sort,\r\n        isQ;\r\n\r\n    var rquickExpr = /^(?:[^#<]*(<[\\w\\W]+>)[^>]*$|#([\\w\\-]*)$)/;\r\n\r\n    var funcArg = langx.funcArg,\r\n        isArrayLike = langx.isArrayLike,\r\n        isString = langx.isString,\r\n        uniq = langx.uniq,\r\n        isFunction = langx.isFunction;\r\n\r\n    var type = langx.type,\r\n        isArray = langx.isArray,\r\n\r\n        isWindow = langx.isWindow,\r\n\r\n        isDocument = langx.isDocument,\r\n\r\n        isObject = langx.isObject,\r\n\r\n        isPlainObject = langx.isPlainObject,\r\n\r\n        compact = langx.compact,\r\n\r\n        flatten = langx.flatten,\r\n\r\n        camelCase = langx.camelCase,\r\n\r\n        dasherize = langx.dasherize,\r\n        children = finder.children;\r\n\r\n    function wrapper_map(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = langx.map(self, function(elem, idx) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n            return query(uniq(result));\r\n        }\r\n    }\r\n\r\n    function wrapper_selector(func, context, last) {\r\n        return function(selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) {\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem] : [elem, selector]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    function wrapper_selector_until(func, context, last) {\r\n        return function(util, selector) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            //if (selector === undefined) { //TODO : needs confirm?\r\n            //    selector = util;\r\n            //    util = undefined;\r\n            //}\r\n            var result = this.map(function(idx, elem) {\r\n                // if (elem.nodeType == 1) { // TODO\r\n                //if (elem.querySelector) {\r\n                    return func.apply(context, last ? [elem, util] : [elem, selector, util]);\r\n                //}\r\n            });\r\n            if (last && selector) {\r\n                return result.filter(selector);\r\n            } else {\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function wrapper_every_act(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            this.each(function(idx,node) {\r\n                func.apply(context, [this].concat(params));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_every_act_firstArgFunc(func, context, oldValueFunc) {\r\n        return function(arg1) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            forEach.call(self, function(elem, idx) {\r\n                var newArg1 = funcArg(elem, arg1, idx, oldValueFunc(elem));\r\n                func.apply(context, [elem, arg1].concat(params.slice(1)));\r\n            });\r\n            return self;\r\n        }\r\n    }\r\n\r\n    function wrapper_some_chk(func, context) {\r\n        return function() {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n            return some.call(self, function(elem) {\r\n                return func.apply(context, [elem].concat(params));\r\n            });\r\n        }\r\n    }\r\n\r\n    function wrapper_name_value(func, context, oldValueFunc) {\r\n        return function(name, value) {\r\n            var self = this,\r\n                params = slice.call(arguments);\r\n\r\n            if (langx.isPlainObject(name) || langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem, name));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem].concat(params));\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0], name]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    function wrapper_value(func, context, oldValueFunc) {\r\n        return function(value) {\r\n            var self = this;\r\n\r\n            if (langx.isDefined(value)) {\r\n                forEach.call(self, function(elem, idx) {\r\n                    var newValue;\r\n                    if (oldValueFunc) {\r\n                        newValue = funcArg(elem, value, idx, oldValueFunc(elem));\r\n                    } else {\r\n                        newValue = value\r\n                    }\r\n                    func.apply(context, [elem, newValue]);\r\n                });\r\n                return self;\r\n            } else {\r\n                if (self[0]) {\r\n                    return func.apply(context, [self[0]]);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    var NodeList = langx.klass({\r\n        klassName: \"SkNodeList\",\r\n        init: function(selector, context) {\r\n            var self = this,\r\n                match, nodes, node, props;\r\n\r\n            if (selector) {\r\n                self.context = context = context || noder.doc();\r\n\r\n                if (isString(selector)) {\r\n                    // a html string or a css selector is expected\r\n                    self.selector = selector;\r\n\r\n                    if (selector.charAt(0) === \"<\" && selector.charAt(selector.length - 1) === \">\" && selector.length >= 3) {\r\n                        match = [null, selector, null];\r\n                    } else {\r\n                        match = rquickExpr.exec(selector);\r\n                    }\r\n\r\n                    if (match) {\r\n                        if (match[1]) {\r\n                            // if selector is html\r\n                            nodes = noder.createFragment(selector);\r\n\r\n                            if (langx.isPlainObject(context)) {\r\n                                props = context;\r\n                            }\r\n\r\n                        } else {\r\n                            node = finder.byId(match[2], noder.ownerDoc(context));\r\n\r\n                            if (node) {\r\n                                // if selector is id\r\n                                nodes = [node];\r\n                            }\r\n\r\n                        }\r\n                    } else {\r\n                        // if selector is css selector\r\n                        if (langx.isString(context)) {\r\n                            context = finder.find(context);\r\n                        }\r\n\r\n                        nodes = finder.descendants(context, selector);\r\n                    }\r\n                } else {\r\n                    if (selector !== window && isArrayLike(selector)) {\r\n                        // a dom node array is expected\r\n                        nodes = selector;\r\n                    } else {\r\n                        // a dom node is expected\r\n                        nodes = [selector];\r\n                    }\r\n                    //self.add(selector, false);\r\n                }\r\n            }\r\n\r\n\r\n            if (nodes) {\r\n\r\n                push.apply(self, nodes);\r\n\r\n                if (props) {\r\n                    for ( var name  in props ) {\r\n                        // Properties of context are called as methods if possible\r\n                        if ( langx.isFunction( this[ name ] ) ) {\r\n                            this[ name ]( props[ name ] );\r\n                        } else {\r\n                            this.attr( name, props[ name ] );\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            return self;\r\n        }\r\n    });\r\n\r\n    var query = (function() {\r\n        isQ = function(object) {\r\n            return object instanceof NodeList;\r\n        }\r\n        init = function(selector, context) {\r\n            return new NodeList(selector, context);\r\n        }\r\n\r\n        var $ = function(selector, context) {\r\n            if (isFunction(selector)) {\r\n                eventer.ready(function() {\r\n                    selector($);\r\n                });\r\n            } else if (isQ(selector)) {\r\n                return selector;\r\n            } else {\r\n                if (context && isQ(context) && isString(selector)) {\r\n                    return context.find(selector);\r\n                }\r\n                return init(selector, context);\r\n            }\r\n        };\r\n\r\n        $.fn = NodeList.prototype;\r\n        langx.mixin($.fn, {\r\n            // `map` and `slice` in the jQuery API work differently\r\n            // from their array counterparts\r\n            length : 0,\r\n\r\n            map: function(fn) {\r\n                return $(uniq(langx.map(this, function(el, i) {\r\n                    return fn.call(el, i, el)\r\n                })));\r\n            },\r\n\r\n            slice: function() {\r\n                return $(slice.apply(this, arguments))\r\n            },\r\n\r\n            forEach: function() {\r\n                return forEach.apply(this,arguments);\r\n            },\r\n\r\n            get: function(idx) {\r\n                return idx === undefined ? slice.call(this) : this[idx >= 0 ? idx : idx + this.length]\r\n            },\r\n\r\n            indexOf: function() {\r\n                return indexOf.apply(this,arguments);\r\n            },\r\n\r\n            sort : function() {\r\n                return sort.apply(this,arguments);\r\n            },\r\n\r\n            toArray: function() {\r\n                return slice.call(this);\r\n            },\r\n\r\n            size: function() {\r\n                return this.length\r\n            },\r\n\r\n            //remove: wrapper_every_act(noder.remove, noder),\r\n            remove : function(selector) {\r\n                if (selector) {\r\n                    return this.find(selector).remove();\r\n                }\r\n                this.each(function(i,node){\r\n                    noder.remove(node);\r\n                });\r\n                return this;\r\n            },\r\n\r\n            each: function(callback) {\r\n                langx.each(this, callback);\r\n                return this;\r\n            },\r\n\r\n            filter: function(selector) {\r\n                if (isFunction(selector)) return this.not(this.not(selector))\r\n                return $(filter.call(this, function(element) {\r\n                    return finder.matches(element, selector)\r\n                }))\r\n            },\r\n\r\n            add: function(selector, context) {\r\n                return $(uniq(this.toArray().concat($(selector, context).toArray())));\r\n            },\r\n\r\n            is: function(selector) {\r\n                if (this.length > 0) {\r\n                    var self = this;\r\n                    if (langx.isString(selector)) {\r\n                        return some.call(self,function(elem) {\r\n                            return finder.matches(elem, selector);\r\n                        });\r\n                    } else if (langx.isArrayLike(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return langx.inArray(elem, selector) > -1;\r\n                        });\r\n                    } else if (langx.isHtmlNode(selector)) {\r\n                       return some.call(self,function(elem) {\r\n                            return elem ==  selector;\r\n                        });\r\n                    }\r\n                }\r\n                return false;\r\n            },\r\n            \r\n            not: function(selector) {\r\n                var nodes = []\r\n                if (isFunction(selector) && selector.call !== undefined)\r\n                    this.each(function(idx,node) {\r\n                        if (!selector.call(this, idx,node)) nodes.push(this)\r\n                    })\r\n                else {\r\n                    var excludes = typeof selector == 'string' ? this.filter(selector) :\r\n                        (isArrayLike(selector) && isFunction(selector.item)) ? slice.call(selector) : $(selector)\r\n                    this.forEach(function(el) {\r\n                        if (excludes.indexOf(el) < 0) nodes.push(el)\r\n                    })\r\n                }\r\n                return $(nodes)\r\n            },\r\n\r\n            has: function(selector) {\r\n                return this.filter(function() {\r\n                    return isObject(selector) ?\r\n                        noder.contains(this, selector) :\r\n                        $(this).find(selector).size()\r\n                })\r\n            },\r\n\r\n            eq: function(idx) {\r\n                return idx === -1 ? this.slice(idx) : this.slice(idx, +idx + 1);\r\n            },\r\n\r\n            first: function() {\r\n                return this.eq(0);\r\n            },\r\n\r\n            last: function() {\r\n                return this.eq(-1);\r\n            },\r\n\r\n            find: wrapper_selector(finder.descendants, finder),\r\n\r\n            closest: wrapper_selector(finder.closest, finder),\r\n            /*\r\n                        closest: function(selector, context) {\r\n                            var node = this[0],\r\n                                collection = false\r\n                            if (typeof selector == 'object') collection = $(selector)\r\n                            while (node && !(collection ? collection.indexOf(node) >= 0 : finder.matches(node, selector)))\r\n                                node = node !== context && !isDocument(node) && node.parentNode\r\n                            return $(node)\r\n                        },\r\n            */\r\n\r\n\r\n            parents: wrapper_selector(finder.ancestors, finder),\r\n\r\n            parentsUntil: wrapper_selector_until(finder.ancestors, finder),\r\n\r\n\r\n            parent: wrapper_selector(finder.parent, finder),\r\n\r\n            children: wrapper_selector(finder.children, finder),\r\n\r\n            contents: wrapper_map(noder.contents, noder),\r\n\r\n            empty: wrapper_every_act(noder.empty, noder),\r\n\r\n            // `pluck` is borrowed from Prototype.js\r\n            pluck: function(property) {\r\n                return langx.map(this, function(el) {\r\n                    return el[property]\r\n                })\r\n            },\r\n\r\n            pushStack : function(elms) {\r\n                var ret = $(elms);\r\n                ret.prevObject = this;\r\n                return ret;\r\n            },\r\n            \r\n            replaceWith: function(newContent) {\r\n                return this.before(newContent).remove();\r\n            },\r\n\r\n            wrap: function(structure) {\r\n                var func = isFunction(structure)\r\n                if (this[0] && !func)\r\n                    var dom = $(structure).get(0),\r\n                        clone = dom.parentNode || this.length > 1\r\n\r\n                return this.each(function(index,node) {\r\n                    $(this).wrapAll(\r\n                        func ? structure.call(this, index,node) :\r\n                        clone ? dom.cloneNode(true) : dom\r\n                    )\r\n                })\r\n            },\r\n\r\n            wrapAll: function(wrappingElement) {\r\n                if (this[0]) {\r\n                    $(this[0]).before(wrappingElement = $(wrappingElement));\r\n                    var children;\r\n                    // drill down to the inmost element\r\n                    while ((children = wrappingElement.children()).length) {\r\n                        wrappingElement = children.first();\r\n                    }\r\n                    $(wrappingElement).append(this);\r\n                }\r\n                return this\r\n            },\r\n\r\n            wrapInner: function(wrappingElement) {\r\n                var func = isFunction(wrappingElement)\r\n                return this.each(function(index,node) {\r\n                    var self = $(this),\r\n                        contents = self.contents(),\r\n                        dom = func ? wrappingElement.call(this, index,node) : wrappingElement\r\n                    contents.length ? contents.wrapAll(dom) : self.append(dom)\r\n                })\r\n            },\r\n\r\n            unwrap: function(selector) {\r\n                if (this.parent().children().length === 0) {\r\n                    // remove dom without text\r\n                    this.parent(selector).not(\"body\").each(function() {\r\n                        $(this).replaceWith(document.createTextNode(this.childNodes[0].textContent));\r\n                    });\r\n                } else {\r\n                    this.parent().each(function() {\r\n                        $(this).replaceWith($(this).children())\r\n                    });\r\n                }\r\n                return this\r\n            },\r\n\r\n            clone: function() {\r\n                return this.map(function() {\r\n                    return this.cloneNode(true)\r\n                })\r\n            },\r\n\r\n            hide: wrapper_every_act(fx.hide, fx),\r\n\r\n            toggle: function(setting) {\r\n                return this.each(function() {\r\n                    var el = $(this);\r\n                    (setting === undefined ? el.css(\"display\") == \"none\" : setting) ? el.show(): el.hide()\r\n                })\r\n            },\r\n\r\n            prev: function(selector) {\r\n                return $(this.pluck('previousElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            prevAll: wrapper_selector(finder.previousSiblings, finder),\r\n\r\n            next: function(selector) {\r\n                return $(this.pluck('nextElementSibling')).filter(selector || '*')\r\n            },\r\n\r\n            nextAll: wrapper_selector(finder.nextSiblings, finder),\r\n\r\n            siblings: wrapper_selector(finder.siblings, finder),\r\n\r\n            html: wrapper_value(scripter.html, scripter, scripter.html),\r\n\r\n            text: wrapper_value(datax.text, datax, datax.text),\r\n\r\n            attr: wrapper_name_value(datax.attr, datax, datax.attr),\r\n\r\n            removeAttr: wrapper_every_act(datax.removeAttr, datax),\r\n\r\n            prop: wrapper_name_value(datax.prop, datax, datax.prop),\r\n\r\n            removeProp: wrapper_every_act(datax.removeProp, datax),\r\n\r\n            data: wrapper_name_value(datax.data, datax, datax.data),\r\n\r\n            removeData: wrapper_every_act(datax.removeData, datax),\r\n\r\n            val: wrapper_value(datax.val, datax, datax.val),\r\n\r\n            offset: wrapper_value(geom.pagePosition, geom, geom.pagePosition),\r\n\r\n            style: wrapper_name_value(styler.css, styler),\r\n\r\n            css: wrapper_name_value(styler.css, styler),\r\n\r\n            index: function(elem) {\r\n                if (elem) {\r\n                    return this.indexOf($(elem)[0]);\r\n                } else {\r\n                    return this.parent().children().indexOf(this[0]);\r\n                }\r\n            },\r\n\r\n            //hasClass(name)\r\n            hasClass: wrapper_some_chk(styler.hasClass, styler),\r\n\r\n            //addClass(name)\r\n            addClass: wrapper_every_act_firstArgFunc(styler.addClass, styler, styler.className),\r\n\r\n            //removeClass(name)\r\n            removeClass: wrapper_every_act_firstArgFunc(styler.removeClass, styler, styler.className),\r\n\r\n            //toogleClass(name,when)\r\n            toggleClass: wrapper_every_act_firstArgFunc(styler.toggleClass, styler, styler.className),\r\n\r\n            scrollTop: wrapper_value(geom.scrollTop, geom),\r\n\r\n            scrollLeft: wrapper_value(geom.scrollLeft, geom),\r\n\r\n            position: function(options) {\r\n                if (!this.length) return\r\n\r\n                if (options) {\r\n                    if (options.of && options.of.length) {\r\n                        options = langx.clone(options);\r\n                        options.of = options.of[0];\r\n                    }\r\n                    return this.each( function() {\r\n                        geom.posit(this,options);\r\n                    });\r\n                } else {\r\n                    var elem = this[0];\r\n\r\n                    return geom.relativePosition(elem);\r\n\r\n                }             \r\n            },\r\n\r\n            offsetParent: wrapper_map(geom.offsetParent, geom)\r\n        });\r\n\r\n        // for now\r\n        $.fn.detach = $.fn.remove;\r\n\r\n        $.fn.hover = function(fnOver, fnOut) {\r\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\r\n        };\r\n\r\n        $.fn.size = wrapper_value(geom.size, geom);\r\n\r\n        $.fn.width = wrapper_value(geom.width, geom, geom.width);\r\n\r\n        $.fn.height = wrapper_value(geom.height, geom, geom.height);\r\n\r\n        $.fn.clientSize = wrapper_value(geom.clientSize, geom.clientSize);\r\n\r\n        ['width', 'height'].forEach(function(dimension) {\r\n            var offset, Dimension = dimension.replace(/./, function(m) {\r\n                return m[0].toUpperCase()\r\n            });\r\n\r\n            $.fn['outer' + Dimension] = function(margin, value) {\r\n                if (arguments.length) {\r\n                    if (typeof margin !== 'boolean') {\r\n                        value = margin;\r\n                        margin = false;\r\n                    }\r\n                } else {\r\n                    margin = false;\r\n                    value = undefined;\r\n                }\r\n\r\n                if (value === undefined) {\r\n                    var el = this[0];\r\n                    if (!el) {\r\n                        return undefined;\r\n                    }\r\n                    var cb = geom.size(el);\r\n                    if (margin) {\r\n                        var me = geom.marginExtents(el);\r\n                        cb.width = cb.width + me.left + me.right;\r\n                        cb.height = cb.height + me.top + me.bottom;\r\n                    }\r\n                    return dimension === \"width\" ? cb.width : cb.height;\r\n                } else {\r\n                    return this.each(function(idx, el) {\r\n                        var mb = {};\r\n                        var me = geom.marginExtents(el);\r\n                        if (dimension === \"width\") {\r\n                            mb.width = value;\r\n                            if (margin) {\r\n                                mb.width = mb.width - me.left - me.right\r\n                            }\r\n                        } else {\r\n                            mb.height = value;\r\n                            if (margin) {\r\n                                mb.height = mb.height - me.top - me.bottom;\r\n                            }\r\n                        }\r\n                        geom.size(el, mb);\r\n                    })\r\n\r\n                }\r\n            };\r\n        })\r\n\r\n        $.fn.innerWidth = wrapper_value(geom.clientWidth, geom, geom.clientWidth);\r\n\r\n        $.fn.innerHeight = wrapper_value(geom.clientHeight, geom, geom.clientHeight);\r\n\r\n        var traverseNode = noder.traverse;\r\n\r\n        function wrapper_node_operation(func, context, oldValueFunc) {\r\n            return function(html) {\r\n                var argType, nodes = langx.map(arguments, function(arg) {\r\n                    argType = type(arg)\r\n                    return argType == \"function\" || argType == \"object\" || argType == \"array\" || arg == null ?\r\n                        arg : noder.createFragment(arg)\r\n                });\r\n                if (nodes.length < 1) {\r\n                    return this\r\n                }\r\n                this.each(function(idx) {\r\n                    func.apply(context, [this, nodes, idx > 0]);\r\n                });\r\n                return this;\r\n            }\r\n        }\r\n\r\n\r\n        $.fn.after = wrapper_node_operation(noder.after, noder);\r\n\r\n        $.fn.prepend = wrapper_node_operation(noder.prepend, noder);\r\n\r\n        $.fn.before = wrapper_node_operation(noder.before, noder);\r\n\r\n        $.fn.append = wrapper_node_operation(noder.append, noder);\r\n\r\n\r\n        langx.each( {\r\n            appendTo: \"append\",\r\n            prependTo: \"prepend\",\r\n            insertBefore: \"before\",\r\n            insertAfter: \"after\",\r\n            replaceAll: \"replaceWith\"\r\n        }, function( name, original ) {\r\n            $.fn[ name ] = function( selector ) {\r\n                var elems,\r\n                    ret = [],\r\n                    insert = $( selector ),\r\n                    last = insert.length - 1,\r\n                    i = 0;\r\n\r\n                for ( ; i <= last; i++ ) {\r\n                    elems = i === last ? this : this.clone( true );\r\n                    $( insert[ i ] )[ original ]( elems );\r\n\r\n                    // Support: Android <=4.0 only, PhantomJS 1 only\r\n                    // .get() because push.apply(_, arraylike) throws on ancient WebKit\r\n                    push.apply( ret, elems.get() );\r\n                }\r\n\r\n                return this.pushStack( ret );\r\n            };\r\n        } );\r\n\r\n/*\r\n        $.fn.insertAfter = function(html) {\r\n            $(html).after(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.insertBefore = function(html) {\r\n            $(html).before(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.appendTo = function(html) {\r\n            $(html).append(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.prependTo = function(html) {\r\n            $(html).prepend(this);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceAll = function(selector) {\r\n            $(selector).replaceWith(this);\r\n            return this;\r\n        };\r\n*/\r\n        return $;\r\n    })();\r\n\r\n    (function($) {\r\n        $.fn.on = wrapper_every_act(eventer.on, eventer);\r\n\r\n        $.fn.off = wrapper_every_act(eventer.off, eventer);\r\n\r\n        $.fn.trigger = wrapper_every_act(eventer.trigger, eventer);\r\n\r\n        ('focusin focusout focus blur load resize scroll unload click dblclick ' +\r\n            'mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave ' +\r\n            'change select keydown keypress keyup error transitionEnd').split(' ').forEach(function(event) {\r\n            $.fn[event] = function(data, callback) {\r\n                return (0 in arguments) ?\r\n                    this.on(event, data, callback) :\r\n                    this.trigger(event)\r\n            }\r\n        });\r\n\r\n        $.fn.one = function(event, selector, data, callback) {\r\n            if (!langx.isString(selector) && !langx.isFunction(callback)) {\r\n                callback = data;\r\n                data = selector;\r\n                selector = null;\r\n            }\r\n\r\n            if (langx.isFunction(data)) {\r\n                callback = data;\r\n                data = null;\r\n            }\r\n\r\n            return this.on(event, selector, data, callback, 1)\r\n        };\r\n\r\n        $.fn.animate = wrapper_every_act(fx.animate, fx);\r\n        $.fn.emulateTransitionEnd = wrapper_every_act(fx.emulateTransitionEnd, fx);\r\n\r\n        $.fn.show = wrapper_every_act(fx.show, fx);\r\n        $.fn.hide = wrapper_every_act(fx.hide, fx);\r\n        $.fn.toogle = wrapper_every_act(fx.toogle, fx);\r\n        $.fn.fadeTo = wrapper_every_act(fx.fadeTo, fx);\r\n        $.fn.fadeIn = wrapper_every_act(fx.fadeIn, fx);\r\n        $.fn.fadeOut = wrapper_every_act(fx.fadeOut, fx);\r\n        $.fn.fadeToggle = wrapper_every_act(fx.fadeToggle, fx);\r\n\r\n        $.fn.slideDown = wrapper_every_act(fx.slideDown, fx);\r\n        $.fn.slideToggle = wrapper_every_act(fx.slideToggle, fx);\r\n        $.fn.slideUp = wrapper_every_act(fx.slideUp, fx);\r\n\r\n        $.fn.scrollParent = function( includeHidden ) {\r\n            var position = this.css( \"position\" ),\r\n                excludeStaticParent = position === \"absolute\",\r\n                overflowRegex = includeHidden ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\r\n                scrollParent = this.parents().filter( function() {\r\n                    var parent = $( this );\r\n                    if ( excludeStaticParent && parent.css( \"position\" ) === \"static\" ) {\r\n                        return false;\r\n                    }\r\n                    return overflowRegex.test( parent.css( \"overflow\" ) + parent.css( \"overflow-y\" ) +\r\n                        parent.css( \"overflow-x\" ) );\r\n                } ).eq( 0 );\r\n\r\n            return position === \"fixed\" || !scrollParent.length ?\r\n                $( this[ 0 ].ownerDocument || document ) :\r\n                scrollParent;\r\n        };\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.end = function() {\r\n            return this.prevObject || $()\r\n        }\r\n\r\n        $.fn.andSelf = function() {\r\n            return this.add(this.prevObject || $())\r\n        }\r\n\r\n        $.fn.addBack = function(selector) {\r\n            if (this.prevObject) {\r\n                if (selector) {\r\n                    return this.add(this.prevObject.filter(selector));\r\n                } else {\r\n                    return this.add(this.prevObject);\r\n                }\r\n            } else {\r\n                return this;\r\n            }\r\n        }\r\n\r\n        'filter,add,not,eq,first,last,find,closest,parents,parent,children,siblings,prev,prevAll,next,nextAll'.split(',').forEach(function(property) {\r\n            var fn = $.fn[property]\r\n            $.fn[property] = function() {\r\n                var ret = fn.apply(this, arguments)\r\n                ret.prevObject = this\r\n                return ret\r\n            }\r\n        })\r\n    })(query);\r\n\r\n\r\n    (function($) {\r\n        $.fn.query = $.fn.find;\r\n\r\n        $.fn.place = function(refNode, position) {\r\n            // summary:\r\n            //      places elements of this node list relative to the first element matched\r\n            //      by queryOrNode. Returns the original NodeList. See: `dojo/dom-construct.place`\r\n            // queryOrNode:\r\n            //      may be a string representing any valid CSS3 selector or a DOM node.\r\n            //      In the selector case, only the first matching element will be used\r\n            //      for relative positioning.\r\n            // position:\r\n            //      can be one of:\r\n            //\r\n            //      -   \"last\" (default)\r\n            //      -   \"first\"\r\n            //      -   \"before\"\r\n            //      -   \"after\"\r\n            //      -   \"only\"\r\n            //      -   \"replace\"\r\n            //\r\n            //      or an offset in the childNodes\r\n            if (langx.isString(refNode)) {\r\n                refNode = finder.descendant(refNode);\r\n            } else if (isQ(refNode)) {\r\n                refNode = refNode[0];\r\n            }\r\n            return this.each(function(i, node) {\r\n                switch (position) {\r\n                    case \"before\":\r\n                        noder.before(refNode, node);\r\n                        break;\r\n                    case \"after\":\r\n                        noder.after(refNode, node);\r\n                        break;\r\n                    case \"replace\":\r\n                        noder.replace(refNode, node);\r\n                        break;\r\n                    case \"only\":\r\n                        noder.empty(refNode);\r\n                        noder.append(refNode, node);\r\n                        break;\r\n                    case \"first\":\r\n                        noder.prepend(refNode, node);\r\n                        break;\r\n                        // else fallthrough...\r\n                    default: // aka: last\r\n                        noder.append(refNode, node);\r\n                }\r\n            });\r\n        };\r\n\r\n        $.fn.addContent = function(content, position) {\r\n            if (content.template) {\r\n                content = langx.substitute(content.template, content);\r\n            }\r\n            return this.append(content);\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.replaceClass = function(newClass, oldClass) {\r\n            this.removeClass(oldClass);\r\n            this.addClass(newClass);\r\n            return this;\r\n        };\r\n\r\n        $.fn.disableSelection = ( function() {\r\n            var eventType = \"onselectstart\" in document.createElement( \"div\" ) ?\r\n                \"selectstart\" :\r\n                \"mousedown\";\r\n\r\n            return function() {\r\n                return this.on( eventType + \".ui-disableSelection\", function( event ) {\r\n                    event.preventDefault();\r\n                } );\r\n            };\r\n        } )();\r\n\r\n        $.fn.enableSelection = function() {\r\n            return this.off( \".ui-disableSelection\" );\r\n        };\r\n\r\n        $.fn.reflow = function() {\r\n            return noder.flow(this[0]);\r\n        };\r\n\r\n        $.fn.isBlockNode = function() {\r\n            return noder.isBlockNode(this[0]);\r\n        };\r\n       \r\n\r\n    })(query);\r\n\r\n    query.fn.plugin = function(name,options) {\r\n        var args = slice.call( arguments, 1 ),\r\n            self = this,\r\n            returnValue = this;\r\n\r\n        this.each(function(){\r\n            returnValue = plugins.instantiate.apply(self,[this,name].concat(args));\r\n        });\r\n        return returnValue;\r\n    };\r\n\r\n    return skylark.attach(\"domx.query\", query);\r\n\r\n});\ndefine('skylark-domx-query/main',[\r\n\t\"./query\"\r\n],function(query){\r\n\treturn query;\r\n});\ndefine('skylark-domx-query', ['skylark-domx-query/main'], function (main) { return main; });\n\ndefine('skylark-utils-dom/query',[\r\n    \"./dom\",\r\n    \"skylark-domx-query\"\r\n], function(dom, query) {\r\n\r\n    return dom.query = query;\r\n\r\n});\ndefine('skylark-widgets-hierarchy/Hierarchy',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\t\"use strict\";\r\n\r\n\tvar jstree = skylark.jstree =  skylark.jstree || {};\r\n\r\n\t$.ajax = $.ajax || function(options) {\r\n        return langx.Xhr.request(options.url,options);\r\n    };\r\n\r\n    $.camelCase = langx.camelCase;\r\n\r\n    $.each = langx.each;\r\n\r\n    $.extend = function(target) {\r\n        var deep, args = Array.prototype.slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n        \tlangx.mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    };\r\n\r\n    $.grep = function(elements, callback) {\r\n        return filter.call(elements, callback)\r\n    };\r\n\r\n    $.isArray = langx.isArray;\r\n    $.isEmptyObject = langx.isEmptyObject;\r\n    $.isFunction = langx.isFunction;\r\n    $.isWindow = langx.isWindow;\r\n    $.isPlainObject = langx.isPlainObject;\r\n\r\n    $.inArray = langx.inArray;\r\n\r\n    $.makeArray = langx.makeArray;\r\n    $.map = langx.map;\r\n\r\n    $.noop = function() {\r\n    };\r\n\r\n    $.parseJSON = window.JSON.parse;\r\n\r\n    $.proxy = langx.proxy;\r\n\r\n    $.trim = langx.trim;\r\n    $.type = langx.type;\r\n\r\n    $.fn.stop = function() {\r\n    \treturn this;\r\n    }\r\n\r\n\r\n\t/*!\r\n\t * jsTree {{VERSION}}\r\n\t * http://jstree.com/\r\n\t *\r\n\t * Copyright (c) 2014 Ivan Bozhanov (http://vakata.com)\r\n\t *\r\n\t * Licensed same as jquery - under the terms of the MIT License\r\n\t *   http://www.opensource.org/licenses/mit-license.php\r\n\t */\r\n\r\n\t// prevent another load? maybe there is a better way?\r\n\tif($.jstree) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * ### jsTree core functionality\r\n\t */\r\n\r\n\t// internal variables\r\n\tvar instance_counter = 0,\r\n\t\tccp_node = false,\r\n\t\tccp_mode = false,\r\n\t\tccp_inst = false,\r\n\t\tthemes_loaded = [],\r\n\t\tsrc = $('script:last').attr('src'),\r\n\t\tdocument = window.document; // local variable is always faster to access then a global\r\n\r\n\t/**\r\n\t * holds all jstree related functions and variables, including the actual class and methods to create, access and manipulate instances.\r\n\t * @name $.jstree\r\n\t */\r\n\t$.jstree = {\r\n\t\t/**\r\n\t\t * specifies the jstree version in use\r\n\t\t * @name $.jstree.version\r\n\t\t */\r\n\t\tversion : '{{VERSION}}',\r\n\t\t/**\r\n\t\t * holds all the default options used when creating new instances\r\n\t\t * @name $.jstree.defaults\r\n\t\t */\r\n\t\tdefaults : {\r\n\t\t\t/**\r\n\t\t\t * configure which plugins will be active on an instance. Should be an array of strings, where each element is a plugin name. The default is `[]`\r\n\t\t\t * @name $.jstree.defaults.plugins\r\n\t\t\t */\r\n\t\t\tplugins : []\r\n\t\t},\r\n\t\t/**\r\n\t\t * stores all loaded jstree plugins (used internally)\r\n\t\t * @name $.jstree.plugins\r\n\t\t */\r\n\t\tplugins : {},\r\n\t\tpath : src && src.indexOf('/') !== -1 ? src.replace(/\\/[^\\/]+$/,'') : '',\r\n\t\tidregex : /[\\\\:&!^|()\\[\\]<>@*'+~#\";.,=\\- \\/${}%?`]/g,\r\n\t\troot : '#'\r\n\t};\r\n\t\r\n\t/**\r\n\t * creates a jstree instance\r\n\t * @name $.jstree.create(el [, options])\r\n\t * @param {DOMElement|jQuery|String} el the element to create the instance on, can be jQuery extended or a selector\r\n\t * @param {Object} options options for this instance (extends `$.jstree.defaults`)\r\n\t * @return {jsTree} the new instance\r\n\t */\r\n\t$.jstree.create = function (el, options) {\r\n\t\treturn new Tree(el,options);\r\n\t};\r\n\r\n\t/**\r\n\t * remove all traces of jstree from the DOM and destroy all instances\r\n\t * @name $.jstree.destroy()\r\n\t */\r\n\t$.jstree.destroy = function () {\r\n\t\t$('.jstree:jstree').jstree('destroy');\r\n\t\t$(document).off('.jstree');\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * get a reference to an existing instance\r\n\t *\r\n\t * __Examples__\r\n\t *\r\n\t *\t// provided a container with an ID of \"tree\", and a nested node with an ID of \"branch\"\r\n\t *\t// all of there will return the same instance\r\n\t *\t$.jstree.reference('tree');\r\n\t *\t$.jstree.reference('#tree');\r\n\t *\t$.jstree.reference($('#tree'));\r\n\t *\t$.jstree.reference(document.getElementByID('tree'));\r\n\t *\t$.jstree.reference('branch');\r\n\t *\t$.jstree.reference('#branch');\r\n\t *\t$.jstree.reference($('#branch'));\r\n\t *\t$.jstree.reference(document.getElementByID('branch'));\r\n\t *\r\n\t * @name $.jstree.reference(needle)\r\n\t * @param {DOMElement|jQuery|String} needle\r\n\t * @return {jsTree|null} the instance or `null` if not found\r\n\t */\r\n\t$.jstree.reference = function (needle) {\r\n\t\tvar tmp = null,\r\n\t\t\tobj = null;\r\n\t\tif(needle && needle.id && (!needle.tagName || !needle.nodeType)) { needle = needle.id; }\r\n\r\n\t\tif(!obj || !obj.length) {\r\n\t\t\ttry { obj = $(needle); } catch (ignore) { }\r\n\t\t}\r\n\t\tif(!obj || !obj.length) {\r\n\t\t\ttry { obj = $('#' + needle.replace($.jstree.idregex,'\\\\$&')); } catch (ignore) { }\r\n\t\t}\r\n\t\tif(obj && obj.length && (obj = obj.closest('.jstree')).length && (obj = obj.data('jstree'))) {\r\n\t\t\ttmp = obj;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$('.jstree').each(function () {\r\n\t\t\t\tvar inst = $(this).data('jstree');\r\n\t\t\t\tif(inst && inst._model.data[needle]) {\r\n\t\t\t\t\ttmp = inst;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn tmp;\r\n\t};\r\n\r\n\t/**\r\n\t * Create an instance, get an instance or invoke a command on a instance.\r\n\t *\r\n\t * If there is no instance associated with the current node a new one is created and `arg` is used to extend `$.jstree.defaults` for this new instance. There would be no return value (chaining is not broken).\r\n\t *\r\n\t * If there is an existing instance and `arg` is a string the command specified by `arg` is executed on the instance, with any additional arguments passed to the function. If the function returns a value it will be returned (chaining could break depending on function).\r\n\t *\r\n\t * If there is an existing instance and `arg` is not a string the instance itself is returned (similar to `$.jstree.reference`).\r\n\t *\r\n\t * In any other case - nothing is returned and chaining is not broken.\r\n\t *\r\n\t * __Examples__\r\n\t *\r\n\t *\t$('#tree1').jstree(); // creates an instance\r\n\t *\t$('#tree2').jstree({ plugins : [] }); // create an instance with some options\r\n\t *\t$('#tree1').jstree('open_node', '#branch_1'); // call a method on an existing instance, passing additional arguments\r\n\t *\t$('#tree2').jstree(); // get an existing instance (or create an instance)\r\n\t *\t$('#tree2').jstree(true); // get an existing instance (will not create new instance)\r\n\t *\t$('#branch_1').jstree().select_node('#branch_1'); // get an instance (using a nested element and call a method)\r\n\t *\r\n\t * @name $().jstree([arg])\r\n\t * @param {String|Object} arg\r\n\t * @return {Mixed}\r\n\t */\r\n\t$.fn.jstree = function (arg) {\r\n\t\t// check for string argument\r\n\t\tvar is_method\t= (typeof arg === 'string'),\r\n\t\t\targs\t\t= Array.prototype.slice.call(arguments, 1),\r\n\t\t\tresult\t\t= null;\r\n\t\tif(arg === true && !this.length) { return false; }\r\n\t\tthis.each(function () {\r\n\t\t\t// get the instance (if there is one) and method (if it exists)\r\n\t\t\tvar instance = $.jstree.reference(this),\r\n\t\t\t\tmethod = is_method && instance ? instance[arg] : null;\r\n\t\t\t// if calling a method, and method is available - execute on the instance\r\n\t\t\tresult = is_method && method ?\r\n\t\t\t\tmethod.apply(instance, args) :\r\n\t\t\t\tnull;\r\n\t\t\t// if there is no instance and no method is being called - create one\r\n\t\t\tif(!instance && !is_method && (arg === undefined || $.isPlainObject(arg))) {\r\n\t\t\t\t$.jstree.create(this, arg);\r\n\t\t\t}\r\n\t\t\t// if there is an instance and no method is called - return the instance\r\n\t\t\tif( (instance && !is_method) || arg === true ) {\r\n\t\t\t\tresult = instance || false;\r\n\t\t\t}\r\n\t\t\t// if there was a method call which returned a result - break and return the value\r\n\t\t\tif(result !== null && result !== undefined) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t\t// if there was a method call with a valid return value - return that, otherwise continue the chain\r\n\t\treturn result !== null && result !== undefined ?\r\n\t\t\tresult : this;\r\n\t};\r\n\r\n\t/**\r\n\t * stores all defaults for the core\r\n\t * @name $.jstree.defaults.core\r\n\t */\r\n\t$.jstree.defaults.core = {\r\n\t\t/**\r\n\t\t * data configuration\r\n\t\t *\r\n\t\t * If left as `false` the HTML inside the jstree container element is used to populate the tree (that should be an unordered list with list items).\r\n\t\t *\r\n\t\t * You can also pass in a HTML string or a JSON array here.\r\n\t\t *\r\n\t\t * It is possible to pass in a standard jQuery-like AJAX config and jstree will automatically determine if the response is JSON or HTML and use that to populate the tree.\r\n\t\t * In addition to the standard jQuery ajax options here you can suppy functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node is being loaded, the return value of those functions will be used.\r\n\t\t *\r\n\t\t * The last option is to specify a function, that function will receive the node being loaded as argument and a second param which is a function which should be called with the result.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t// AJAX\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : {\r\n\t\t *\t\t\t\t'url' : '/get/children/',\r\n\t\t *\t\t\t\t'data' : function (node) {\r\n\t\t *\t\t\t\t\treturn { 'id' : node.id };\r\n\t\t *\t\t\t\t}\r\n\t\t *\t\t\t}\r\n\t\t *\t\t});\r\n\t\t *\r\n\t\t *\t// direct data\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : [\r\n\t\t *\t\t\t\t'Simple root node',\r\n\t\t *\t\t\t\t{\r\n\t\t *\t\t\t\t\t'id' : 'node_2',\r\n\t\t *\t\t\t\t\t'text' : 'Root node with options',\r\n\t\t *\t\t\t\t\t'state' : { 'opened' : true, 'selected' : true },\r\n\t\t *\t\t\t\t\t'children' : [ { 'text' : 'Child 1' }, 'Child 2']\r\n\t\t *\t\t\t\t}\r\n\t\t *\t\t\t]\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t *\t// function\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : function (obj, callback) {\r\n\t\t *\t\t\t\tcallback.call(this, ['Root 1', 'Root 2']);\r\n\t\t *\t\t\t}\r\n\t\t *\t\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.data\r\n\t\t */\r\n\t\tdata\t\t\t: false,\r\n\t\t/**\r\n\t\t * configure the various strings used throughout the tree\r\n\t\t *\r\n\t\t * You can use an object where the key is the string you need to replace and the value is your replacement.\r\n\t\t * Another option is to specify a function which will be called with an argument of the needed string and should return the replacement.\r\n\t\t * If left as `false` no replacement is made.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'strings' : {\r\n\t\t *\t\t\t\t'Loading ...' : 'Please wait ...'\r\n\t\t *\t\t\t}\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.strings\r\n\t\t */\r\n\t\tstrings\t\t\t: false,\r\n\t\t/**\r\n\t\t * determines what happens when a user tries to modify the structure of the tree\r\n\t\t * If left as `false` all operations like create, rename, delete, move or copy are prevented.\r\n\t\t * You can set this to `true` to allow all interactions or use a function to have better control.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'check_callback' : function (operation, node, node_parent, node_position, more) {\r\n\t\t *\t\t\t\t// operation can be 'create_node', 'rename_node', 'delete_node', 'move_node', 'copy_node' or 'edit'\r\n\t\t *\t\t\t\t// in case of 'rename_node' node_position is filled with the new node name\r\n\t\t *\t\t\t\treturn operation === 'rename_node' ? true : false;\r\n\t\t *\t\t\t}\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.check_callback\r\n\t\t */\r\n\t\tcheck_callback\t: false,\r\n\t\t/**\r\n\t\t * a callback called with a single object parameter in the instance's scope when something goes wrong (operation prevented, ajax failed, etc)\r\n\t\t * @name $.jstree.defaults.core.error\r\n\t\t */\r\n\t\terror\t\t\t: $.noop,\r\n\t\t/**\r\n\t\t * the open / close animation duration in milliseconds - set this to `false` to disable the animation (default is `200`)\r\n\t\t * @name $.jstree.defaults.core.animation\r\n\t\t */\r\n\t\tanimation\t\t: 200,\r\n\t\t/**\r\n\t\t * a boolean indicating if multiple nodes can be selected\r\n\t\t * @name $.jstree.defaults.core.multiple\r\n\t\t */\r\n\t\tmultiple\t\t: true,\r\n\t\t/**\r\n\t\t * theme configuration object\r\n\t\t * @name $.jstree.defaults.core.themes\r\n\t\t */\r\n\t\tthemes\t\t\t: {\r\n\t\t\t/**\r\n\t\t\t * the name of the theme to use (if left as `false` the default theme is used)\r\n\t\t\t * @name $.jstree.defaults.core.themes.name\r\n\t\t\t */\r\n\t\t\tname\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * the URL of the theme's CSS file, leave this as `false` if you have manually included the theme CSS (recommended). You can set this to `true` too which will try to autoload the theme.\r\n\t\t\t * @name $.jstree.defaults.core.themes.url\r\n\t\t\t */\r\n\t\t\turl\t\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * the location of all jstree themes - only used if `url` is set to `true`\r\n\t\t\t * @name $.jstree.defaults.core.themes.dir\r\n\t\t\t */\r\n\t\t\tdir\t\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if connecting dots are shown\r\n\t\t\t * @name $.jstree.defaults.core.themes.dots\r\n\t\t\t */\r\n\t\t\tdots\t\t\t: true,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if node icons are shown\r\n\t\t\t * @name $.jstree.defaults.core.themes.icons\r\n\t\t\t */\r\n\t\t\ticons\t\t\t: true,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if node ellipsis should be shown - this only works with a fixed with on the container\r\n\t\t\t * @name $.jstree.defaults.core.themes.ellipsis\r\n\t\t\t */\r\n\t\t\tellipsis\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if the tree background is striped\r\n\t\t\t * @name $.jstree.defaults.core.themes.stripes\r\n\t\t\t */\r\n\t\t\tstripes\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a string (or boolean `false`) specifying the theme variant to use (if the theme supports variants)\r\n\t\t\t * @name $.jstree.defaults.core.themes.variant\r\n\t\t\t */\r\n\t\t\tvariant\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean specifying if a reponsive version of the theme should kick in on smaller screens (if the theme supports it). Defaults to `false`.\r\n\t\t\t * @name $.jstree.defaults.core.themes.responsive\r\n\t\t\t */\r\n\t\t\tresponsive\t\t: false\r\n\t\t},\r\n\t\t/**\r\n\t\t * if left as `true` all parents of all selected nodes will be opened once the tree loads (so that all selected nodes are visible to the user)\r\n\t\t * @name $.jstree.defaults.core.expand_selected_onload\r\n\t\t */\r\n\t\texpand_selected_onload : true,\r\n\t\t/**\r\n\t\t * if left as `true` web workers will be used to parse incoming JSON data where possible, so that the UI will not be blocked by large requests. Workers are however about 30% slower. Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.worker\r\n\t\t */\r\n\t\tworker : true,\r\n\t\t/**\r\n\t\t * Force node text to plain text (and escape HTML). Defaults to `false`\r\n\t\t * @name $.jstree.defaults.core.force_text\r\n\t\t */\r\n\t\tforce_text : false,\r\n\t\t/**\r\n\t\t * Should the node should be toggled if the text is double clicked . Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.dblclick_toggle\r\n\t\t */\r\n\t\tdblclick_toggle : true,\r\n\t\t/**\r\n\t\t * Should the loaded nodes be part of the state. Defaults to `false`\r\n\t\t * @name $.jstree.defaults.core.loaded_state\r\n\t\t */\r\n\t\tloaded_state : false,\r\n\t\t/**\r\n\t\t * Should the last active node be focused when the tree container is blurred and the focused again. This helps working with screen readers. Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.restore_focus\r\n\t\t */\r\n\t\trestore_focus : true,\r\n\t\t/**\r\n\t\t * Default keyboard shortcuts (an object where each key is the button name or combo - like 'enter', 'ctrl-space', 'p', etc and the value is the function to execute in the instance's scope)\r\n\t\t * @name $.jstree.defaults.core.keyboard\r\n\t\t */\r\n\t\tkeyboard : {\r\n\t\t\t'ctrl-space': function (e) {\r\n\t\t\t\t// aria defines space only with Ctrl\r\n\t\t\t\te.type = \"click\";\r\n\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t},\r\n\t\t\t'enter': function (e) {\r\n\t\t\t\t// enter\r\n\t\t\t\te.type = \"click\";\r\n\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t},\r\n\t\t\t'left': function (e) {\r\n\t\t\t\t// left\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tif(this.is_open(e.currentTarget)) {\r\n\t\t\t\t\tthis.close_node(e.currentTarget);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar o = this.get_parent(e.currentTarget);\r\n\t\t\t\t\tif(o && o.id !== $.jstree.root) { this.get_node(o, true).children('.jstree-anchor').focus(); }\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'up': function (e) {\r\n\t\t\t\t// up\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this.get_prev_dom(e.currentTarget);\r\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\r\n\t\t\t},\r\n\t\t\t'right': function (e) {\r\n\t\t\t\t// right\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tif(this.is_closed(e.currentTarget)) {\r\n\t\t\t\t\tthis.open_node(e.currentTarget, function (o) { this.get_node(o, true).children('.jstree-anchor').focus(); });\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.is_open(e.currentTarget)) {\r\n\t\t\t\t\tvar o = this.get_node(e.currentTarget, true).children('.jstree-children')[0];\r\n\t\t\t\t\tif(o) { $(this._firstChild(o)).children('.jstree-anchor').focus(); }\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'down': function (e) {\r\n\t\t\t\t// down\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this.get_next_dom(e.currentTarget);\r\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\r\n\t\t\t},\r\n\t\t\t'*': function (e) {\r\n\t\t\t\t// aria defines * on numpad as open_all - not very common\r\n\t\t\t\tthis.open_all();\r\n\t\t\t},\r\n\t\t\t'home': function (e) {\r\n\t\t\t\t// home\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this._firstChild(this.get_container_ul()[0]);\r\n\t\t\t\tif(o) { $(o).children('.jstree-anchor').filter(':visible').focus(); }\r\n\t\t\t},\r\n\t\t\t'end': function (e) {\r\n\t\t\t\t// end\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.element.find('.jstree-anchor').filter(':visible').last().focus();\r\n\t\t\t},\r\n\t\t\t'f2': function (e) {\r\n\t\t\t\t// f2 - safe to include - if check_callback is false it will fail\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.edit(e.currentTarget);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n    var Tree = jstree.Tree = langx.Evented.inherit({\r\n        klassName: \"Tree\",\r\n\r\n\t\t/**\r\n\t\t * used to decorate an instance with a plugin. Used internally.\r\n\t\t * @private\r\n\t\t * @name plugin(deco [, opts])\r\n\t\t * @param  {String} deco the plugin to decorate with\r\n\t\t * @param  {Object} opts options for the plugin\r\n\t\t * @return {jsTree}\r\n\t\t */\r\n\t\tplugin : function (deco, opts) {\r\n\t\t\tvar Child = $.jstree.plugins[deco];\r\n\t\t\tif(Child) {\r\n\t\t\t\tthis._data[deco] = {};\r\n\t\t\t\tChild.prototype = this;\r\n\t\t\t\treturn new Child(opts, this);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t/**\r\n\t\t * initialize the instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name init(el, optons)\r\n\t\t * @param {DOMElement|jQuery|String} el the element we are transforming\r\n\t\t * @param {Object} options options for this instance\r\n\t\t * @trigger init.jstree, loading.jstree, loaded.jstree, ready.jstree, changed.jstree\r\n\t\t */\r\n\t\tinit : function (el, options) {\r\n\t\t\tthis._id = ++instance_counter;\r\n\t\t\tthis._cnt = 0;\r\n\t\t\tthis._wrk = null;\r\n\t\t\tthis._data = {\r\n\t\t\t\tcore : {\r\n\t\t\t\t\tthemes : {\r\n\t\t\t\t\t\tname : false,\r\n\t\t\t\t\t\tdots : false,\r\n\t\t\t\t\t\ticons : false,\r\n\t\t\t\t\t\tellipsis : false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tselected : [],\r\n\t\t\t\t\tlast_error : {},\r\n\t\t\t\t\tworking : false,\r\n\t\t\t\t\tworker_queue : [],\r\n\t\t\t\t\tfocused : null\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar  opt = options,\r\n\t\t\t\ttmp = this;\r\n\t\t\toptions = $.extend(true, {}, $.jstree.defaults, options);\r\n\t\t\tif(opt && opt.plugins) {\r\n\t\t\t\toptions.plugins = opt.plugins;\r\n\t\t\t}\r\n\t\t\t$.each(options.plugins, function (i, k) {\r\n\t\t\t\tif(i !== 'core') {\r\n\t\t\t\t\ttmp = tmp.plugin(k, options[k]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$(el).data('jstree', tmp);\r\n\r\n\t\t\ttmp._model = {\r\n\t\t\t\tdata : {},\r\n\t\t\t\tchanged : [],\r\n\t\t\t\tforce_full_redraw : false,\r\n\t\t\t\tredraw_timeout : false,\r\n\t\t\t\tdefault_state : {\r\n\t\t\t\t\tloaded : true,\r\n\t\t\t\t\topened : false,\r\n\t\t\t\t\tselected : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\ttmp._model.data[$.jstree.root] = {\r\n\t\t\t\tid : $.jstree.root,\r\n\t\t\t\tparent : null,\r\n\t\t\t\tparents : [],\r\n\t\t\t\tchildren : [],\r\n\t\t\t\tchildren_d : [],\r\n\t\t\t\tstate : { loaded : false }\r\n\t\t\t};\r\n\r\n\t\t\ttmp.element = $(el).addClass('jstree jstree-' + tmp._id);\r\n\t\t\ttmp.settings = options;\r\n\r\n\t\t\ttmp._data.core.ready = false;\r\n\t\t\ttmp._data.core.loaded = false;\r\n\t\t\ttmp._data.core.rtl = (tmp.element.css(\"direction\") === \"rtl\");\r\n\t\t\ttmp.element[tmp._data.core.rtl ? 'addClass' : 'removeClass'](\"jstree-rtl\");\r\n\t\t\ttmp.element.attr('role','tree');\r\n\t\t\tif(tmp.settings.core.multiple) {\r\n\t\t\t\ttmp.element.attr('aria-multiselectable', true);\r\n\t\t\t}\r\n\t\t\tif(!tmp.element.attr('tabindex')) {\r\n\t\t\t\ttmp.element.attr('tabindex','0');\r\n\t\t\t}\r\n\r\n\t\t\ttmp.bind();\r\n\t\t\t/**\r\n\t\t\t * triggered after all events are bound\r\n\t\t\t * @event\r\n\t\t\t * @name init.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"init\");\r\n\r\n\t\t\ttmp._data.core.original_container_html = tmp.element.find(\" > ul > li\").clone(true);\r\n\t\t\ttmp._data.core.original_container_html\r\n\t\t\t\t.find(\"li\").addBack()\r\n\t\t\t\t.contents().filter(function() {\r\n\t\t\t\t\treturn this.nodeType === 3 && (!this.nodeValue || /^\\s+$/.test(this.nodeValue));\r\n\t\t\t\t})\r\n\t\t\t\t.remove();\r\n\t\t\ttmp.element.html(\"<\"+\"ul class='jstree-container-ul jstree-children' role='group'><\"+\"li id='j\"+tmp._id+\"_loading' class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='tree-item'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + tmp.get_string(\"Loading ...\") + \"</a></li></ul>\");\r\n\t\t\ttmp.element.attr('aria-activedescendant','j' + tmp._id + '_loading');\r\n\t\t\ttmp._data.core.li_height = tmp.get_container_ul().children(\"li\").first().outerHeight() || 24;\r\n\t\t\ttmp._data.core.node = tmp._create_prototype_node();\r\n\t\t\t/**\r\n\t\t\t * triggered after the loading text is shown and before loading starts\r\n\t\t\t * @event\r\n\t\t\t * @name loading.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"loading\");\r\n\t\t\ttmp.load_node($.jstree.root);\r\n\t\t\treturn tmp;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * destroy an instance\r\n\t\t * @name destroy()\r\n\t\t * @param  {Boolean} keep_html if not set to `true` the container will be emptied, otherwise the current DOM elements will be kept intact\r\n\t\t */\r\n\t\tdestroy : function (keep_html) {\r\n\t\t\t/**\r\n\t\t\t * triggered before the tree is destroyed\r\n\t\t\t * @event\r\n\t\t\t * @name destroy.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"destroy\");\r\n\t\t\tif(this._wrk) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\twindow.URL.revokeObjectURL(this._wrk);\r\n\t\t\t\t\tthis._wrk = null;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (ignore) { }\r\n\t\t\t}\r\n\t\t\tif(!keep_html) { this.element.empty(); }\r\n\t\t\tthis.teardown();\r\n\t\t},\r\n\t\t/**\r\n\t\t * Create a prototype node\r\n\t\t * @name _create_prototype_node()\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_create_prototype_node : function () {\r\n\t\t\tvar _node = document.createElement('LI'), _temp1, _temp2;\r\n\t\t\t_node.setAttribute('role', 'treeitem');\r\n\t\t\t_temp1 = document.createElement('I');\r\n\t\t\t_temp1.className = 'jstree-icon jstree-ocl';\r\n\t\t\t_temp1.setAttribute('role', 'presentation');\r\n\t\t\t_node.appendChild(_temp1);\r\n\t\t\t_temp1 = document.createElement('A');\r\n\t\t\t_temp1.className = 'jstree-anchor';\r\n\t\t\t_temp1.setAttribute('href','#');\r\n\t\t\t_temp1.setAttribute('tabindex','-1');\r\n\t\t\t_temp2 = document.createElement('I');\r\n\t\t\t_temp2.className = 'jstree-icon jstree-themeicon';\r\n\t\t\t_temp2.setAttribute('role', 'presentation');\r\n\t\t\t_temp1.appendChild(_temp2);\r\n\t\t\t_node.appendChild(_temp1);\r\n\t\t\t_temp1 = _temp2 = null;\r\n\r\n\t\t\treturn _node;\r\n\t\t},\r\n\t\t_kbevent_to_func : function (e) {\r\n\t\t\tvar keys = {\r\n\t\t\t\t8: \"Backspace\", 9: \"Tab\", 13: \"Return\", 19: \"Pause\", 27: \"Esc\",\r\n\t\t\t\t32: \"Space\", 33: \"PageUp\", 34: \"PageDown\", 35: \"End\", 36: \"Home\",\r\n\t\t\t\t37: \"Left\", 38: \"Up\", 39: \"Right\", 40: \"Down\", 44: \"Print\", 45: \"Insert\",\r\n\t\t\t\t46: \"Delete\", 96: \"Numpad0\", 97: \"Numpad1\", 98: \"Numpad2\", 99 : \"Numpad3\",\r\n\t\t\t\t100: \"Numpad4\", 101: \"Numpad5\", 102: \"Numpad6\", 103: \"Numpad7\",\r\n\t\t\t\t104: \"Numpad8\", 105: \"Numpad9\", '-13': \"NumpadEnter\", 112: \"F1\",\r\n\t\t\t\t113: \"F2\", 114: \"F3\", 115: \"F4\", 116: \"F5\", 117: \"F6\", 118: \"F7\",\r\n\t\t\t\t119: \"F8\", 120: \"F9\", 121: \"F10\", 122: \"F11\", 123: \"F12\", 144: \"Numlock\",\r\n\t\t\t\t145: \"Scrolllock\", 16: 'Shift', 17: 'Ctrl', 18: 'Alt',\r\n\t\t\t\t48: '0',  49: '1',  50: '2',  51: '3',  52: '4', 53:  '5',\r\n\t\t\t\t54: '6',  55: '7',  56: '8',  57: '9',  59: ';',  61: '=', 65:  'a',\r\n\t\t\t\t66: 'b',  67: 'c',  68: 'd',  69: 'e',  70: 'f',  71: 'g', 72:  'h',\r\n\t\t\t\t73: 'i',  74: 'j',  75: 'k',  76: 'l',  77: 'm',  78: 'n', 79:  'o',\r\n\t\t\t\t80: 'p',  81: 'q',  82: 'r',  83: 's',  84: 't',  85: 'u', 86:  'v',\r\n\t\t\t\t87: 'w',  88: 'x',  89: 'y',  90: 'z', 107: '+', 109: '-', 110: '.',\r\n\t\t\t\t186: ';', 187: '=', 188: ',', 189: '-', 190: '.', 191: '/', 192: '`',\r\n\t\t\t\t219: '[', 220: '\\\\',221: ']', 222: \"'\", 111: '/', 106: '*', 173: '-'\r\n\t\t\t};\r\n\t\t\tvar parts = [];\r\n\t\t\tif (e.ctrlKey) { parts.push('ctrl'); }\r\n\t\t\tif (e.altKey) { parts.push('alt'); }\r\n\t\t\tif (e.shiftKey) { parts.push('shift'); }\r\n\t\t\tparts.push(keys[e.which] || e.which);\r\n\t\t\tparts = parts.sort().join('-').toLowerCase();\r\n\r\n\t\t\tvar kb = this.settings.core.keyboard, i, tmp;\r\n\t\t\tfor (i in kb) {\r\n\t\t\t\tif (kb.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp = i;\r\n\t\t\t\t\tif (tmp !== '-' && tmp !== '+') {\r\n\t\t\t\t\t\ttmp = tmp.replace('--', '-MINUS').replace('+-', '-MINUS').replace('++', '-PLUS').replace('-+', '-PLUS');\r\n\t\t\t\t\t\ttmp = tmp.split(/-|\\+/).sort().join('-').replace('MINUS', '-').replace('PLUS', '+').toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tmp === parts) {\r\n\t\t\t\t\t\treturn kb[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t/**\r\n\t\t * part of the destroying of an instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name teardown()\r\n\t\t */\r\n\t\tteardown : function () {\r\n\t\t\tthis.unbind();\r\n\t\t\tthis.element\r\n\t\t\t\t.removeClass('jstree')\r\n\t\t\t\t.removeData('jstree')\r\n\t\t\t\t.find(\"[class^='jstree']\")\r\n\t\t\t\t\t.addBack()\r\n\t\t\t\t\t.attr(\"class\", function () { return this.className.replace(/jstree[^ ]*|$/ig,''); });\r\n\t\t\tthis.element = null;\r\n\t\t},\r\n\t\t/**\r\n\t\t * bind all events. Used internally.\r\n\t\t * @private\r\n\t\t * @name bind()\r\n\t\t */\r\n\t\tbind : function () {\r\n\t\t\tvar word = '',\r\n\t\t\t\ttout = null,\r\n\t\t\t\twas_click = 0;\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"dblclick.jstree\", function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(document.selection && document.selection.empty) {\r\n\t\t\t\t\t\t\tdocument.selection.empty();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif(window.getSelection) {\r\n\t\t\t\t\t\t\t\tvar sel = window.getSelection();\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t\t\t\t\t\t\tsel.collapse();\r\n\t\t\t\t\t\t\t\t} catch (ignore) { }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"mousedown.jstree\", $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target === this.element[0]) {\r\n\t\t\t\t\t\t\te.preventDefault(); // prevent losing focus when clicking scroll arrows (FF, Chrome)\r\n\t\t\t\t\t\t\twas_click = +(new Date()); // ie does not allow to prevent losing focus\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"mousedown.jstree\", \".jstree-ocl\", function (e) {\r\n\t\t\t\t\t\te.preventDefault(); // prevent any node inside from losing focus when clicking the open/close icon\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-ocl\", $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.toggle_node(e.target);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"dblclick.jstree\", \".jstree-anchor\", $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(this.settings.core.dblclick_toggle) {\r\n\t\t\t\t\t\t\tthis.toggle_node(e.target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tif(e.currentTarget !== document.activeElement) { $(e.currentTarget).focus(); }\r\n\t\t\t\t\t\tthis.activate_node(e.currentTarget, e);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('keydown.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(this._data.core.rtl) {\r\n\t\t\t\t\t\t\tif(e.which === 37) { e.which = 39; }\r\n\t\t\t\t\t\t\telse if(e.which === 39) { e.which = 37; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar f = this._kbevent_to_func(e);\r\n\t\t\t\t\t\tif (f) {\r\n\t\t\t\t\t\t\tvar r = f.call(this, e);\r\n\t\t\t\t\t\t\tif (r === false || r === true) {\r\n\t\t\t\t\t\t\t\treturn r;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"load_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(data.status) {\r\n\t\t\t\t\t\t\tif(data.node.id === $.jstree.root && !this._data.core.loaded) {\r\n\t\t\t\t\t\t\t\tthis._data.core.loaded = true;\r\n\t\t\t\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\r\n\t\t\t\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t * triggered after the root node is loaded for the first time\r\n\t\t\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t\t\t * @name loaded.jstree\r\n\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\tthis.trigger(\"loaded\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!this._data.core.ready) {\r\n\t\t\t\t\t\t\t\tsetTimeout($.proxy(function() {\r\n\t\t\t\t\t\t\t\t\tif(this.element && !this.get_container_ul().find('.jstree-loading').length) {\r\n\t\t\t\t\t\t\t\t\t\tthis._data.core.ready = true;\r\n\t\t\t\t\t\t\t\t\t\tif(this._data.core.selected.length) {\r\n\t\t\t\t\t\t\t\t\t\t\tif(this.settings.core.expand_selected_onload) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvar tmp = [], i, j;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttmp = tmp.concat(this._model.data[this._data.core.selected[i]].parents);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttmp = $.vakata.array_unique(tmp);\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.open_node(tmp[i], false, 0);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'ready', 'selected' : this._data.core.selected });\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t\t\t * triggered after all nodes are finished loading\r\n\t\t\t\t\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t\t\t\t\t * @name ready.jstree\r\n\t\t\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\t\t\tthis.trigger(\"ready\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, this), 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t// quick searching when the tree is focused\r\n\t\t\t\t.on('keypress.jstree', $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(tout) { clearTimeout(tout); }\r\n\t\t\t\t\t\ttout = setTimeout(function () {\r\n\t\t\t\t\t\t\tword = '';\r\n\t\t\t\t\t\t}, 500);\r\n\r\n\t\t\t\t\t\tvar chr = String.fromCharCode(e.which).toLowerCase(),\r\n\t\t\t\t\t\t\tcol = this.element.find('.jstree-anchor').filter(':visible'),\r\n\t\t\t\t\t\t\tind = col.index(document.activeElement) || 0,\r\n\t\t\t\t\t\t\tend = false;\r\n\t\t\t\t\t\tword += chr;\r\n\r\n\t\t\t\t\t\t// match for whole word from current node down (including the current node)\r\n\t\t\t\t\t\tif(word.length > 1) {\r\n\t\t\t\t\t\t\tcol.slice(ind).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\r\n\t\t\t\t\t\t\t// match for whole word from the beginning of the tree\r\n\t\t\t\t\t\t\tcol.slice(0, ind).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// list nodes that start with that letter (only if word consists of a single char)\r\n\t\t\t\t\t\tif(new RegExp('^' + chr.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '+$').test(word)) {\r\n\t\t\t\t\t\t\t// search for the next node starting with that letter\r\n\t\t\t\t\t\t\tcol.slice(ind + 1).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\r\n\t\t\t\t\t\t\t// search from the beginning\r\n\t\t\t\t\t\t\tcol.slice(0, ind + 1).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t// THEME RELATED\r\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tvar s = this.settings.core.themes;\r\n\t\t\t\t\t\tthis._data.core.themes.dots\t\t\t= s.dots;\r\n\t\t\t\t\t\tthis._data.core.themes.stripes\t\t= s.stripes;\r\n\t\t\t\t\t\tthis._data.core.themes.icons\t\t= s.icons;\r\n\t\t\t\t\t\tthis._data.core.themes.ellipsis\t\t= s.ellipsis;\r\n\t\t\t\t\t\tthis.set_theme(s.name || \"default\", s.url);\r\n\t\t\t\t\t\tthis.set_theme_variant(s.variant);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis[ this._data.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.stripes ? \"show_stripes\" : \"hide_stripes\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.ellipsis ? \"show_ellipsis\" : \"hide_ellipsis\" ]();\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('blur.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\t\t\t$(e.currentTarget).filter('.jstree-hovered').mouseleave();\r\n\t\t\t\t\t\tthis.element.attr('tabindex', '0');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('focus.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tvar tmp = this.get_node(e.currentTarget);\r\n\t\t\t\t\t\tif(tmp && tmp.id) {\r\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.element.find('.jstree-hovered').not(e.currentTarget).mouseleave();\r\n\t\t\t\t\t\t$(e.currentTarget).mouseenter();\r\n\t\t\t\t\t\tthis.element.attr('tabindex', '-1');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('focus.jstree', $.proxy(function () {\r\n\t\t\t\t\t\tif(+(new Date()) - was_click > 500 && !this._data.core.focused && this.settings.core.restore_focus) {\r\n\t\t\t\t\t\t\twas_click = 0;\r\n\t\t\t\t\t\t\tvar act = this.get_node(this.element.attr('aria-activedescendant'), true);\r\n\t\t\t\t\t\t\tif(act) {\r\n\t\t\t\t\t\t\t\tact.find('> .jstree-anchor').focus();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('mouseenter.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('mouseleave.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\r\n\t\t\t\t\t}, this));\r\n\t\t},\r\n\t\t/**\r\n\t\t * part of the destroying of an instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name unbind()\r\n\t\t */\r\n\t\tunbind : function () {\r\n\t\t\tthis.element.off('.jstree');\r\n\t\t\t$(document).off('.jstree-' + this._id);\r\n\t\t},\r\n\t\t/**\r\n\t\t * trigger an event. Used internally.\r\n\t\t * @private\r\n\t\t * @name trigger(ev [, data])\r\n\t\t * @param  {String} ev the name of the event to trigger\r\n\t\t * @param  {Object} data additional data to pass with the event\r\n\t\t */\r\n\t\ttrigger : function (ev, data) {\r\n\t\t\tif(!data) {\r\n\t\t\t\tdata = {};\r\n\t\t\t}\r\n\t\t\tdata.instance = this;\r\n\t\t\tthis.element.trigger(ev.replace('.jstree','') + '.jstree', data);\r\n\t\t},\r\n\t\t/**\r\n\t\t * returns the jQuery extended instance container\r\n\t\t * @name get_container()\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_container : function () {\r\n\t\t\treturn this.element;\r\n\t\t},\r\n\t\t/**\r\n\t\t * returns the jQuery extended main UL node inside the instance container. Used internally.\r\n\t\t * @private\r\n\t\t * @name get_container_ul()\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_container_ul : function () {\r\n\t\t\treturn this.element.children(\".jstree-children\").first();\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets string replacements (localization). Used internally.\r\n\t\t * @private\r\n\t\t * @name get_string(key)\r\n\t\t * @param  {String} key\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_string : function (key) {\r\n\t\t\tvar a = this.settings.core.strings;\r\n\t\t\tif($.isFunction(a)) { return a.call(this, key); }\r\n\t\t\tif(a && a[key]) { return a[key]; }\r\n\t\t\treturn key;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the first child of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _firstChild(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_firstChild : function (dom) {\r\n\t\t\tdom = dom ? dom.firstChild : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.nextSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the next sibling of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _nextSibling(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_nextSibling : function (dom) {\r\n\t\t\tdom = dom ? dom.nextSibling : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.nextSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the previous sibling of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _previousSibling(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_previousSibling : function (dom) {\r\n\t\t\tdom = dom ? dom.previousSibling : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.previousSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the JSON representation of a node (or the actual jQuery extended DOM node) by using any input (child DOM element, ID string, selector, etc)\r\n\t\t * @name get_node(obj [, as_dom])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} as_dom\r\n\t\t * @return {Object|jQuery}\r\n\t\t */\r\n\t\tget_node : function (obj, as_dom) {\r\n\t\t\tif(obj && obj.id) {\r\n\t\t\t\tobj = obj.id;\r\n\t\t\t}\r\n\t\t\tvar dom;\r\n\t\t\ttry {\r\n\t\t\t\tif(this._model.data[obj]) {\r\n\t\t\t\t\tobj = this._model.data[obj];\r\n\t\t\t\t}\r\n\t\t\t\telse if(typeof obj === \"string\" && this._model.data[obj.replace(/^#/, '')]) {\r\n\t\t\t\t\tobj = this._model.data[obj.replace(/^#/, '')];\r\n\t\t\t\t}\r\n\t\t\t\telse if(typeof obj === \"string\" && (dom = $('#' + obj.replace($.jstree.idregex,'\\\\$&'), this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\r\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\r\n\t\t\t\t}\r\n\t\t\t\telse if((dom = $(obj, this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\r\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\r\n\t\t\t\t}\r\n\t\t\t\telse if((dom = $(obj, this.element)).length && dom.hasClass('jstree')) {\r\n\t\t\t\t\tobj = this._model.data[$.jstree.root];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(as_dom) {\r\n\t\t\t\t\tobj = obj.id === $.jstree.root ? this.element : $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\t} catch (ex) { return false; }\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the path to a node, either consisting of node texts, or of node IDs, optionally glued together (otherwise an array)\r\n\t\t * @name get_path(obj [, glue, ids])\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {String} glue if you want the path as a string - pass the glue here (for example '/'), if a falsy value is supplied here, an array is returned\r\n\t\t * @param  {Boolean} ids if set to true build the path using ID, otherwise node text is used\r\n\t\t * @return {mixed}\r\n\t\t */\r\n\t\tget_path : function (obj, glue, ids) {\r\n\t\t\tobj = obj.parents ? obj : this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root || !obj.parents) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar i, j, p = [];\r\n\t\t\tp.push(ids ? obj.id : obj.text);\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tp.push(ids ? obj.parents[i] : this.get_text(obj.parents[i]));\r\n\t\t\t}\r\n\t\t\tp = p.reverse().slice(1);\r\n\t\t\treturn glue ? p.join(glue) : p;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the next visible node that is below the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\r\n\t\t * @name get_next_dom(obj [, strict])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} strict\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_next_dom : function (obj, strict) {\r\n\t\t\tvar tmp;\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\ttmp = this._firstChild(this.get_container_ul()[0]);\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(strict) {\r\n\t\t\t\ttmp = obj[0];\r\n\t\t\t\tdo {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(obj.hasClass(\"jstree-open\")) {\r\n\t\t\t\ttmp = this._firstChild(obj.children('.jstree-children')[0]);\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp !== null) {\r\n\t\t\t\t\treturn $(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = obj[0];\r\n\t\t\tdo {\r\n\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\tif(tmp !== null) {\r\n\t\t\t\treturn $(tmp);\r\n\t\t\t}\r\n\t\t\treturn obj.parentsUntil(\".jstree\",\".jstree-node\").nextAll(\".jstree-node:visible\").first();\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the previous visible node that is above the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\r\n\t\t * @name get_prev_dom(obj [, strict])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} strict\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_prev_dom : function (obj, strict) {\r\n\t\t\tvar tmp;\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\ttmp = this.get_container_ul()[0].lastChild;\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(strict) {\r\n\t\t\t\ttmp = obj[0];\r\n\t\t\t\tdo {\r\n\t\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\ttmp = obj[0];\r\n\t\t\tdo {\r\n\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\tif(tmp !== null) {\r\n\t\t\t\tobj = $(tmp);\r\n\t\t\t\twhile(obj.hasClass(\"jstree-open\")) {\r\n\t\t\t\t\tobj = obj.children(\".jstree-children\").first().children(\".jstree-node:visible:last\");\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t\ttmp = obj[0].parentNode.parentNode;\r\n\t\t\treturn tmp && tmp.className && tmp.className.indexOf('jstree-node') !== -1 ? $(tmp) : false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the parent ID of a node\r\n\t\t * @name get_parent(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_parent : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.parent;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get a jQuery collection of all the children of a node (node must be rendered), returns false on error\r\n\t\t * @name get_children_dom(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_children_dom : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\treturn this.get_container_ul().children(\".jstree-node\");\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.children(\".jstree-children\").children(\".jstree-node\");\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node has children\r\n\t\t * @name is_parent(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_parent : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && (obj.state.loaded === false || obj.children.length > 0);\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is loaded (its children are available)\r\n\t\t * @name is_loaded(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_loaded : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state.loaded;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is currently loading (fetching children)\r\n\t\t * @name is_loading(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_loading : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state && obj.state.loading;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is opened\r\n\t\t * @name is_open(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_open : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state.opened;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is in a closed state\r\n\t\t * @name is_closed(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_closed : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && this.is_parent(obj) && !obj.state.opened;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node has no children\r\n\t\t * @name is_leaf(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_leaf : function (obj) {\r\n\t\t\treturn !this.is_parent(obj);\r\n\t\t},\r\n\t\t/**\r\n\t\t * loads a node (fetches its children using the `core.data` setting). Multiple nodes can be passed to by using an array.\r\n\t\t * @name load_node(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives two arguments - the node and a boolean status\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger load_node.jstree\r\n\t\t */\r\n\t\tload_node : function (obj, callback) {\r\n\t\t\tvar k, l, i, j, c;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tthis._load_nodes(obj.slice(), callback);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) {\r\n\t\t\t\tif(callback) { callback.call(this, obj, false); }\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// if(obj.state.loading) { } // the node is already loading - just wait for it to load and invoke callback? but if called implicitly it should be loaded again?\r\n\t\t\tif(obj.state.loaded) {\r\n\t\t\t\tobj.state.loaded = false;\r\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\r\n\t\t\t\t\t\treturn $.inArray(v, obj.children_d) === -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tfor(k = 0, l = obj.children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(this._model.data[obj.children_d[k]].state.selected) {\r\n\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete this._model.data[obj.children_d[k]];\r\n\t\t\t\t}\r\n\t\t\t\tif (c) {\r\n\t\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\r\n\t\t\t\t\t\treturn $.inArray(v, obj.children_d) === -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tobj.children = [];\r\n\t\t\t\tobj.children_d = [];\r\n\t\t\t\tif(c) {\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'load_node', 'node' : obj, 'selected' : this._data.core.selected });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj.state.failed = false;\r\n\t\t\tobj.state.loading = true;\r\n\t\t\tthis.get_node(obj, true).addClass(\"jstree-loading\").attr('aria-busy',true);\r\n\t\t\tthis._load_node(obj, $.proxy(function (status) {\r\n\t\t\t\tobj = this._model.data[obj.id];\r\n\t\t\t\tobj.state.loading = false;\r\n\t\t\t\tobj.state.loaded = status;\r\n\t\t\t\tobj.state.failed = !obj.state.loaded;\r\n\t\t\t\tvar dom = this.get_node(obj, true), i = 0, j = 0, m = this._model.data, has_children = false;\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tif(m[obj.children[i]] && !m[obj.children[i]].state.hidden) {\r\n\t\t\t\t\t\thas_children = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(obj.state.loaded && dom && dom.length) {\r\n\t\t\t\t\tdom.removeClass('jstree-closed jstree-open jstree-leaf');\r\n\t\t\t\t\tif (!has_children) {\r\n\t\t\t\t\t\tdom.addClass('jstree-leaf');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (obj.id !== '#') {\r\n\t\t\t\t\t\t\tdom.addClass(obj.state.opened ? 'jstree-open' : 'jstree-closed');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered after a node is loaded\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name load_node.jstree\r\n\t\t\t\t * @param {Object} node the node that was loading\r\n\t\t\t\t * @param {Boolean} status was the node loaded successfully\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('load_node', { \"node\" : obj, \"status\" : status });\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, status);\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * load an array of nodes (will also load unavailable nodes as soon as the appear in the structure). Used internally.\r\n\t\t * @private\r\n\t\t * @name _load_nodes(nodes [, callback])\r\n\t\t * @param  {array} nodes\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - the array passed to _load_nodes\r\n\t\t */\r\n\t\t_load_nodes : function (nodes, callback, is_callback, force_reload) {\r\n\t\t\tvar r = true,\r\n\t\t\t\tc = function () { this._load_nodes(nodes, callback, true); },\r\n\t\t\t\tm = this._model.data, i, j, tmp = [];\r\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\tif(m[nodes[i]] && ( (!m[nodes[i]].state.loaded && !m[nodes[i]].state.failed) || (!is_callback && force_reload) )) {\r\n\t\t\t\t\tif(!this.is_loading(nodes[i])) {\r\n\t\t\t\t\t\tthis.load_node(nodes[i], c);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tr = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(r) {\r\n\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\tif(m[nodes[i]] && m[nodes[i]].state.loaded) {\r\n\t\t\t\t\t\ttmp.push(nodes[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(callback && !callback.done) {\r\n\t\t\t\t\tcallback.call(this, tmp);\r\n\t\t\t\t\tcallback.done = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * loads all unloaded nodes\r\n\t\t * @name load_all([obj, callback])\r\n\t\t * @param {mixed} obj the node to load recursively, omit to load all nodes in the tree\r\n\t\t * @param {function} callback a function to be executed once loading all the nodes is complete,\r\n\t\t * @trigger load_all.jstree\r\n\t\t */\r\n\t\tload_all : function (obj, callback) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar to_load = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tc = m[obj.id].children_d,\r\n\t\t\t\ti, j;\r\n\t\t\tif(obj.state && !obj.state.loaded) {\r\n\t\t\t\tto_load.push(obj.id);\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = c.length; i < j; i++) {\r\n\t\t\t\tif(m[c[i]] && m[c[i]].state && !m[c[i]].state.loaded) {\r\n\t\t\t\t\tto_load.push(c[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(to_load.length) {\r\n\t\t\t\tthis._load_nodes(to_load, function () {\r\n\t\t\t\t\tthis.load_all(obj, callback);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered after a load_all call completes\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name load_all.jstree\r\n\t\t\t\t * @param {Object} node the recursively loaded node\r\n\t\t\t\t */\r\n\t\t\t\tif(callback) { callback.call(this, obj); }\r\n\t\t\t\tthis.trigger('load_all', { \"node\" : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * handles the actual loading of a node. Used only internally.\r\n\t\t * @private\r\n\t\t * @name _load_node(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - a boolean status\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\t_load_node : function (obj, callback) {\r\n\t\t\tvar s = this.settings.core.data, t;\r\n\t\t\tvar notTextOrCommentNode = function notTextOrCommentNode () {\r\n\t\t\t\treturn this.nodeType !== 3 && this.nodeType !== 8;\r\n\t\t\t};\r\n\t\t\t// use original HTML\r\n\t\t\tif(!s) {\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_html_data(obj, this._data.core.original_container_html.clone(true), function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t// return callback.call(this, obj.id === $.jstree.root ? this._append_html_data(obj, this._data.core.original_container_html.clone(true)) : false);\r\n\t\t\t}\r\n\t\t\tif($.isFunction(s)) {\r\n\t\t\t\treturn s.call(this, obj, $.proxy(function (d) {\r\n\t\t\t\t\tif(d === false) {\r\n\t\t\t\t\t\tcallback.call(this, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $($.parseHTML(d)).filter(notTextOrCommentNode) : d, function (status) {\r\n\t\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// return d === false ? callback.call(this, false) : callback.call(this, this[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d));\r\n\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(typeof s === 'object') {\r\n\t\t\t\tif(s.url) {\r\n\t\t\t\t\ts = $.extend(true, {}, s);\r\n\t\t\t\t\tif($.isFunction(s.url)) {\r\n\t\t\t\t\t\ts.url = s.url.call(this, obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif($.isFunction(s.data)) {\r\n\t\t\t\t\t\ts.data = s.data.call(this, obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn $.ajax(s)\r\n\t\t\t\t\t\t.done($.proxy(function (d,t,x) {\r\n\t\t\t\t\t\t\t\tvar type = x.getResponseHeader('Content-Type');\r\n\t\t\t\t\t\t\t\tif((type && type.indexOf('json') !== -1) || typeof d === \"object\") {\r\n\t\t\t\t\t\t\t\t\treturn this._append_json_data(obj, d, function (status) { callback.call(this, status); });\r\n\t\t\t\t\t\t\t\t\t//return callback.call(this, this._append_json_data(obj, d));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif((type && type.indexOf('html') !== -1) || typeof d === \"string\") {\r\n\t\t\t\t\t\t\t\t\treturn this._append_html_data(obj, $($.parseHTML(d)).filter(notTextOrCommentNode), function (status) { callback.call(this, status); });\r\n\t\t\t\t\t\t\t\t\t// return callback.call(this, this._append_html_data(obj, $(d)));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : x }) };\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t.fail($.proxy(function (f) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : f }) };\r\n\t\t\t\t\t\t\t\tcallback.call(this, false);\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t}\r\n\t\t\t\tif ($.isArray(s)) {\r\n\t\t\t\t\tt = $.extend(true, [], s);\r\n\t\t\t\t} else if ($.isPlainObject(s)) {\r\n\t\t\t\t\tt = $.extend(true, {}, s);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt = s;\r\n\t\t\t\t}\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_json_data(obj, t, function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_05', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\r\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_json_data(obj, t) : false) );\r\n\t\t\t}\r\n\t\t\tif(typeof s === 'string') {\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_html_data(obj, $($.parseHTML(s)).filter(notTextOrCommentNode), function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_06', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\r\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_html_data(obj, $(s)) : false) );\r\n\t\t\t}\r\n\t\t\treturn callback.call(this, false);\r\n\t\t},\r\n\t\t/**\r\n\t\t * adds a node to the list of nodes to redraw. Used only internally.\r\n\t\t * @private\r\n\t\t * @name _node_changed(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t */\r\n\t\t_node_changed : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n      if (obj && $.inArray(obj.id, this._model.changed) === -1) {\r\n\t\t\t\tthis._model.changed.push(obj.id);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * appends HTML content to the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name _append_html_data(obj, data)\r\n\t\t * @param  {mixed} obj the node to append to\r\n\t\t * @param  {String} data the HTML string to parse and append\r\n\t\t * @trigger model.jstree, changed.jstree\r\n\t\t */\r\n\t\t_append_html_data : function (dom, data, cb) {\r\n\t\t\tdom = this.get_node(dom);\r\n\t\t\tdom.children = [];\r\n\t\t\tdom.children_d = [];\r\n\t\t\tvar dat = data.is('ul') ? data.children() : data,\r\n\t\t\t\tpar = dom.id,\r\n\t\t\t\tchd = [],\r\n\t\t\t\tdpc = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tp = m[par],\r\n\t\t\t\ts = this._data.core.selected.length,\r\n\t\t\t\ttmp, i, j;\r\n\t\t\tdat.each($.proxy(function (i, v) {\r\n\t\t\t\ttmp = this._parse_model_from_html($(v), par, p.parents.concat());\r\n\t\t\t\tif(tmp) {\r\n\t\t\t\t\tchd.push(tmp);\r\n\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\tp.children = chd;\r\n\t\t\tp.children_d = dpc;\r\n\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when new data is inserted to the tree model\r\n\t\t\t * @event\r\n\t\t\t * @name model.jstree\r\n\t\t\t * @param {Array} nodes an array of node IDs\r\n\t\t\t * @param {String} parent the parent ID of the nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, 'parent' : par });\r\n\t\t\tif(par !== $.jstree.root) {\r\n\t\t\t\tthis._node_changed(par);\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.get_container_ul().children('.jstree-initial-node').remove();\r\n\t\t\t\tthis.redraw(true);\r\n\t\t\t}\r\n\t\t\tif(this._data.core.selected.length !== s) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\r\n\t\t\t}\r\n\t\t\tcb.call(this, true);\r\n\t\t},\r\n\t\t/**\r\n\t\t * appends JSON content to the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name _append_json_data(obj, data)\r\n\t\t * @param  {mixed} obj the node to append to\r\n\t\t * @param  {String} data the JSON object to parse and append\r\n\t\t * @param  {Boolean} force_processing internal param - do not set\r\n\t\t * @trigger model.jstree, changed.jstree\r\n\t\t */\r\n\t\t_append_json_data : function (dom, data, cb, force_processing) {\r\n\t\t\tif(this.element === null) { return; }\r\n\t\t\tdom = this.get_node(dom);\r\n\t\t\tdom.children = [];\r\n\t\t\tdom.children_d = [];\r\n\t\t\t// *%$@!!!\r\n\t\t\tif(data.d) {\r\n\t\t\t\tdata = data.d;\r\n\t\t\t\tif(typeof data === \"string\") {\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!$.isArray(data)) { data = [data]; }\r\n\t\t\tvar w = null,\r\n\t\t\t\targs = {\r\n\t\t\t\t\t'df'\t: this._model.default_state,\r\n\t\t\t\t\t'dat'\t: data,\r\n\t\t\t\t\t'par'\t: dom.id,\r\n\t\t\t\t\t'm'\t\t: this._model.data,\r\n\t\t\t\t\t't_id'\t: this._id,\r\n\t\t\t\t\t't_cnt'\t: this._cnt,\r\n\t\t\t\t\t'sel'\t: this._data.core.selected\r\n\t\t\t\t},\r\n\t\t\t\tfunc = function (data, undefined) {\r\n\t\t\t\t\tif(data.data) { data = data.data; }\r\n\t\t\t\t\tvar dat = data.dat,\r\n\t\t\t\t\t\tpar = data.par,\r\n\t\t\t\t\t\tchd = [],\r\n\t\t\t\t\t\tdpc = [],\r\n\t\t\t\t\t\tadd = [],\r\n\t\t\t\t\t\tdf = data.df,\r\n\t\t\t\t\t\tt_id = data.t_id,\r\n\t\t\t\t\t\tt_cnt = data.t_cnt,\r\n\t\t\t\t\t\tm = data.m,\r\n\t\t\t\t\t\tp = m[par],\r\n\t\t\t\t\t\tsel = data.sel,\r\n\t\t\t\t\t\ttmp, i, j, rslt,\r\n\t\t\t\t\t\tparse_flat = function (d, p, ps) {\r\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\r\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\r\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\t\t\t\t\tvar tid = d.id.toString(),\r\n\t\t\t\t\t\t\t\ti, j, c, e,\r\n\t\t\t\t\t\t\t\ttmp = {\r\n\t\t\t\t\t\t\t\t\tid\t\t\t: tid,\r\n\t\t\t\t\t\t\t\t\ttext\t\t: d.text || '',\r\n\t\t\t\t\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\t\t\t\t\tchildren\t: d.children || [],\r\n\t\t\t\t\t\t\t\t\tchildren_d\t: d.children_d || [],\r\n\t\t\t\t\t\t\t\t\tdata\t\t: d.data,\r\n\t\t\t\t\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\t\t\t\t\toriginal\t: false\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tfor(i in df) {\r\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\t\t\t\t\ttmp.icon = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data) {\r\n\t\t\t\t\t\t\t\ttmp.data = d.data;\r\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tid;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\t\t\t\t\ttmp.children = [];\r\n\t\t\t\t\t\t\t\ttmp.children_d = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\r\n\t\t\t\t\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tc = parse_flat(m[tmp.children[i]], tmp.id, ps);\r\n\t\t\t\t\t\t\t\te = m[c];\r\n\t\t\t\t\t\t\t\ttmp.children_d.push(c);\r\n\t\t\t\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdelete d.data;\r\n\t\t\t\t\t\t\tdelete d.children;\r\n\t\t\t\t\t\t\tm[tmp.id].original = d;\r\n\t\t\t\t\t\t\tif(tmp.state.selected) {\r\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn tmp.id;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tparse_nest = function (d, p, ps) {\r\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\r\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\r\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\t\t\t\t\tvar tid = false, i, j, c, e, tmp;\r\n\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\ttid = 'j' + t_id + '_' + (++t_cnt);\r\n\t\t\t\t\t\t\t} while(m[tid]);\r\n\r\n\t\t\t\t\t\t\ttmp = {\r\n\t\t\t\t\t\t\t\tid\t\t\t: false,\r\n\t\t\t\t\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\r\n\t\t\t\t\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\t\t\t\tchildren\t: [],\r\n\t\t\t\t\t\t\t\tchildren_d\t: [],\r\n\t\t\t\t\t\t\t\tdata\t\t: null,\r\n\t\t\t\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\t\t\t\toriginal\t: false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tfor(i in df) {\r\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\r\n\t\t\t\t\t\t\tif(d && d.text) { tmp.text = d.text; }\r\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\t\t\t\t\ttmp.icon = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data) {\r\n\t\t\t\t\t\t\t\ttmp.data = d.data;\r\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.li_attr.id && !tmp.id) {\r\n\t\t\t\t\t\t\t\ttmp.id = tmp.li_attr.id.toString();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.id) {\r\n\t\t\t\t\t\t\t\ttmp.id = tid;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tmp.id;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children.length) {\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc = parse_nest(d.children[i], tmp.id, ps);\r\n\t\t\t\t\t\t\t\t\te = m[c];\r\n\t\t\t\t\t\t\t\t\ttmp.children.push(c);\r\n\t\t\t\t\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\t\t\t\t\ttmp.children = [];\r\n\t\t\t\t\t\t\t\ttmp.children_d = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdelete d.data;\r\n\t\t\t\t\t\t\tdelete d.children;\r\n\t\t\t\t\t\t\ttmp.original = d;\r\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\r\n\t\t\t\t\t\t\tif(tmp.state.selected) {\r\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn tmp.id;\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif(dat.length && dat[0].id !== undefined && dat[0].parent !== undefined) {\r\n\t\t\t\t\t\t// Flat JSON support (for easy import from DB):\r\n\t\t\t\t\t\t// 1) convert to object (foreach)\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\tif(!dat[i].children) {\r\n\t\t\t\t\t\t\t\tdat[i].children = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!dat[i].state) {\r\n\t\t\t\t\t\t\t\tdat[i].state = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[dat[i].id.toString()] = dat[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 2) populate children (foreach)\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\tif (!m[dat[i].parent.toString()]) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'parse', 'plugin' : 'core', 'id' : 'core_07', 'reason' : 'Node with invalid parent', 'data' : JSON.stringify({ 'id' : dat[i].id.toString(), 'parent' : dat[i].parent.toString() }) };\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tm[dat[i].parent.toString()].children.push(dat[i].id.toString());\r\n\t\t\t\t\t\t\t// populate parent.children_d\r\n\t\t\t\t\t\t\tp.children_d.push(dat[i].id.toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 3) normalize && populate parents and children_d with recursion\r\n\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = parse_flat(m[p.children[i]], par, p.parents.concat());\r\n\t\t\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// ?) three_state selection - p.state.selected && t - (if three_state foreach(dat => ch) -> foreach(parents) if(parent.selected) child.selected = true;\r\n\t\t\t\t\t\trslt = {\r\n\t\t\t\t\t\t\t'cnt' : t_cnt,\r\n\t\t\t\t\t\t\t'mod' : m,\r\n\t\t\t\t\t\t\t'sel' : sel,\r\n\t\t\t\t\t\t\t'par' : par,\r\n\t\t\t\t\t\t\t'dpc' : dpc,\r\n\t\t\t\t\t\t\t'add' : add\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = parse_nest(dat[i], par, p.parents.concat());\r\n\t\t\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\t\t\tchd.push(tmp);\r\n\t\t\t\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tp.children = chd;\r\n\t\t\t\t\t\tp.children_d = dpc;\r\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trslt = {\r\n\t\t\t\t\t\t\t'cnt' : t_cnt,\r\n\t\t\t\t\t\t\t'mod' : m,\r\n\t\t\t\t\t\t\t'sel' : sel,\r\n\t\t\t\t\t\t\t'par' : par,\r\n\t\t\t\t\t\t\t'dpc' : dpc,\r\n\t\t\t\t\t\t\t'add' : add\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof window === 'undefined' || typeof window.document === 'undefined') {\r\n\t\t\t\t\t\tpostMessage(rslt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn rslt;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\trslt = function (rslt, worker) {\r\n\t\t\t\t\tif(this.element === null) { return; }\r\n\t\t\t\t\tthis._cnt = rslt.cnt;\r\n\t\t\t\t\tvar i, m = this._model.data;\r\n\t\t\t\t\tfor (i in m) {\r\n\t\t\t\t\t\tif (m.hasOwnProperty(i) && m[i].state && m[i].state.loading && rslt.mod[i]) {\r\n\t\t\t\t\t\t\trslt.mod[i].state.loading = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._model.data = rslt.mod; // breaks the reference in load_node - careful\r\n\r\n\t\t\t\t\tif(worker) {\r\n\t\t\t\t\t\tvar j, a = rslt.add, r = rslt.sel, s = this._data.core.selected.slice();\r\n\t\t\t\t\t\tm = this._model.data;\r\n\t\t\t\t\t\t// if selection was changed while calculating in worker\r\n\t\t\t\t\t\tif(r.length !== s.length || $.vakata.array_unique(r.concat(s)).length !== r.length) {\r\n\t\t\t\t\t\t\t// deselect nodes that are no longer selected\r\n\t\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif($.inArray(r[i], a) === -1 && $.inArray(r[i], s) === -1) {\r\n\t\t\t\t\t\t\t\t\tm[r[i]].state.selected = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// select nodes that were selected in the mean time\r\n\t\t\t\t\t\t\tfor(i = 0, j = s.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif($.inArray(s[i], r) === -1) {\r\n\t\t\t\t\t\t\t\t\tm[s[i]].state.selected = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(rslt.add.length) {\r\n\t\t\t\t\t\tthis._data.core.selected = this._data.core.selected.concat(rslt.add);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.trigger('model', { \"nodes\" : rslt.dpc, 'parent' : rslt.par });\r\n\r\n\t\t\t\t\tif(rslt.par !== $.jstree.root) {\r\n\t\t\t\t\t\tthis._node_changed(rslt.par);\r\n\t\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// this.get_container_ul().children('.jstree-initial-node').remove();\r\n\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(rslt.add.length) {\r\n\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcb.call(this, true);\r\n\t\t\t\t};\r\n\t\t\tif(this.settings.core.worker && window.Blob && window.URL && window.Worker) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif(this._wrk === null) {\r\n\t\t\t\t\t\tthis._wrk = window.URL.createObjectURL(\r\n\t\t\t\t\t\t\tnew window.Blob(\r\n\t\t\t\t\t\t\t\t['self.onmessage = ' + func.toString()],\r\n\t\t\t\t\t\t\t\t{type:\"text/javascript\"}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!this._data.core.working || force_processing) {\r\n\t\t\t\t\t\tthis._data.core.working = true;\r\n\t\t\t\t\t\tw = new window.Worker(this._wrk);\r\n\t\t\t\t\t\tw.onmessage = $.proxy(function (e) {\r\n\t\t\t\t\t\t\trslt.call(this, e.data, true);\r\n\t\t\t\t\t\t\ttry { w.terminate(); w = null; } catch(ignore) { }\r\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tif(!args.par) {\r\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tw.postMessage(args);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._data.core.worker_queue.push([dom, data, cb, true]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e) {\r\n\t\t\t\t\trslt.call(this, func(args), false);\r\n\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trslt.call(this, func(args), false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a jQuery object and appends them to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_html(d [, p, ps])\r\n\t\t * @param  {jQuery} d the jQuery object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_html : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = [].concat(ps); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar c, e, m = this._model.data,\r\n\t\t\t\tdata = {\r\n\t\t\t\t\tid\t\t\t: false,\r\n\t\t\t\t\ttext\t\t: false,\r\n\t\t\t\t\ticon\t\t: true,\r\n\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\tchildren\t: [],\r\n\t\t\t\t\tchildren_d\t: [],\r\n\t\t\t\t\tdata\t\t: null,\r\n\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\toriginal\t: false\r\n\t\t\t\t}, i, tmp, tid;\r\n\t\t\tfor(i in this._model.default_state) {\r\n\t\t\t\tif(this._model.default_state.hasOwnProperty(i)) {\r\n\t\t\t\t\tdata.state[i] = this._model.default_state[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = $.vakata.attributes(d, true);\r\n\t\t\t$.each(tmp, function (i, v) {\r\n\t\t\t\tv = $.trim(v);\r\n\t\t\t\tif(!v.length) { return true; }\r\n\t\t\t\tdata.li_attr[i] = v;\r\n\t\t\t\tif(i === 'id') {\r\n\t\t\t\t\tdata.id = v.toString();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttmp = d.children('a').first();\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\ttmp = $.vakata.attributes(tmp, true);\r\n\t\t\t\t$.each(tmp, function (i, v) {\r\n\t\t\t\t\tv = $.trim(v);\r\n\t\t\t\t\tif(v.length) {\r\n\t\t\t\t\t\tdata.a_attr[i] = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"a\").first().length ? d.children(\"a\").first().clone() : d.clone();\r\n\t\t\ttmp.children(\"ins, i, ul\").remove();\r\n\t\t\ttmp = tmp.html();\r\n\t\t\ttmp = $('<div />').html(tmp);\r\n\t\t\tdata.text = this.settings.core.force_text ? tmp.text() : tmp.html();\r\n\t\t\ttmp = d.data();\r\n\t\t\tdata.data = tmp ? $.extend(true, {}, tmp) : null;\r\n\t\t\tdata.state.opened = d.hasClass('jstree-open');\r\n\t\t\tdata.state.selected = d.children('a').hasClass('jstree-clicked');\r\n\t\t\tdata.state.disabled = d.children('a').hasClass('jstree-disabled');\r\n\t\t\tif(data.data && data.data.jstree) {\r\n\t\t\t\tfor(i in data.data.jstree) {\r\n\t\t\t\t\tif(data.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tdata.state[i] = data.data.jstree[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"a\").children(\".jstree-themeicon\");\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\tdata.icon = tmp.hasClass('jstree-themeicon-hidden') ? false : tmp.attr('rel');\r\n\t\t\t}\r\n\t\t\tif(data.state.icon !== undefined) {\r\n\t\t\t\tdata.icon = data.state.icon;\r\n\t\t\t}\r\n\t\t\tif(data.icon === undefined || data.icon === null || data.icon === \"\") {\r\n\t\t\t\tdata.icon = true;\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"ul\").children(\"li\");\r\n\t\t\tdo {\r\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\r\n\t\t\t} while(m[tid]);\r\n\t\t\tdata.id = data.li_attr.id ? data.li_attr.id.toString() : tid;\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\ttmp.each($.proxy(function (i, v) {\r\n\t\t\t\t\tc = this._parse_model_from_html($(v), data.id, ps);\r\n\t\t\t\t\te = this._model.data[c];\r\n\t\t\t\t\tdata.children.push(c);\r\n\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\tdata.children_d = data.children_d.concat(e.children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this));\r\n\t\t\t\tdata.children_d = data.children_d.concat(data.children);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(d.hasClass('jstree-closed')) {\r\n\t\t\t\t\tdata.state.loaded = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(data.li_attr['class']) {\r\n\t\t\t\tdata.li_attr['class'] = data.li_attr['class'].replace('jstree-closed','').replace('jstree-open','');\r\n\t\t\t}\r\n\t\t\tif(data.a_attr['class']) {\r\n\t\t\t\tdata.a_attr['class'] = data.a_attr['class'].replace('jstree-clicked','').replace('jstree-disabled','');\r\n\t\t\t}\r\n\t\t\tm[data.id] = data;\r\n\t\t\tif(data.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(data.id);\r\n\t\t\t}\r\n\t\t\treturn data.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a JSON object (used when dealing with flat data, which has no nesting of children, but has id and parent properties) and appends it to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_flat_json(d [, p, ps])\r\n\t\t * @param  {Object} d the JSON object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_flat_json : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = ps.concat(); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar tid = d.id.toString(),\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tdf = this._model.default_state,\r\n\t\t\t\ti, j, c, e,\r\n\t\t\t\ttmp = {\r\n\t\t\t\t\tid\t\t\t: tid,\r\n\t\t\t\t\ttext\t\t: d.text || '',\r\n\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\tchildren\t: d.children || [],\r\n\t\t\t\t\tchildren_d\t: d.children_d || [],\r\n\t\t\t\t\tdata\t\t: d.data,\r\n\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\toriginal\t: false\r\n\t\t\t\t};\r\n\t\t\tfor(i in df) {\r\n\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t}\r\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\ttmp.icon = true;\r\n\t\t\t}\r\n\t\t\tif(d && d.data) {\r\n\t\t\t\ttmp.data = d.data;\r\n\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\ttmp.li_attr.id = tid;\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t\ttmp.children_d = [];\r\n\t\t\t}\r\n\t\t\tm[tmp.id] = tmp;\r\n\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\r\n\t\t\t\tc = this._parse_model_from_flat_json(m[tmp.children[i]], tmp.id, ps);\r\n\t\t\t\te = m[c];\r\n\t\t\t\ttmp.children_d.push(c);\r\n\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete d.data;\r\n\t\t\tdelete d.children;\r\n\t\t\tm[tmp.id].original = d;\r\n\t\t\tif(tmp.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(tmp.id);\r\n\t\t\t}\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a JSON object and appends it to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_json(d [, p, ps])\r\n\t\t * @param  {Object} d the JSON object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_json : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = ps.concat(); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar tid = false, i, j, c, e, m = this._model.data, df = this._model.default_state, tmp;\r\n\t\t\tdo {\r\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\r\n\t\t\t} while(m[tid]);\r\n\r\n\t\t\ttmp = {\r\n\t\t\t\tid\t\t\t: false,\r\n\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\r\n\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\r\n\t\t\t\tparent\t\t: p,\r\n\t\t\t\tparents\t\t: ps,\r\n\t\t\t\tchildren\t: [],\r\n\t\t\t\tchildren_d\t: [],\r\n\t\t\t\tdata\t\t: null,\r\n\t\t\t\tstate\t\t: { },\r\n\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\toriginal\t: false\r\n\t\t\t};\r\n\t\t\tfor(i in df) {\r\n\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\r\n\t\t\tif(d && d.text) { tmp.text = d.text; }\r\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t}\r\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\ttmp.icon = true;\r\n\t\t\t}\r\n\t\t\tif(d && d.data) {\r\n\t\t\t\ttmp.data = d.data;\r\n\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(tmp.li_attr.id && !tmp.id) {\r\n\t\t\t\ttmp.id = tmp.li_attr.id.toString();\r\n\t\t\t}\r\n\t\t\tif(!tmp.id) {\r\n\t\t\t\ttmp.id = tid;\r\n\t\t\t}\r\n\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\ttmp.li_attr.id = tmp.id;\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children.length) {\r\n\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\r\n\t\t\t\t\tc = this._parse_model_from_json(d.children[i], tmp.id, ps);\r\n\t\t\t\t\te = m[c];\r\n\t\t\t\t\ttmp.children.push(c);\r\n\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t\ttmp.children_d = [];\r\n\t\t\t}\r\n\t\t\tdelete d.data;\r\n\t\t\tdelete d.children;\r\n\t\t\ttmp.original = d;\r\n\t\t\tm[tmp.id] = tmp;\r\n\t\t\tif(tmp.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(tmp.id);\r\n\t\t\t}\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws all nodes that need to be redrawn. Used internally.\r\n\t\t * @private\r\n\t\t * @name _redraw()\r\n\t\t * @trigger redraw.jstree\r\n\t\t */\r\n\t\t_redraw : function () {\r\n\t\t\tvar nodes = this._model.force_full_redraw ? this._model.data[$.jstree.root].children.concat([]) : this._model.changed.concat([]),\r\n\t\t\t\tf = document.createElement('UL'), tmp, i, j, fe = this._data.core.focused;\r\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\ttmp = this.redraw_node(nodes[i], true, this._model.force_full_redraw);\r\n\t\t\t\tif(tmp && this._model.force_full_redraw) {\r\n\t\t\t\t\tf.appendChild(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this._model.force_full_redraw) {\r\n\t\t\t\tf.className = this.get_container_ul()[0].className;\r\n\t\t\t\tf.setAttribute('role','group');\r\n\t\t\t\tthis.element.empty().append(f);\r\n\t\t\t\t//this.get_container_ul()[0].appendChild(f);\r\n\t\t\t}\r\n\t\t\tif(fe !== null) {\r\n\t\t\t\ttmp = this.get_node(fe, true);\r\n\t\t\t\tif(tmp && tmp.length && tmp.children('.jstree-anchor')[0] !== document.activeElement) {\r\n\t\t\t\t\ttmp.children('.jstree-anchor').focus();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = false;\r\n\t\t\tthis._model.changed = [];\r\n\t\t\t/**\r\n\t\t\t * triggered after nodes are redrawn\r\n\t\t\t * @event\r\n\t\t\t * @name redraw.jstree\r\n\t\t\t * @param {array} nodes the redrawn nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('redraw', { \"nodes\" : nodes });\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws all nodes that need to be redrawn or optionally - the whole tree\r\n\t\t * @name redraw([full])\r\n\t\t * @param {Boolean} full if set to `true` all nodes are redrawn.\r\n\t\t */\r\n\t\tredraw : function (full) {\r\n\t\t\tif(full) {\r\n\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t}\r\n\t\t\t//if(this._model.redraw_timeout) {\r\n\t\t\t//\tclearTimeout(this._model.redraw_timeout);\r\n\t\t\t//}\r\n\t\t\t//this._model.redraw_timeout = setTimeout($.proxy(this._redraw, this),0);\r\n\t\t\tthis._redraw();\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws a single node's children. Used internally.\r\n\t\t * @private\r\n\t\t * @name draw_children(node)\r\n\t\t * @param {mixed} node the node whose children will be redrawn\r\n\t\t */\r\n\t\tdraw_children : function (node) {\r\n\t\t\tvar obj = this.get_node(node),\r\n\t\t\t\ti = false,\r\n\t\t\t\tj = false,\r\n\t\t\t\tk = false,\r\n\t\t\t\td = document;\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(obj.id === $.jstree.root) { return this.redraw(true); }\r\n\t\t\tnode = this.get_node(node, true);\r\n\t\t\tif(!node || !node.length) { return false; } // TODO: quick toggle\r\n\r\n\t\t\tnode.children('.jstree-children').remove();\r\n\t\t\tnode = node[0];\r\n\t\t\tif(obj.children.length && obj.state.loaded) {\r\n\t\t\t\tk = d.createElement('UL');\r\n\t\t\t\tk.setAttribute('role', 'group');\r\n\t\t\t\tk.className = 'jstree-children';\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], true, true));\r\n\t\t\t\t}\r\n\t\t\t\tnode.appendChild(k);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws a single node. Used internally.\r\n\t\t * @private\r\n\t\t * @name redraw_node(node, deep, is_callback, force_render)\r\n\t\t * @param {mixed} node the node to redraw\r\n\t\t * @param {Boolean} deep should child nodes be redrawn too\r\n\t\t * @param {Boolean} is_callback is this a recursion call\r\n\t\t * @param {Boolean} force_render should children of closed parents be drawn anyway\r\n\t\t */\r\n\t\tredraw_node : function (node, deep, is_callback, force_render) {\r\n\t\t\tvar obj = this.get_node(node),\r\n\t\t\t\tpar = false,\r\n\t\t\t\tind = false,\r\n\t\t\t\told = false,\r\n\t\t\t\ti = false,\r\n\t\t\t\tj = false,\r\n\t\t\t\tk = false,\r\n\t\t\t\tc = '',\r\n\t\t\t\td = document,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tf = false,\r\n\t\t\t\ts = false,\r\n\t\t\t\ttmp = null,\r\n\t\t\t\tt = 0,\r\n\t\t\t\tl = 0,\r\n\t\t\t\thas_children = false,\r\n\t\t\t\tlast_sibling = false;\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(obj.id === $.jstree.root) {  return this.redraw(true); }\r\n\t\t\tdeep = deep || obj.children.length === 0;\r\n\t\t\tnode = !document.querySelector ? document.getElementById(obj.id) : this.element[0].querySelector('#' + (\"0123456789\".indexOf(obj.id[0]) !== -1 ? '\\\\3' + obj.id[0] + ' ' + obj.id.substr(1).replace($.jstree.idregex,'\\\\$&') : obj.id.replace($.jstree.idregex,'\\\\$&')) ); //, this.element);\r\n\t\t\tif(!node) {\r\n\t\t\t\tdeep = true;\r\n\t\t\t\t//node = d.createElement('LI');\r\n\t\t\t\tif(!is_callback) {\r\n\t\t\t\t\tpar = obj.parent !== $.jstree.root ? $('#' + obj.parent.replace($.jstree.idregex,'\\\\$&'), this.element)[0] : null;\r\n\t\t\t\t\tif(par !== null && (!par || !m[obj.parent].state.opened)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tind = $.inArray(obj.id, par === null ? m[$.jstree.root].children : m[obj.parent].children);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode = $(node);\r\n\t\t\t\tif(!is_callback) {\r\n\t\t\t\t\tpar = node.parent().parent()[0];\r\n\t\t\t\t\tif(par === this.element[0]) {\r\n\t\t\t\t\t\tpar = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tind = node.index();\r\n\t\t\t\t}\r\n\t\t\t\t// m[obj.id].data = node.data(); // use only node's data, no need to touch jquery storage\r\n\t\t\t\tif(!deep && obj.children.length && !node.children('.jstree-children').length) {\r\n\t\t\t\t\tdeep = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(!deep) {\r\n\t\t\t\t\told = node.children('.jstree-children')[0];\r\n\t\t\t\t}\r\n\t\t\t\tf = node.children('.jstree-anchor')[0] === document.activeElement;\r\n\t\t\t\tnode.remove();\r\n\t\t\t\t//node = d.createElement('LI');\r\n\t\t\t\t//node = node[0];\r\n\t\t\t}\r\n\t\t\tnode = this._data.core.node.cloneNode(true);\r\n\t\t\t// node is DOM, deep is boolean\r\n\r\n\t\t\tc = 'jstree-node ';\r\n\t\t\tfor(i in obj.li_attr) {\r\n\t\t\t\tif(obj.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\tif(i === 'id') { continue; }\r\n\t\t\t\t\tif(i !== 'class') {\r\n\t\t\t\t\t\tnode.setAttribute(i, obj.li_attr[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tc += obj.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!obj.a_attr.id) {\r\n\t\t\t\tobj.a_attr.id = obj.id + '_anchor';\r\n\t\t\t}\r\n\t\t\tnode.setAttribute('aria-selected', !!obj.state.selected);\r\n\t\t\tnode.setAttribute('aria-level', obj.parents.length);\r\n\t\t\tnode.setAttribute('aria-labelledby', obj.a_attr.id);\r\n\t\t\tif(obj.state.disabled) {\r\n\t\t\t\tnode.setAttribute('aria-disabled', true);\r\n\t\t\t}\r\n\r\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\tif(!m[obj.children[i]].state.hidden) {\r\n\t\t\t\t\thas_children = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(obj.parent !== null && m[obj.parent] && !obj.state.hidden) {\r\n\t\t\t\ti = $.inArray(obj.id, m[obj.parent].children);\r\n\t\t\t\tlast_sibling = obj.id;\r\n\t\t\t\tif(i !== -1) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tfor(j = m[obj.parent].children.length; i < j; i++) {\r\n\t\t\t\t\t\tif(!m[m[obj.parent].children[i]].state.hidden) {\r\n\t\t\t\t\t\t\tlast_sibling = m[obj.parent].children[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(last_sibling !== obj.id) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(obj.state.hidden) {\r\n\t\t\t\tc += ' jstree-hidden';\r\n\t\t\t}\r\n\t\t\tif (obj.state.loading) {\r\n\t\t\t\tc += ' jstree-loading';\r\n\t\t\t}\r\n\t\t\tif(obj.state.loaded && !has_children) {\r\n\t\t\t\tc += ' jstree-leaf';\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tc += obj.state.opened && obj.state.loaded ? ' jstree-open' : ' jstree-closed';\r\n\t\t\t\tnode.setAttribute('aria-expanded', (obj.state.opened && obj.state.loaded) );\r\n\t\t\t}\r\n\t\t\tif(last_sibling === obj.id) {\r\n\t\t\t\tc += ' jstree-last';\r\n\t\t\t}\r\n\t\t\tnode.id = obj.id;\r\n\t\t\tnode.className = c;\r\n\t\t\tc = ( obj.state.selected ? ' jstree-clicked' : '') + ( obj.state.disabled ? ' jstree-disabled' : '');\r\n\t\t\tfor(j in obj.a_attr) {\r\n\t\t\t\tif(obj.a_attr.hasOwnProperty(j)) {\r\n\t\t\t\t\tif(j === 'href' && obj.a_attr[j] === '#') { continue; }\r\n\t\t\t\t\tif(j !== 'class') {\r\n\t\t\t\t\t\tnode.childNodes[1].setAttribute(j, obj.a_attr[j]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tc += ' ' + obj.a_attr[j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(c.length) {\r\n\t\t\t\tnode.childNodes[1].className = 'jstree-anchor ' + c;\r\n\t\t\t}\r\n\t\t\tif((obj.icon && obj.icon !== true) || obj.icon === false) {\r\n\t\t\t\tif(obj.icon === false) {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-hidden';\r\n\t\t\t\t}\r\n\t\t\t\telse if(obj.icon.indexOf('/') === -1 && obj.icon.indexOf('.') === -1) {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' ' + obj.icon + ' jstree-themeicon-custom';\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundImage = 'url(\"'+obj.icon+'\")';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundPosition = 'center center';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundSize = 'auto';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-custom';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.settings.core.force_text) {\r\n\t\t\t\tnode.childNodes[1].appendChild(d.createTextNode(obj.text));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode.childNodes[1].innerHTML += obj.text;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif(deep && obj.children.length && (obj.state.opened || force_render) && obj.state.loaded) {\r\n\t\t\t\tk = d.createElement('UL');\r\n\t\t\t\tk.setAttribute('role', 'group');\r\n\t\t\t\tk.className = 'jstree-children';\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], deep, true));\r\n\t\t\t\t}\r\n\t\t\t\tnode.appendChild(k);\r\n\t\t\t}\r\n\t\t\tif(old) {\r\n\t\t\t\tnode.appendChild(old);\r\n\t\t\t}\r\n\t\t\tif(!is_callback) {\r\n\t\t\t\t// append back using par / ind\r\n\t\t\t\tif(!par) {\r\n\t\t\t\t\tpar = this.element[0];\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0, j = par.childNodes.length; i < j; i++) {\r\n\t\t\t\t\tif(par.childNodes[i] && par.childNodes[i].className && par.childNodes[i].className.indexOf('jstree-children') !== -1) {\r\n\t\t\t\t\t\ttmp = par.childNodes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!tmp) {\r\n\t\t\t\t\ttmp = d.createElement('UL');\r\n\t\t\t\t\ttmp.setAttribute('role', 'group');\r\n\t\t\t\t\ttmp.className = 'jstree-children';\r\n\t\t\t\t\tpar.appendChild(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tpar = tmp;\r\n\r\n\t\t\t\tif(ind < par.childNodes.length) {\r\n\t\t\t\t\tpar.insertBefore(node, par.childNodes[ind]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpar.appendChild(node);\r\n\t\t\t\t}\r\n\t\t\t\tif(f) {\r\n\t\t\t\t\tt = this.element[0].scrollTop;\r\n\t\t\t\t\tl = this.element[0].scrollLeft;\r\n\t\t\t\t\tnode.childNodes[1].focus();\r\n\t\t\t\t\tthis.element[0].scrollTop = t;\r\n\t\t\t\t\tthis.element[0].scrollLeft = l;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(obj.state.opened && !obj.state.loaded) {\r\n\t\t\t\tobj.state.opened = false;\r\n\t\t\t\tsetTimeout($.proxy(function () {\r\n\t\t\t\t\tthis.open_node(obj.id, false, 0);\r\n\t\t\t\t}, this), 0);\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens a node, revaling its children. If the node is not loaded it will be loaded and opened once ready.\r\n\t\t * @name open_node(obj [, callback, animation])\r\n\t\t * @param {mixed} obj the node to open\r\n\t\t * @param {Function} callback a function to execute once the node is opened\r\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the node (overrides the `core.animation` setting). Use `false` for no animation.\r\n\t\t * @trigger open_node.jstree, after_open.jstree, before_open.jstree\r\n\t\t */\r\n\t\topen_node : function (obj, callback, animation) {\r\n\t\t\tvar t1, t2, d, t;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.open_node(obj[t1], callback, animation);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\r\n\t\t\tif(!this.is_closed(obj)) {\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, false);\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!this.is_loaded(obj)) {\r\n\t\t\t\tif(this.is_loading(obj)) {\r\n\t\t\t\t\treturn setTimeout($.proxy(function () {\r\n\t\t\t\t\t\tthis.open_node(obj, callback, animation);\r\n\t\t\t\t\t}, this), 500);\r\n\t\t\t\t}\r\n\t\t\t\tthis.load_node(obj, function (o, ok) {\r\n\t\t\t\t\treturn ok ? this.open_node(o, callback, animation) : (callback ? callback.call(this, o, false) : false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = this.get_node(obj, true);\r\n\t\t\t\tt = this;\r\n\t\t\t\tif(d.length) {\r\n\t\t\t\t\tif(animation && d.children(\".jstree-children\").length) {\r\n\t\t\t\t\t\td.children(\".jstree-children\").stop(true, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(obj.children.length && !this._firstChild(d.children('.jstree-children')[0])) {\r\n\t\t\t\t\t\tthis.draw_children(obj);\r\n\t\t\t\t\t\t//d = this.get_node(obj, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!animation) {\r\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t\t\td[0].className = d[0].className.replace('jstree-closed', 'jstree-open');\r\n\t\t\t\t\t\td[0].setAttribute(\"aria-expanded\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t\t\td\r\n\t\t\t\t\t\t\t.children(\".jstree-children\").css(\"display\",\"none\").end()\r\n\t\t\t\t\t\t\t.removeClass(\"jstree-closed\").addClass(\"jstree-open\").attr(\"aria-expanded\", true)\r\n\t\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true)\r\n\t\t\t\t\t\t\t\t.slideDown(animation, function () {\r\n\t\t\t\t\t\t\t\t\tthis.style.display = \"\";\r\n\t\t\t\t\t\t\t\t\tif (t.element) {\r\n\t\t\t\t\t\t\t\t\t\tt.trigger(\"after_open\", { \"node\" : obj });\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tobj.state.opened = true;\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, true);\r\n\t\t\t\t}\r\n\t\t\t\tif(!d.length) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a node is about to be opened (if the node is supposed to be in the DOM, it will be, but it won't be visible yet)\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name before_open.jstree\r\n\t\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is opened (if there is an animation it will not be completed yet)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name open_node.jstree\r\n\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('open_node', { \"node\" : obj });\r\n\t\t\t\tif(!animation || !d.length) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a node is opened and the animation is complete\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name after_open.jstree\r\n\t\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger(\"after_open\", { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens every parent of a node (node should be loaded)\r\n\t\t * @name _open_to(obj)\r\n\t\t * @param {mixed} obj the node to reveal\r\n\t\t * @private\r\n\t\t */\r\n\t\t_open_to : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar i, j, p = obj.parents;\r\n\t\t\tfor(i = 0, j = p.length; i < j; i+=1) {\r\n\t\t\t\tif(i !== $.jstree.root) {\r\n\t\t\t\t\tthis.open_node(p[i], false, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\r\n\t\t},\r\n\t\t/**\r\n\t\t * closes a node, hiding its children\r\n\t\t * @name close_node(obj [, animation])\r\n\t\t * @param {mixed} obj the node to close\r\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the node (overrides the `core.animation` setting). Use `false` for no animation.\r\n\t\t * @trigger close_node.jstree, after_close.jstree\r\n\t\t */\r\n\t\tclose_node : function (obj, animation) {\r\n\t\t\tvar t1, t2, t, d;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.close_node(obj[t1], animation);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.is_closed(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\r\n\t\t\tt = this;\r\n\t\t\td = this.get_node(obj, true);\r\n\r\n\t\t\tobj.state.opened = false;\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is closed (if there is an animation it will not be complete yet)\r\n\t\t\t * @event\r\n\t\t\t * @name close_node.jstree\r\n\t\t\t * @param {Object} node the closed node\r\n\t\t\t */\r\n\t\t\tthis.trigger('close_node',{ \"node\" : obj });\r\n\t\t\tif(!d.length) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is closed and the animation is complete\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name after_close.jstree\r\n\t\t\t\t * @param {Object} node the closed node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(!animation) {\r\n\t\t\t\t\td[0].className = d[0].className.replace('jstree-open', 'jstree-closed');\r\n\t\t\t\t\td.attr(\"aria-expanded\", false).children('.jstree-children').remove();\r\n\t\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\td\r\n\t\t\t\t\t\t.children(\".jstree-children\").attr(\"style\",\"display:block !important\").end()\r\n\t\t\t\t\t\t.removeClass(\"jstree-open\").addClass(\"jstree-closed\").attr(\"aria-expanded\", false)\r\n\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true).slideUp(animation, function () {\r\n\t\t\t\t\t\t\tthis.style.display = \"\";\r\n\t\t\t\t\t\t\td.children('.jstree-children').remove();\r\n\t\t\t\t\t\t\tif (t.element) {\r\n\t\t\t\t\t\t\t\tt.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles a node - closing it if it is open, opening it if it is closed\r\n\t\t * @name toggle_node(obj)\r\n\t\t * @param {mixed} obj the node to toggle\r\n\t\t */\r\n\t\ttoggle_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.toggle_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif(this.is_closed(obj)) {\r\n\t\t\t\treturn this.open_node(obj);\r\n\t\t\t}\r\n\t\t\tif(this.is_open(obj)) {\r\n\t\t\t\treturn this.close_node(obj);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens all nodes within a node (or the tree), revaling their children. If the node is not loaded it will be loaded and opened once ready.\r\n\t\t * @name open_all([obj, animation, original_obj])\r\n\t\t * @param {mixed} obj the node to open recursively, omit to open all nodes in the tree\r\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the nodes, the default is no animation\r\n\t\t * @param {jQuery} reference to the node that started the process (internal use)\r\n\t\t * @trigger open_all.jstree\r\n\t\t */\r\n\t\topen_all : function (obj, animation, original_obj) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true), i, j, _this;\r\n\t\t\tif(!dom.length) {\r\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\tif(this.is_closed(this._model.data[obj.children_d[i]])) {\r\n\t\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this.trigger('open_all', { \"node\" : obj });\r\n\t\t\t}\r\n\t\t\toriginal_obj = original_obj || dom;\r\n\t\t\t_this = this;\r\n\t\t\tdom = this.is_closed(obj) ? dom.find('.jstree-closed').addBack() : dom.find('.jstree-closed');\r\n\t\t\tdom.each(function () {\r\n\t\t\t\t_this.open_node(\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\tfunction(node, status) { if(status && this.is_parent(node)) { this.open_all(node, animation, original_obj); } },\r\n\t\t\t\t\tanimation || 0\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\tif(original_obj.find('.jstree-closed').length === 0) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an `open_all` call completes\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name open_all.jstree\r\n\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('open_all', { \"node\" : this.get_node(original_obj) });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * closes all nodes within a node (or the tree), revaling their children\r\n\t\t * @name close_all([obj, animation])\r\n\t\t * @param {mixed} obj the node to close recursively, omit to close all nodes in the tree\r\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the nodes, the default is no animation\r\n\t\t * @trigger close_all.jstree\r\n\t\t */\r\n\t\tclose_all : function (obj, animation) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true),\r\n\t\t\t\t_this = this, i, j;\r\n\t\t\tif(dom.length) {\r\n\t\t\t\tdom = this.is_open(obj) ? dom.find('.jstree-open').addBack() : dom.find('.jstree-open');\r\n\t\t\t\t$(dom.get().reverse()).each(function () { _this.close_node(this, animation || 0); });\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = false;\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when an `close_all` call completes\r\n\t\t\t * @event\r\n\t\t\t * @name close_all.jstree\r\n\t\t\t * @param {Object} node the closed node\r\n\t\t\t */\r\n\t\t\tthis.trigger('close_all', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is disabled (not selectable)\r\n\t\t * @name is_disabled(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_disabled : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state && obj.state.disabled;\r\n\t\t},\r\n\t\t/**\r\n\t\t * enables a node - so that it can be selected\r\n\t\t * @name enable_node(obj)\r\n\t\t * @param {mixed} obj the node to enable\r\n\t\t * @trigger enable_node.jstree\r\n\t\t */\r\n\t\tenable_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.enable_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.state.disabled = false;\r\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').removeClass('jstree-disabled').attr('aria-disabled', false);\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is enabled\r\n\t\t\t * @event\r\n\t\t\t * @name enable_node.jstree\r\n\t\t\t * @param {Object} node the enabled node\r\n\t\t\t */\r\n\t\t\tthis.trigger('enable_node', { 'node' : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * disables a node - so that it can not be selected\r\n\t\t * @name disable_node(obj)\r\n\t\t * @param {mixed} obj the node to disable\r\n\t\t * @trigger disable_node.jstree\r\n\t\t */\r\n\t\tdisable_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.disable_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.state.disabled = true;\r\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').addClass('jstree-disabled').attr('aria-disabled', true);\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is disabled\r\n\t\t\t * @event\r\n\t\t\t * @name disable_node.jstree\r\n\t\t\t * @param {Object} node the disabled node\r\n\t\t\t */\r\n\t\t\tthis.trigger('disable_node', { 'node' : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * determines if a node is hidden\r\n\t\t * @name is_hidden(obj)\r\n\t\t * @param {mixed} obj the node\r\n\t\t */\r\n\t\tis_hidden : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj.state.hidden === true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides a node - it is still in the structure but will not be visible\r\n\t\t * @name hide_node(obj)\r\n\t\t * @param {mixed} obj the node to hide\r\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\r\n\t\t * @trigger hide_node.jstree\r\n\t\t */\r\n\t\thide_node : function (obj, skip_redraw) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.hide_node(obj[t1], true);\r\n\t\t\t\t}\r\n\t\t\t\tif (!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!obj.state.hidden) {\r\n\t\t\t\tobj.state.hidden = true;\r\n\t\t\t\tthis._node_changed(obj.parent);\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is hidden\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name hide_node.jstree\r\n\t\t\t\t * @param {Object} node the hidden node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('hide_node', { 'node' : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * shows a node\r\n\t\t * @name show_node(obj)\r\n\t\t * @param {mixed} obj the node to show\r\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\r\n\t\t * @trigger show_node.jstree\r\n\t\t */\r\n\t\tshow_node : function (obj, skip_redraw) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.show_node(obj[t1], true);\r\n\t\t\t\t}\r\n\t\t\t\tif (!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(obj.state.hidden) {\r\n\t\t\t\tobj.state.hidden = false;\r\n\t\t\t\tthis._node_changed(obj.parent);\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is shown\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name show_node.jstree\r\n\t\t\t\t * @param {Object} node the shown node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('show_node', { 'node' : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides all nodes\r\n\t\t * @name hide_all()\r\n\t\t * @trigger hide_all.jstree\r\n\t\t */\r\n\t\thide_all : function (skip_redraw) {\r\n\t\t\tvar i, m = this._model.data, ids = [];\r\n\t\t\tfor(i in m) {\r\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && !m[i].state.hidden) {\r\n\t\t\t\t\tm[i].state.hidden = true;\r\n\t\t\t\t\tids.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_all.jstree\r\n\t\t\t * @param {Array} nodes the IDs of all hidden nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_all', { 'nodes' : ids });\r\n\t\t\treturn ids;\r\n\t\t},\r\n\t\t/**\r\n\t\t * shows all nodes\r\n\t\t * @name show_all()\r\n\t\t * @trigger show_all.jstree\r\n\t\t */\r\n\t\tshow_all : function (skip_redraw) {\r\n\t\t\tvar i, m = this._model.data, ids = [];\r\n\t\t\tfor(i in m) {\r\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && m[i].state.hidden) {\r\n\t\t\t\t\tm[i].state.hidden = false;\r\n\t\t\t\t\tids.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_all.jstree\r\n\t\t\t * @param {Array} nodes the IDs of all shown nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_all', { 'nodes' : ids });\r\n\t\t\treturn ids;\r\n\t\t},\r\n\t\t/**\r\n\t\t * called when a node is selected by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name activate_node(obj, e)\r\n\t\t * @param {mixed} obj the node\r\n\t\t * @param {Object} e the related event\r\n\t\t * @trigger activate_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tactivate_node : function (obj, e) {\r\n\t\t\tif(this.is_disabled(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!e || typeof e !== 'object') {\r\n\t\t\t\te = {};\r\n\t\t\t}\r\n\r\n\t\t\t// ensure last_clicked is still in the DOM, make it fresh (maybe it was moved?) and make sure it is still selected, if not - make last_clicked the last selected node\r\n\t\t\tthis._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== undefined ? this.get_node(this._data.core.last_clicked.id) : null;\r\n\t\t\tif(this._data.core.last_clicked && !this._data.core.last_clicked.state.selected) { this._data.core.last_clicked = null; }\r\n\t\t\tif(!this._data.core.last_clicked && this._data.core.selected.length) { this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1]); }\r\n\r\n\t\t\tif(!this.settings.core.multiple || (!e.metaKey && !e.ctrlKey && !e.shiftKey) || (e.shiftKey && (!this._data.core.last_clicked || !this.get_parent(obj) || this.get_parent(obj) !== this._data.core.last_clicked.parent ) )) {\r\n\t\t\t\tif(!this.settings.core.multiple && (e.metaKey || e.ctrlKey || e.shiftKey) && this.is_selected(obj)) {\r\n\t\t\t\t\tthis.deselect_node(obj, false, e);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.deselect_all(true);\r\n\t\t\t\t\tthis.select_node(obj, false, false, e);\r\n\t\t\t\t\tthis._data.core.last_clicked = this.get_node(obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(e.shiftKey) {\r\n\t\t\t\t\tvar o = this.get_node(obj).id,\r\n\t\t\t\t\t\tl = this._data.core.last_clicked.id,\r\n\t\t\t\t\t\tp = this.get_node(this._data.core.last_clicked.parent).children,\r\n\t\t\t\t\t\tc = false,\r\n\t\t\t\t\t\ti, j;\r\n\t\t\t\t\tfor(i = 0, j = p.length; i < j; i += 1) {\r\n\t\t\t\t\t\t// separate IFs work whem o and l are the same\r\n\t\t\t\t\t\tif(p[i] === o) {\r\n\t\t\t\t\t\t\tc = !c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(p[i] === l) {\r\n\t\t\t\t\t\t\tc = !c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!this.is_disabled(p[i]) && (c || p[i] === o || p[i] === l)) {\r\n\t\t\t\t\t\t\tif (!this.is_hidden(p[i])) {\r\n\t\t\t\t\t\t\t\tthis.select_node(p[i], true, false, e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.deselect_node(p[i], true, e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : this.get_node(obj), 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(!this.is_selected(obj)) {\r\n\t\t\t\t\t\tthis.select_node(obj, false, false, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.deselect_node(obj, false, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is clicked or intercated with by the user\r\n\t\t\t * @event\r\n\t\t\t * @name activate_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {Object} event the ooriginal event (if any) which triggered the call (may be an empty object)\r\n\t\t\t */\r\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj), 'event' : e });\r\n\t\t},\r\n\t\t/**\r\n\t\t * applies the hover state on a node, called when a node is hovered by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name hover_node(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @trigger hover_node.jstree\r\n\t\t */\r\n\t\thover_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(!obj || !obj.length || obj.children('.jstree-hovered').length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar o = this.element.find('.jstree-hovered'), t = this.element;\r\n\t\t\tif(o && o.length) { this.dehover_node(o); }\r\n\r\n\t\t\tobj.children('.jstree-anchor').addClass('jstree-hovered');\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is hovered\r\n\t\t\t * @event\r\n\t\t\t * @name hover_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('hover_node', { 'node' : this.get_node(obj) });\r\n\t\t\tsetTimeout(function () { t.attr('aria-activedescendant', obj[0].id); }, 0);\r\n\t\t},\r\n\t\t/**\r\n\t\t * removes the hover state from a nodecalled when a node is no longer hovered by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name dehover_node(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @trigger dehover_node.jstree\r\n\t\t */\r\n\t\tdehover_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(!obj || !obj.length || !obj.children('.jstree-hovered').length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.children('.jstree-anchor').removeClass('jstree-hovered');\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is no longer hovered\r\n\t\t\t * @event\r\n\t\t\t * @name dehover_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('dehover_node', { 'node' : this.get_node(obj) });\r\n\t\t},\r\n\t\t/**\r\n\t\t * select a node\r\n\t\t * @name select_node(obj [, supress_event, prevent_open])\r\n\t\t * @param {mixed} obj an array can be used to select multiple nodes\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @param {Boolean} prevent_open if set to `true` parents of the selected node won't be opened\r\n\t\t * @trigger select_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tselect_node : function (obj, supress_event, prevent_open, e) {\r\n\t\t\tvar dom, t1, t2, th;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.select_node(obj[t1], supress_event, prevent_open, e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.selected) {\r\n\t\t\t\tobj.state.selected = true;\r\n\t\t\t\tthis._data.core.selected.push(obj.id);\r\n\t\t\t\tif(!prevent_open) {\r\n\t\t\t\t\tdom = this._open_to(obj);\r\n\t\t\t\t}\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.attr('aria-selected', true).children('.jstree-anchor').addClass('jstree-clicked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is selected\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name select_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this select_node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('select_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\tif(!supress_event) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when selection changes\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name changed.jstree\r\n\t\t\t\t\t * @param {Object} node\r\n\t\t\t\t\t * @param {Object} action the action that caused the selection to change\r\n\t\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t\t * @param {Object} event the event (if any) that triggered this changed event\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * deselect a node\r\n\t\t * @name deselect_node(obj [, supress_event])\r\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger deselect_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tdeselect_node : function (obj, supress_event, e) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.deselect_node(obj[t1], supress_event, e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.selected) {\r\n\t\t\t\tobj.state.selected = false;\r\n\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.id);\r\n\t\t\t\tif(dom.length) {\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass('jstree-clicked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is deselected\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name deselect_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this deselect_node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('deselect_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\tif(!supress_event) {\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * select all nodes in the tree\r\n\t\t * @name select_all([supress_event])\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger select_all.jstree, changed.jstree\r\n\t\t */\r\n\t\tselect_all : function (supress_event) {\r\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\r\n\t\t\tthis._data.core.selected = this._model.data[$.jstree.root].children_d.concat();\r\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.redraw(true);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are selected\r\n\t\t\t * @event\r\n\t\t\t * @name select_all.jstree\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t */\r\n\t\t\tthis.trigger('select_all', { 'selected' : this._data.core.selected });\r\n\t\t\tif(!supress_event) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'select_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * deselect all selected nodes\r\n\t\t * @name deselect_all([supress_event])\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger deselect_all.jstree, changed.jstree\r\n\t\t */\r\n\t\tdeselect_all : function (supress_event) {\r\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\r\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._data.core.selected = [];\r\n\t\t\tthis.element.find('.jstree-clicked').removeClass('jstree-clicked').parent().attr('aria-selected', false);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are deselected\r\n\t\t\t * @event\r\n\t\t\t * @name deselect_all.jstree\r\n\t\t\t * @param {Object} node the previous selection\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t */\r\n\t\t\tthis.trigger('deselect_all', { 'selected' : this._data.core.selected, 'node' : tmp });\r\n\t\t\tif(!supress_event) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is selected\r\n\t\t * @name is_selected(obj)\r\n\t\t * @param  {mixed}  obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_selected : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.state.selected;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all selected nodes\r\n\t\t * @name get_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_selected : function (full) {\r\n\t\t\treturn full ? $.map(this._data.core.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.core.selected.slice();\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all top level selected nodes (ignoring children of selected nodes)\r\n\t\t * @name get_top_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_top_selected : function (full) {\r\n\t\t\tvar tmp = this.get_selected(true),\r\n\t\t\t\tobj = {}, i, j, k, l;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tobj[tmp[i].id] = tmp[i];\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\r\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i in obj) {\r\n\t\t\t\tif(obj.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all bottom level selected nodes (ignoring selected parents)\r\n\t\t * @name get_bottom_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_bottom_selected : function (full) {\r\n\t\t\tvar tmp = this.get_selected(true),\r\n\t\t\t\tobj = [], i, j;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tif(!tmp[i].children.length) {\r\n\t\t\t\t\tobj.push(tmp[i].id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the current state of the tree so that it can be restored later with `set_state(state)`. Used internally.\r\n\t\t * @name get_state()\r\n\t\t * @private\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tget_state : function () {\r\n\t\t\tvar state\t= {\r\n\t\t\t\t'core' : {\r\n\t\t\t\t\t'open' : [],\r\n\t\t\t\t\t'loaded' : [],\r\n\t\t\t\t\t'scroll' : {\r\n\t\t\t\t\t\t'left' : this.element.scrollLeft(),\r\n\t\t\t\t\t\t'top' : this.element.scrollTop()\r\n\t\t\t\t\t},\r\n\t\t\t\t\t/*!\r\n\t\t\t\t\t'themes' : {\r\n\t\t\t\t\t\t'name' : this.get_theme(),\r\n\t\t\t\t\t\t'icons' : this._data.core.themes.icons,\r\n\t\t\t\t\t\t'dots' : this._data.core.themes.dots\r\n\t\t\t\t\t},\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t'selected' : []\r\n\t\t\t\t}\r\n\t\t\t}, i;\r\n\t\t\tfor(i in this._model.data) {\r\n\t\t\t\tif(this._model.data.hasOwnProperty(i)) {\r\n\t\t\t\t\tif(i !== $.jstree.root) {\r\n\t\t\t\t\t\tif(this._model.data[i].state.loaded && this.settings.core.loaded_state) {\r\n\t\t\t\t\t\t\tstate.core.loaded.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this._model.data[i].state.opened) {\r\n\t\t\t\t\t\t\tstate.core.open.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this._model.data[i].state.selected) {\r\n\t\t\t\t\t\t\tstate.core.selected.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t},\r\n\t\t/**\r\n\t\t * sets the state of the tree. Used internally.\r\n\t\t * @name set_state(state [, callback])\r\n\t\t * @private\r\n\t\t * @param {Object} state the state to restore. Keep in mind this object is passed by reference and jstree will modify it.\r\n\t\t * @param {Function} callback an optional function to execute once the state is restored.\r\n\t\t * @trigger set_state.jstree\r\n\t\t */\r\n\t\tset_state : function (state, callback) {\r\n\t\t\tif(state) {\r\n\t\t\t\tif(state.core && state.core.selected && state.core.initial_selection === undefined) {\r\n\t\t\t\t\tstate.core.initial_selection = this._data.core.selected.concat([]).sort().join(',');\r\n\t\t\t\t}\r\n\t\t\t\tif(state.core) {\r\n\t\t\t\t\tvar res, n, t, _this, i;\r\n\t\t\t\t\tif(state.core.loaded) {\r\n\t\t\t\t\t\tif(!this.settings.core.loaded_state || !$.isArray(state.core.loaded) || !state.core.loaded.length) {\r\n\t\t\t\t\t\t\tdelete state.core.loaded;\r\n\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._load_nodes(state.core.loaded, function (nodes) {\r\n\t\t\t\t\t\t\t\tdelete state.core.loaded;\r\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.open) {\r\n\t\t\t\t\t\tif(!$.isArray(state.core.open) || !state.core.open.length) {\r\n\t\t\t\t\t\t\tdelete state.core.open;\r\n\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._load_nodes(state.core.open, function (nodes) {\r\n\t\t\t\t\t\t\t\tthis.open_node(nodes, false, 0);\r\n\t\t\t\t\t\t\t\tdelete state.core.open;\r\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.scroll) {\r\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.left !== undefined) {\r\n\t\t\t\t\t\t\tthis.element.scrollLeft(state.core.scroll.left);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.top !== undefined) {\r\n\t\t\t\t\t\t\tthis.element.scrollTop(state.core.scroll.top);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete state.core.scroll;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.selected) {\r\n\t\t\t\t\t\t_this = this;\r\n\t\t\t\t\t\tif (state.core.initial_selection === undefined ||\r\n\t\t\t\t\t\t\tstate.core.initial_selection === this._data.core.selected.concat([]).sort().join(',')\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tthis.deselect_all();\r\n\t\t\t\t\t\t\t$.each(state.core.selected, function (i, v) {\r\n\t\t\t\t\t\t\t\t_this.select_node(v, false, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete state.core.initial_selection;\r\n\t\t\t\t\t\tdelete state.core.selected;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(i in state) {\r\n\t\t\t\t\t\tif(state.hasOwnProperty(i) && i !== \"core\" && $.inArray(i, this.settings.plugins) === -1) {\r\n\t\t\t\t\t\t\tdelete state[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif($.isEmptyObject(state.core)) {\r\n\t\t\t\t\t\tdelete state.core;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif($.isEmptyObject(state)) {\r\n\t\t\t\t\tstate = null;\r\n\t\t\t\t\tif(callback) { callback.call(this); }\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a `set_state` call completes\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name set_state.jstree\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('set_state');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * refreshes the tree - all nodes are reloaded with calls to `load_node`.\r\n\t\t * @name refresh()\r\n\t\t * @param {Boolean} skip_loading an option to skip showing the loading indicator\r\n\t\t * @param {Mixed} forget_state if set to `true` state will not be reapplied, if set to a function (receiving the current state as argument) the result of that function will be used as state\r\n\t\t * @trigger refresh.jstree\r\n\t\t */\r\n\t\trefresh : function (skip_loading, forget_state) {\r\n\t\t\tthis._data.core.state = forget_state === true ? {} : this.get_state();\r\n\t\t\tif(forget_state && $.isFunction(forget_state)) { this._data.core.state = forget_state.call(this, this._data.core.state); }\r\n\t\t\tthis._cnt = 0;\r\n\t\t\tthis._model.data = {};\r\n\t\t\tthis._model.data[$.jstree.root] = {\r\n\t\t\t\tid : $.jstree.root,\r\n\t\t\t\tparent : null,\r\n\t\t\t\tparents : [],\r\n\t\t\t\tchildren : [],\r\n\t\t\t\tchildren_d : [],\r\n\t\t\t\tstate : { loaded : false }\r\n\t\t\t};\r\n\t\t\tthis._data.core.selected = [];\r\n\t\t\tthis._data.core.last_clicked = null;\r\n\t\t\tthis._data.core.focused = null;\r\n\r\n\t\t\tvar c = this.get_container_ul()[0].className;\r\n\t\t\tif(!skip_loading) {\r\n\t\t\t\tthis.element.html(\"<\"+\"ul class='\"+c+\"' role='group'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='treeitem' id='j\"+this._id+\"_loading'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\r\n\t\t\t\tthis.element.attr('aria-activedescendant','j'+this._id+'_loading');\r\n\t\t\t}\r\n\t\t\tthis.load_node($.jstree.root, function (o, s) {\r\n\t\t\t\tif(s) {\r\n\t\t\t\t\tthis.get_container_ul()[0].className = c;\r\n\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\r\n\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.set_state($.extend(true, {}, this._data.core.state), function () {\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * triggered when a `refresh` call completes\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * @name refresh.jstree\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tthis.trigger('refresh');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.core.state = null;\r\n\t\t\t});\r\n\t\t},\r\n\t\t/**\r\n\t\t * refreshes a node in the tree (reload its children) all opened nodes inside that node are reloaded with calls to `load_node`.\r\n\t\t * @name refresh_node(obj)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @trigger refresh_node.jstree\r\n\t\t */\r\n\t\trefresh_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tvar opened = [], to_load = [], s = this._data.core.selected.concat([]);\r\n\t\t\tto_load.push(obj.id);\r\n\t\t\tif(obj.state.opened === true) { opened.push(obj.id); }\r\n\t\t\tthis.get_node(obj, true).find('.jstree-open').each(function() { to_load.push(this.id); opened.push(this.id); });\r\n\t\t\tthis._load_nodes(to_load, $.proxy(function (nodes) {\r\n\t\t\t\tthis.open_node(opened, false, 0);\r\n\t\t\t\tthis.select_node(s);\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is refreshed\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name refresh_node.jstree\r\n\t\t\t\t * @param {Object} node - the refreshed node\r\n\t\t\t\t * @param {Array} nodes - an array of the IDs of the nodes that were reloaded\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('refresh_node', { 'node' : obj, 'nodes' : nodes });\r\n\t\t\t}, this), false, true);\r\n\t\t},\r\n\t\t/**\r\n\t\t * set (change) the ID of a node\r\n\t\t * @name set_id(obj, id)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {String} id the new ID\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger set_id.jstree\r\n\t\t */\r\n\t\tset_id : function (obj, id) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tvar i, j, m = this._model.data, old = obj.id;\r\n\t\t\tid = id.toString();\r\n\t\t\t// update parents (replace current ID with new one in children and children_d)\r\n\t\t\tm[obj.parent].children[$.inArray(obj.id, m[obj.parent].children)] = id;\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tm[obj.parents[i]].children_d[$.inArray(obj.id, m[obj.parents[i]].children_d)] = id;\r\n\t\t\t}\r\n\t\t\t// update children (replace current ID with new one in parent and parents)\r\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\tm[obj.children[i]].parent = id;\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tm[obj.children_d[i]].parents[$.inArray(obj.id, m[obj.children_d[i]].parents)] = id;\r\n\t\t\t}\r\n\t\t\ti = $.inArray(obj.id, this._data.core.selected);\r\n\t\t\tif(i !== -1) { this._data.core.selected[i] = id; }\r\n\t\t\t// update model and obj itself (obj.id, this._model.data[KEY])\r\n\t\t\ti = this.get_node(obj.id, true);\r\n\t\t\tif(i) {\r\n\t\t\t\ti.attr('id', id); //.children('.jstree-anchor').attr('id', id + '_anchor').end().attr('aria-labelledby', id + '_anchor');\r\n\t\t\t\tif(this.element.attr('aria-activedescendant') === obj.id) {\r\n\t\t\t\t\tthis.element.attr('aria-activedescendant', id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete m[obj.id];\r\n\t\t\tobj.id = id;\r\n\t\t\tobj.li_attr.id = id;\r\n\t\t\tm[id] = obj;\r\n\t\t\t/**\r\n\t\t\t * triggered when a node id value is changed\r\n\t\t\t * @event\r\n\t\t\t * @name set_id.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} old the old id\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_id',{ \"node\" : obj, \"new\" : obj.id, \"old\" : old });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the text value of a node\r\n\t\t * @name get_text(obj)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_text : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.text;\r\n\t\t},\r\n\t\t/**\r\n\t\t * set the text value of a node. Used internally, please use `rename_node(obj, val)`.\r\n\t\t * @private\r\n\t\t * @name set_text(obj, val)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to set the text on multiple nodes\r\n\t\t * @param  {String} val the new text value\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger set_text.jstree\r\n\t\t */\r\n\t\tset_text : function (obj, val) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_text(obj[t1], val);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tobj.text = val;\r\n\t\t\tif(this.get_node(obj, true).length) {\r\n\t\t\t\tthis.redraw_node(obj.id);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when a node text value is changed\r\n\t\t\t * @event\r\n\t\t\t * @name set_text.jstree\r\n\t\t\t * @param {Object} obj\r\n\t\t\t * @param {String} text the new value\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_text',{ \"obj\" : obj, \"text\" : val });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets a JSON representation of a node (or the whole tree)\r\n\t\t * @name get_json([obj, options])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Object} options\r\n\t\t * @param  {Boolean} options.no_state do not return state information\r\n\t\t * @param  {Boolean} options.no_id do not return ID\r\n\t\t * @param  {Boolean} options.no_children do not include children\r\n\t\t * @param  {Boolean} options.no_data do not include node data\r\n\t\t * @param  {Boolean} options.no_li_attr do not include LI attributes\r\n\t\t * @param  {Boolean} options.no_a_attr do not include A attributes\r\n\t\t * @param  {Boolean} options.flat return flat JSON instead of nested\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tget_json : function (obj, options, flat) {\r\n\t\t\tobj = this.get_node(obj || $.jstree.root);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(options && options.flat && !flat) { flat = []; }\r\n\t\t\tvar tmp = {\r\n\t\t\t\t'id' : obj.id,\r\n\t\t\t\t'text' : obj.text,\r\n\t\t\t\t'icon' : this.get_icon(obj),\r\n\t\t\t\t'li_attr' : $.extend(true, {}, obj.li_attr),\r\n\t\t\t\t'a_attr' : $.extend(true, {}, obj.a_attr),\r\n\t\t\t\t'state' : {},\r\n\t\t\t\t'data' : options && options.no_data ? false : $.extend(true, $.isArray(obj.data)?[]:{}, obj.data)\r\n\t\t\t\t//( this.get_node(obj, true).length ? this.get_node(obj, true).data() : obj.data ),\r\n\t\t\t}, i, j;\r\n\t\t\tif(options && options.flat) {\r\n\t\t\t\ttmp.parent = obj.parent;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t}\r\n\t\t\tif(!options || !options.no_state) {\r\n\t\t\t\tfor(i in obj.state) {\r\n\t\t\t\t\tif(obj.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = obj.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdelete tmp.state;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_li_attr) {\r\n\t\t\t\tdelete tmp.li_attr;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_a_attr) {\r\n\t\t\t\tdelete tmp.a_attr;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_id) {\r\n\t\t\t\tdelete tmp.id;\r\n\t\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\r\n\t\t\t\t\tdelete tmp.li_attr.id;\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp.a_attr && tmp.a_attr.id) {\r\n\t\t\t\t\tdelete tmp.a_attr.id;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(options && options.flat && obj.id !== $.jstree.root) {\r\n\t\t\t\tflat.push(tmp);\r\n\t\t\t}\r\n\t\t\tif(!options || !options.no_children) {\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tif(options && options.flat) {\r\n\t\t\t\t\t\tthis.get_json(obj.children[i], options, flat);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttmp.children.push(this.get_json(obj.children[i], options));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn options && options.flat ? flat : (obj.id === $.jstree.root ? tmp.children : tmp);\r\n\t\t},\r\n\t\t/**\r\n\t\t * create a new node (do not confuse with load_node)\r\n\t\t * @name create_node([par, node, pos, callback, is_loaded])\r\n\t\t * @param  {mixed}   par       the parent node (to create a root node use either \"#\" (string) or `null`)\r\n\t\t * @param  {mixed}   node      the data for the new node (a valid JSON object, or a simple string with the name)\r\n\t\t * @param  {mixed}   pos       the index at which to insert the node, \"first\" and \"last\" are also supported, default is \"last\"\r\n\t\t * @param  {Function} callback a function to be called once the node is created\r\n\t\t * @param  {Boolean} is_loaded internal argument indicating if the parent node was succesfully loaded\r\n\t\t * @return {String}            the ID of the newly create node\r\n\t\t * @trigger model.jstree, create_node.jstree\r\n\t\t */\r\n\t\tcreate_node : function (par, node, pos, callback, is_loaded) {\r\n\t\t\tif(par === null) { par = $.jstree.root; }\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tpos = pos === undefined ? \"last\" : pos;\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.create_node(par, node, pos, callback, true); });\r\n\t\t\t}\r\n\t\t\tif(!node) { node = { \"text\" : this.get_string('New node') }; }\r\n\t\t\tif(typeof node === \"string\") {\r\n\t\t\t\tnode = { \"text\" : node };\r\n\t\t\t} else {\r\n\t\t\t\tnode = $.extend(true, {}, node);\r\n\t\t\t}\r\n\t\t\tif(node.text === undefined) { node.text = this.get_string('New node'); }\r\n\t\t\tvar tmp, dpc, i, j;\r\n\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\ttmp = this.get_node(par.parent);\r\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children);\r\n\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\ttmp = this.get_node(par.parent);\r\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children) + 1;\r\n\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > par.children.length) { pos = par.children.length; }\r\n\t\t\tif(!node.id) { node.id = true; }\r\n\t\t\tif(!this.check(\"create_node\", node, par, pos)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(node.id === true) { delete node.id; }\r\n\t\t\tnode = this._parse_model_from_json(node, par.id, par.parents.concat());\r\n\t\t\tif(!node) { return false; }\r\n\t\t\ttmp = this.get_node(node);\r\n\t\t\tdpc = [];\r\n\t\t\tdpc.push(node);\r\n\t\t\tdpc = dpc.concat(tmp.children_d);\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : par.id });\r\n\r\n\t\t\tpar.children_d = par.children_d.concat(dpc);\r\n\t\t\tfor(i = 0, j = par.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[par.parents[i]].children_d = this._model.data[par.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\tnode = tmp;\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\ttmp[i >= pos ? i+1 : i] = par.children[i];\r\n\t\t\t}\r\n\t\t\ttmp[pos] = node.id;\r\n\t\t\tpar.children = tmp;\r\n\r\n\t\t\tthis.redraw_node(par, true);\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is created\r\n\t\t\t * @event\r\n\t\t\t * @name create_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the new node among the parent's children\r\n\t\t\t */\r\n\t\t\tthis.trigger('create_node', { \"node\" : this.get_node(node), \"parent\" : par.id, \"position\" : pos });\r\n\t\t\tif(callback) { callback.call(this, this.get_node(node)); }\r\n\t\t\treturn node.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * set the text value of a node\r\n\t\t * @name rename_node(obj, val)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to rename multiple nodes to the same name\r\n\t\t * @param  {String} val the new text value\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger rename_node.jstree\r\n\t\t */\r\n\t\trename_node : function (obj, val) {\r\n\t\t\tvar t1, t2, old;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.rename_node(obj[t1], val);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\told = obj.text;\r\n\t\t\tif(!this.check(\"rename_node\", obj, this.get_parent(obj), val)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.set_text(obj, val); // .apply(this, Array.prototype.slice.call(arguments))\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is renamed\r\n\t\t\t * @event\r\n\t\t\t * @name rename_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} text the new value\r\n\t\t\t * @param {String} old the old value\r\n\t\t\t */\r\n\t\t\tthis.trigger('rename_node', { \"node\" : obj, \"text\" : val, \"old\" : old });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * remove a node\r\n\t\t * @name delete_node(obj)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to delete multiple nodes\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger delete_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tdelete_node : function (obj) {\r\n\t\t\tvar t1, t2, par, pos, tmp, i, j, k, l, c, top, lft;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.delete_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tpar = this.get_node(obj.parent);\r\n\t\t\tpos = $.inArray(obj.id, par.children);\r\n\t\t\tc = false;\r\n\t\t\tif(!this.check(\"delete_node\", obj, par, pos)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(pos !== -1) {\r\n\t\t\t\tpar.children = $.vakata.array_remove(par.children, pos);\r\n\t\t\t}\r\n\t\t\ttmp = obj.children_d.concat([]);\r\n\t\t\ttmp.push(obj.id);\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\r\n\t\t\t\t\treturn $.inArray(v, tmp) === -1;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\r\n\t\t\t\tif(this._model.data[tmp[k]].state.selected) {\r\n\t\t\t\t\tc = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (c) {\r\n\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\r\n\t\t\t\t\treturn $.inArray(v, tmp) === -1;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is deleted\r\n\t\t\t * @event\r\n\t\t\t * @name delete_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t */\r\n\t\t\tthis.trigger('delete_node', { \"node\" : obj, \"parent\" : par.id });\r\n\t\t\tif(c) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'delete_node', 'node' : obj, 'selected' : this._data.core.selected, 'parent' : par.id });\r\n\t\t\t}\r\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\r\n\t\t\t\tdelete this._model.data[tmp[k]];\r\n\t\t\t}\r\n\t\t\tif($.inArray(this._data.core.focused, tmp) !== -1) {\r\n\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\ttop = this.element[0].scrollTop;\r\n\t\t\t\tlft = this.element[0].scrollLeft;\r\n\t\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\t\tif (this._model.data[$.jstree.root].children[0]) {\r\n\t\t\t\t\t\tthis.get_node(this._model.data[$.jstree.root].children[0], true).children('.jstree-anchor').focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.get_node(par, true).children('.jstree-anchor').focus();\r\n\t\t\t\t}\r\n\t\t\t\tthis.element[0].scrollTop  = top;\r\n\t\t\t\tthis.element[0].scrollLeft = lft;\r\n\t\t\t}\r\n\t\t\tthis.redraw_node(par, true);\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if an operation is premitted on the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name check(chk, obj, par, pos)\r\n\t\t * @param  {String} chk the operation to check, can be \"create_node\", \"rename_node\", \"delete_node\", \"copy_node\" or \"move_node\"\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {mixed} par the parent\r\n\t\t * @param  {mixed} pos the position to insert at, or if \"rename_node\" - the new name\r\n\t\t * @param  {mixed} more some various additional information, for example if a \"move_node\" operations is triggered by DND this will be the hovered node\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tcheck : function (chk, obj, par, pos, more) {\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tpar = par && par.id ? par : this.get_node(par);\r\n\t\t\tvar tmp = chk.match(/^move_node|copy_node|create_node$/i) ? par : obj,\r\n\t\t\t\tchc = this.settings.core.check_callback;\r\n\t\t\tif(chk === \"move_node\" || chk === \"copy_node\") {\r\n\t\t\t\tif((!more || !more.is_multi) && (obj.id === par.id || (chk === \"move_node\" && $.inArray(obj.id, par.children) === pos) || $.inArray(par.id, obj.children_d) !== -1)) {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_01', 'reason' : 'Moving parent inside child', 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(tmp && tmp.data) { tmp = tmp.data; }\r\n\t\t\tif(tmp && tmp.functions && (tmp.functions[chk] === false || tmp.functions[chk] === true)) {\r\n\t\t\t\tif(tmp.functions[chk] === false) {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_02', 'reason' : 'Node data prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp.functions[chk];\r\n\t\t\t}\r\n\t\t\tif(chc === false || ($.isFunction(chc) && chc.call(this, chk, obj, par, pos, more) === false) || (chc && chc[chk] === false)) {\r\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_03', 'reason' : 'User config for core.check_callback prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the last error\r\n\t\t * @name last_error()\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tlast_error : function () {\r\n\t\t\treturn this._data.core.last_error;\r\n\t\t},\r\n\t\t/**\r\n\t\t * move a node to a new parent\r\n\t\t * @name move_node(obj, par [, pos, callback, is_loaded])\r\n\t\t * @param  {mixed} obj the node to move, pass an array to move multiple nodes\r\n\t\t * @param  {mixed} par the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\r\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\r\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\r\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\r\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\r\n\t\t * @trigger move_node.jstree\r\n\t\t */\r\n\t\tmove_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\r\n\t\t\tvar t1, t2, old_par, old_pos, new_par, old_ins, is_multi, dpc, tmp, i, j, k, l, p;\r\n\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tpos = pos === undefined ? 0 : pos;\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.move_node(obj, par, pos, callback, true, false, origin); });\r\n\t\t\t}\r\n\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tif(obj.length === 1) {\r\n\t\t\t\t\tobj = obj[0];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//obj = obj.slice();\r\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\tif((tmp = this.move_node(obj[t1], par, pos, callback, is_loaded, false, origin))) {\r\n\t\t\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\t\t\tpos = \"after\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\r\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\r\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\r\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\r\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\r\n\t\t\told_pos = old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1;\r\n\t\t\tif(old_ins && old_ins._id) {\r\n\t\t\t\tobj = old_ins._model.data[obj.id];\r\n\t\t\t}\r\n\r\n\t\t\tif(is_multi) {\r\n\t\t\t\tif((tmp = this.copy_node(obj, par, pos, callback, is_loaded, false, origin))) {\r\n\t\t\t\t\tif(old_ins) { old_ins.delete_node(obj); }\r\n\t\t\t\t\treturn tmp;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t//var m = this._model.data;\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = new_par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\r\n\t\t\tif(!this.check(\"move_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(obj.parent === new_par.id) {\r\n\t\t\t\tdpc = new_par.children.concat();\r\n\t\t\t\ttmp = $.inArray(obj.id, dpc);\r\n\t\t\t\tif(tmp !== -1) {\r\n\t\t\t\t\tdpc = $.vakata.array_remove(dpc, tmp);\r\n\t\t\t\t\tif(pos > tmp) { pos--; }\r\n\t\t\t\t}\r\n\t\t\t\ttmp = [];\r\n\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\ttmp[i >= pos ? i+1 : i] = dpc[i];\r\n\t\t\t\t}\r\n\t\t\t\ttmp[pos] = obj.id;\r\n\t\t\t\tnew_par.children = tmp;\r\n\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// clean old parent and up\r\n\t\t\t\ttmp = obj.children_d.concat();\r\n\t\t\t\ttmp.push(obj.id);\r\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\tdpc = [];\r\n\t\t\t\t\tp = old_ins._model.data[obj.parents[i]].children_d;\r\n\t\t\t\t\tfor(k = 0, l = p.length; k < l; k++) {\r\n\t\t\t\t\t\tif($.inArray(p[k], tmp) === -1) {\r\n\t\t\t\t\t\t\tdpc.push(p[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\told_ins._model.data[obj.parents[i]].children_d = dpc;\r\n\t\t\t\t}\r\n\t\t\t\told_ins._model.data[old_par].children = $.vakata.array_remove_item(old_ins._model.data[old_par].children, obj.id);\r\n\r\n\t\t\t\t// insert into new parent and up\r\n\t\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tdpc = [];\r\n\t\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\r\n\t\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\r\n\t\t\t\t}\r\n\t\t\t\tdpc[pos] = obj.id;\r\n\t\t\t\tnew_par.children = dpc;\r\n\t\t\t\tnew_par.children_d.push(obj.id);\r\n\t\t\t\tnew_par.children_d = new_par.children_d.concat(obj.children_d);\r\n\r\n\t\t\t\t// update object\r\n\t\t\t\tobj.parent = new_par.id;\r\n\t\t\t\ttmp = new_par.parents.concat();\r\n\t\t\t\ttmp.unshift(new_par.id);\r\n\t\t\t\tp = obj.parents.length;\r\n\t\t\t\tobj.parents = tmp;\r\n\r\n\t\t\t\t// update object children\r\n\t\t\t\ttmp = tmp.concat();\r\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[obj.children_d[i]].parents = this._model.data[obj.children_d[i]].parents.slice(0,p*-1);\r\n\t\t\t\t\tArray.prototype.push.apply(this._model.data[obj.children_d[i]].parents, tmp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(old_par === $.jstree.root || new_par.id === $.jstree.root) {\r\n\t\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(!this._model.force_full_redraw) {\r\n\t\t\t\t\tthis._node_changed(old_par);\r\n\t\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t\t}\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(callback) { callback.call(this, obj, new_par, pos); }\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is moved\r\n\t\t\t * @event\r\n\t\t\t * @name move_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the node among the parent's children\r\n\t\t\t * @param {String} old_parent the old parent of the node\r\n\t\t\t * @param {Number} old_position the old position of the node\r\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\r\n\t\t\t * @param {jsTree} old_instance the instance the node came from\r\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\r\n\t\t\t */\r\n\t\t\tthis.trigger('move_node', { \"node\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_pos, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\r\n\t\t\treturn obj.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy a node to a new parent\r\n\t\t * @name copy_node(obj, par [, pos, callback, is_loaded])\r\n\t\t * @param  {mixed} obj the node to copy, pass an array to copy multiple nodes\r\n\t\t * @param  {mixed} par the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\r\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\r\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\r\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\r\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\r\n\t\t * @trigger model.jstree copy_node.jstree\r\n\t\t */\r\n\t\tcopy_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\r\n\t\t\tvar t1, t2, dpc, tmp, i, j, node, old_par, new_par, old_ins, is_multi;\r\n\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tpos = pos === undefined ? 0 : pos;\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.copy_node(obj, par, pos, callback, true, false, origin); });\r\n\t\t\t}\r\n\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tif(obj.length === 1) {\r\n\t\t\t\t\tobj = obj[0];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//obj = obj.slice();\r\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\tif((tmp = this.copy_node(obj[t1], par, pos, callback, is_loaded, true, origin))) {\r\n\t\t\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\t\t\tpos = \"after\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\r\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\r\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\r\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\r\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\r\n\r\n\t\t\tif(old_ins && old_ins._id) {\r\n\t\t\t\tobj = old_ins._model.data[obj.id];\r\n\t\t\t}\r\n\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = new_par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\r\n\t\t\tif(!this.check(\"copy_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tnode = old_ins ? old_ins.get_json(obj, { no_id : true, no_data : true, no_state : true }) : obj;\r\n\t\t\tif(!node) { return false; }\r\n\t\t\tif(node.id === true) { delete node.id; }\r\n\t\t\tnode = this._parse_model_from_json(node, new_par.id, new_par.parents.concat());\r\n\t\t\tif(!node) { return false; }\r\n\t\t\ttmp = this.get_node(node);\r\n\t\t\tif(obj && obj.state && obj.state.loaded === false) { tmp.state.loaded = false; }\r\n\t\t\tdpc = [];\r\n\t\t\tdpc.push(node);\r\n\t\t\tdpc = dpc.concat(tmp.children_d);\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : new_par.id });\r\n\r\n\t\t\t// insert into new parent and up\r\n\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\tdpc = [];\r\n\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\r\n\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\r\n\t\t\t}\r\n\t\t\tdpc[pos] = tmp.id;\r\n\t\t\tnew_par.children = dpc;\r\n\t\t\tnew_par.children_d.push(tmp.id);\r\n\t\t\tnew_par.children_d = new_par.children_d.concat(tmp.children_d);\r\n\r\n\t\t\tif(new_par.id === $.jstree.root) {\r\n\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t}\r\n\t\t\tif(!this._model.force_full_redraw) {\r\n\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t}\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\r\n\t\t\t}\r\n\t\t\tif(callback) { callback.call(this, tmp, new_par, pos); }\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is copied\r\n\t\t\t * @event\r\n\t\t\t * @name copy_node.jstree\r\n\t\t\t * @param {Object} node the copied node\r\n\t\t\t * @param {Object} original the original node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the node among the parent's children\r\n\t\t\t * @param {String} old_parent the old parent of the node\r\n\t\t\t * @param {Number} old_position the position of the original node\r\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\r\n\t\t\t * @param {jsTree} old_instance the instance the node came from\r\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\r\n\t\t\t */\r\n\t\t\tthis.trigger('copy_node', { \"node\" : tmp, \"original\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1,'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * cut a node (a later call to `paste(obj)` would move the node)\r\n\t\t * @name cut(obj)\r\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\r\n\t\t * @trigger cut.jstree\r\n\t\t */\r\n\t\tcut : function (obj) {\r\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\r\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\r\n\t\t\tif(!obj.length) { return false; }\r\n\t\t\tvar tmp = [], o, t1, t2;\r\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\to = this.get_node(obj[t1]);\r\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\r\n\t\t\t}\r\n\t\t\tif(!tmp.length) { return false; }\r\n\t\t\tccp_node = tmp;\r\n\t\t\tccp_inst = this;\r\n\t\t\tccp_mode = 'move_node';\r\n\t\t\t/**\r\n\t\t\t * triggered when nodes are added to the buffer for moving\r\n\t\t\t * @event\r\n\t\t\t * @name cut.jstree\r\n\t\t\t * @param {Array} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('cut', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy a node (a later call to `paste(obj)` would copy the node)\r\n\t\t * @name copy(obj)\r\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\r\n\t\t * @trigger copy.jstree\r\n\t\t */\r\n\t\tcopy : function (obj) {\r\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\r\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\r\n\t\t\tif(!obj.length) { return false; }\r\n\t\t\tvar tmp = [], o, t1, t2;\r\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\to = this.get_node(obj[t1]);\r\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\r\n\t\t\t}\r\n\t\t\tif(!tmp.length) { return false; }\r\n\t\t\tccp_node = tmp;\r\n\t\t\tccp_inst = this;\r\n\t\t\tccp_mode = 'copy_node';\r\n\t\t\t/**\r\n\t\t\t * triggered when nodes are added to the buffer for copying\r\n\t\t\t * @event\r\n\t\t\t * @name copy.jstree\r\n\t\t\t * @param {Array} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('copy', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the current buffer (any nodes that are waiting for a paste operation)\r\n\t\t * @name get_buffer()\r\n\t\t * @return {Object} an object consisting of `mode` (\"copy_node\" or \"move_node\"), `node` (an array of objects) and `inst` (the instance)\r\n\t\t */\r\n\t\tget_buffer : function () {\r\n\t\t\treturn { 'mode' : ccp_mode, 'node' : ccp_node, 'inst' : ccp_inst };\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if there is something in the buffer to paste\r\n\t\t * @name can_paste()\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tcan_paste : function () {\r\n\t\t\treturn ccp_mode !== false && ccp_node !== false; // && ccp_inst._model.data[ccp_node];\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy or move the previously cut or copied nodes to a new parent\r\n\t\t * @name paste(obj [, pos])\r\n\t\t * @param  {mixed} obj the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer, \"first\" and \"last\" are supported), defaults to integer `0`\r\n\t\t * @trigger paste.jstree\r\n\t\t */\r\n\t\tpaste : function (obj, pos) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || !ccp_mode || !ccp_mode.match(/^(copy_node|move_node)$/) || !ccp_node) { return false; }\r\n\t\t\tif(this[ccp_mode](ccp_node, obj, pos, false, false, false, ccp_inst)) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when paste is invoked\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name paste.jstree\r\n\t\t\t\t * @param {String} parent the ID of the receiving node\r\n\t\t\t\t * @param {Array} node the nodes in the buffer\r\n\t\t\t\t * @param {String} mode the performed operation - \"copy_node\" or \"move_node\"\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('paste', { \"parent\" : obj.id, \"node\" : ccp_node, \"mode\" : ccp_mode });\r\n\t\t\t}\r\n\t\t\tccp_node = false;\r\n\t\t\tccp_mode = false;\r\n\t\t\tccp_inst = false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * clear the buffer of previously copied or cut nodes\r\n\t\t * @name clear_buffer()\r\n\t\t * @trigger clear_buffer.jstree\r\n\t\t */\r\n\t\tclear_buffer : function () {\r\n\t\t\tccp_node = false;\r\n\t\t\tccp_mode = false;\r\n\t\t\tccp_inst = false;\r\n\t\t\t/**\r\n\t\t\t * triggered when the copy / cut buffer is cleared\r\n\t\t\t * @event\r\n\t\t\t * @name clear_buffer.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('clear_buffer');\r\n\t\t},\r\n\t\t/**\r\n\t\t * put a node in edit mode (input field to rename the node)\r\n\t\t * @name edit(obj [, default_text, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {String} default_text the text to populate the input with (if omitted or set to a non-string value the node's text value is used)\r\n\t\t * @param  {Function} callback a function to be called once the text box is blurred, it is called in the instance's scope and receives the node, a status parameter (true if the rename is successful, false otherwise) and a boolean indicating if the user cancelled the edit. You can access the node's title using .text\r\n\t\t */\r\n\t\tedit : function (obj, default_text, callback) {\r\n\t\t\tvar rtl, w, a, s, t, h1, h2, fn, tmp, cancel = false;\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(!this.check(\"edit\", obj, this.get_parent(obj))) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\ttmp = obj;\r\n\t\t\tdefault_text = typeof default_text === 'string' ? default_text : obj.text;\r\n\t\t\tthis.set_text(obj, \"\");\r\n\t\t\tobj = this._open_to(obj);\r\n\t\t\ttmp.text = default_text;\r\n\r\n\t\t\trtl = this._data.core.rtl;\r\n\t\t\tw  = this.element.width();\r\n\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\ta  = obj.children('.jstree-anchor').focus();\r\n\t\t\ts  = $('<span>');\r\n\t\t\t/*!\r\n\t\t\toi = obj.children(\"i:visible\"),\r\n\t\t\tai = a.children(\"i:visible\"),\r\n\t\t\tw1 = oi.width() * oi.length,\r\n\t\t\tw2 = ai.width() * ai.length,\r\n\t\t\t*/\r\n\t\t\tt  = default_text;\r\n\t\t\th1 = $(\"<\"+\"div />\", { css : { \"position\" : \"absolute\", \"top\" : \"-200px\", \"left\" : (rtl ? \"0px\" : \"-1000px\"), \"visibility\" : \"hidden\" } }).appendTo(document.body);\r\n\t\t\th2 = $(\"<\"+\"input />\", {\r\n\t\t\t\t\t\t\"value\" : t,\r\n\t\t\t\t\t\t\"class\" : \"jstree-rename-input\",\r\n\t\t\t\t\t\t// \"size\" : t.length,\r\n\t\t\t\t\t\t\"css\" : {\r\n\t\t\t\t\t\t\t\"padding\" : \"0\",\r\n\t\t\t\t\t\t\t\"border\" : \"1px solid silver\",\r\n\t\t\t\t\t\t\t\"box-sizing\" : \"border-box\",\r\n\t\t\t\t\t\t\t\"display\" : \"inline-block\",\r\n\t\t\t\t\t\t\t\"height\" : (this._data.core.li_height) + \"px\",\r\n\t\t\t\t\t\t\t\"lineHeight\" : (this._data.core.li_height) + \"px\",\r\n\t\t\t\t\t\t\t\"width\" : \"150px\" // will be set a bit further down\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"blur\" : $.proxy(function (e) {\r\n\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tvar i = s.children(\".jstree-rename-input\"),\r\n\t\t\t\t\t\t\t\tv = i.val(),\r\n\t\t\t\t\t\t\t\tf = this.settings.core.force_text,\r\n\t\t\t\t\t\t\t\tnv;\r\n\t\t\t\t\t\t\tif(v === \"\") { v = t; }\r\n\t\t\t\t\t\t\th1.remove();\r\n\t\t\t\t\t\t\ts.replaceWith(a);\r\n\t\t\t\t\t\t\ts.remove();\r\n\t\t\t\t\t\t\tt = f ? t : $('<div></div>').append($.parseHTML(t)).html();\r\n\t\t\t\t\t\t\tthis.set_text(obj, t);\r\n\t\t\t\t\t\t\tnv = !!this.rename_node(obj, f ? $('<div></div>').text(v).text() : $('<div></div>').append($.parseHTML(v)).html());\r\n\t\t\t\t\t\t\tif(!nv) {\r\n\t\t\t\t\t\t\t\tthis.set_text(obj, t); // move this up? and fix #483\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t\tsetTimeout($.proxy(function () {\r\n\t\t\t\t\t\t\t\tvar node = this.get_node(tmp.id, true);\r\n\t\t\t\t\t\t\t\tif(node.length) {\r\n\t\t\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t\t\t\tnode.children('.jstree-anchor').focus();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this), 0);\r\n\t\t\t\t\t\t\tif(callback) {\r\n\t\t\t\t\t\t\t\tcallback.call(this, tmp, nv, cancel);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\th2 = null;\r\n\t\t\t\t\t\t}, this),\r\n\t\t\t\t\t\t\"keydown\" : function (e) {\r\n\t\t\t\t\t\t\tvar key = e.which;\r\n\t\t\t\t\t\t\tif(key === 27) {\r\n\t\t\t\t\t\t\t\tcancel = true;\r\n\t\t\t\t\t\t\t\tthis.value = t;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(key === 27 || key === 13) {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tthis.blur();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"click\" : function (e) { e.stopImmediatePropagation(); },\r\n\t\t\t\t\t\t\"mousedown\" : function (e) { e.stopImmediatePropagation(); },\r\n\t\t\t\t\t\t\"keyup\" : function (e) {\r\n\t\t\t\t\t\t\th2.width(Math.min(h1.text(\"pW\" + this.value).width(),w));\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"keypress\" : function(e) {\r\n\t\t\t\t\t\t\tif(e.which === 13) { return false; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\tfn = {\r\n\t\t\t\t\t\tfontFamily\t\t: a.css('fontFamily')\t\t|| '',\r\n\t\t\t\t\t\tfontSize\t\t: a.css('fontSize')\t\t\t|| '',\r\n\t\t\t\t\t\tfontWeight\t\t: a.css('fontWeight')\t\t|| '',\r\n\t\t\t\t\t\tfontStyle\t\t: a.css('fontStyle')\t\t|| '',\r\n\t\t\t\t\t\tfontStretch\t\t: a.css('fontStretch')\t\t|| '',\r\n\t\t\t\t\t\tfontVariant\t\t: a.css('fontVariant')\t\t|| '',\r\n\t\t\t\t\t\tletterSpacing\t: a.css('letterSpacing')\t|| '',\r\n\t\t\t\t\t\twordSpacing\t\t: a.css('wordSpacing')\t\t|| ''\r\n\t\t\t\t};\r\n\t\t\ts.attr('class', a.attr('class')).append(a.contents().clone()).append(h2);\r\n\t\t\ta.replaceWith(s);\r\n\t\t\th1.css(fn);\r\n\t\t\th2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(),w))[0].select();\r\n\t\t\t$(document).one('mousedown.jstree touchstart.jstree dnd_start.vakata', function (e) {\r\n\t\t\t\tif (h2 && e.target !== h2) {\r\n\t\t\t\t\t$(h2).blur();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * changes the theme\r\n\t\t * @name set_theme(theme_name [, theme_url])\r\n\t\t * @param {String} theme_name the name of the new theme to apply\r\n\t\t * @param {mixed} theme_url  the location of the CSS file for this theme. Omit or set to `false` if you manually included the file. Set to `true` to autoload from the `core.themes.dir` directory.\r\n\t\t * @trigger set_theme.jstree\r\n\t\t */\r\n\t\tset_theme : function (theme_name, theme_url) {\r\n\t\t\tif(!theme_name) { return false; }\r\n\t\t\tif(theme_url === true) {\r\n\t\t\t\tvar dir = this.settings.core.themes.dir;\r\n\t\t\t\tif(!dir) { dir = $.jstree.path + '/themes'; }\r\n\t\t\t\ttheme_url = dir + '/' + theme_name + '/style.css';\r\n\t\t\t}\r\n\t\t\tif(theme_url && $.inArray(theme_url, themes_loaded) === -1) {\r\n\t\t\t\t$('head').append('<'+'link rel=\"stylesheet\" href=\"' + theme_url + '\" type=\"text/css\" />');\r\n\t\t\t\tthemes_loaded.push(theme_url);\r\n\t\t\t}\r\n\t\t\tif(this._data.core.themes.name) {\r\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name);\r\n\t\t\t}\r\n\t\t\tthis._data.core.themes.name = theme_name;\r\n\t\t\tthis.element.addClass('jstree-' + theme_name);\r\n\t\t\tthis.element[this.settings.core.themes.responsive ? 'addClass' : 'removeClass' ]('jstree-' + theme_name + '-responsive');\r\n\t\t\t/**\r\n\t\t\t * triggered when a theme is set\r\n\t\t\t * @event\r\n\t\t\t * @name set_theme.jstree\r\n\t\t\t * @param {String} theme the new theme\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_theme', { 'theme' : theme_name });\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the name of the currently applied theme name\r\n\t\t * @name get_theme()\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_theme : function () { return this._data.core.themes.name; },\r\n\t\t/**\r\n\t\t * changes the theme variant (if the theme has variants)\r\n\t\t * @name set_theme_variant(variant_name)\r\n\t\t * @param {String|Boolean} variant_name the variant to apply (if `false` is used the current variant is removed)\r\n\t\t */\r\n\t\tset_theme_variant : function (variant_name) {\r\n\t\t\tif(this._data.core.themes.variant) {\r\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\r\n\t\t\t}\r\n\t\t\tthis._data.core.themes.variant = variant_name;\r\n\t\t\tif(variant_name) {\r\n\t\t\t\tthis.element.addClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the name of the currently applied theme variant\r\n\t\t * @name get_theme()\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_theme_variant : function () { return this._data.core.themes.variant; },\r\n\t\t/**\r\n\t\t * shows a striped background on the container (if the theme supports it)\r\n\t\t * @name show_stripes()\r\n\t\t */\r\n\t\tshow_stripes : function () {\r\n\t\t\tthis._data.core.themes.stripes = true;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-striped\");\r\n\t\t\t/**\r\n\t\t\t * triggered when stripes are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_stripes.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_stripes');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides the striped background on the container\r\n\t\t * @name hide_stripes()\r\n\t\t */\r\n\t\thide_stripes : function () {\r\n\t\t\tthis._data.core.themes.stripes = false;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-striped\");\r\n\t\t\t/**\r\n\t\t\t * triggered when stripes are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_stripes.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_stripes');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles the striped background on the container\r\n\t\t * @name toggle_stripes()\r\n\t\t */\r\n\t\ttoggle_stripes : function () { if(this._data.core.themes.stripes) { this.hide_stripes(); } else { this.show_stripes(); } },\r\n\t\t/**\r\n\t\t * shows the connecting dots (if the theme supports it)\r\n\t\t * @name show_dots()\r\n\t\t */\r\n\t\tshow_dots : function () {\r\n\t\t\tthis._data.core.themes.dots = true;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-dots\");\r\n\t\t\t/**\r\n\t\t\t * triggered when dots are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_dots.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_dots');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides the connecting dots\r\n\t\t * @name hide_dots()\r\n\t\t */\r\n\t\thide_dots : function () {\r\n\t\t\tthis._data.core.themes.dots = false;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-dots\");\r\n\t\t\t/**\r\n\t\t\t * triggered when dots are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_dots.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_dots');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles the connecting dots\r\n\t\t * @name toggle_dots()\r\n\t\t */\r\n\t\ttoggle_dots : function () { if(this._data.core.themes.dots) { this.hide_dots(); } else { this.show_dots(); } },\r\n\t\t/**\r\n\t\t * show the node icons\r\n\t\t * @name show_icons()\r\n\t\t */\r\n\t\tshow_icons : function () {\r\n\t\t\tthis._data.core.themes.icons = true;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-icons\");\r\n\t\t\t/**\r\n\t\t\t * triggered when icons are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_icons.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_icons');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the node icons\r\n\t\t * @name hide_icons()\r\n\t\t */\r\n\t\thide_icons : function () {\r\n\t\t\tthis._data.core.themes.icons = false;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-icons\");\r\n\t\t\t/**\r\n\t\t\t * triggered when icons are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_icons.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_icons');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggle the node icons\r\n\t\t * @name toggle_icons()\r\n\t\t */\r\n\t\ttoggle_icons : function () { if(this._data.core.themes.icons) { this.hide_icons(); } else { this.show_icons(); } },\r\n\t\t/**\r\n\t\t * show the node ellipsis\r\n\t\t * @name show_icons()\r\n\t\t */\r\n\t\tshow_ellipsis : function () {\r\n\t\t\tthis._data.core.themes.ellipsis = true;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-ellipsis\");\r\n\t\t\t/**\r\n\t\t\t * triggered when ellisis is shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_ellipsis.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_ellipsis');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the node ellipsis\r\n\t\t * @name hide_ellipsis()\r\n\t\t */\r\n\t\thide_ellipsis : function () {\r\n\t\t\tthis._data.core.themes.ellipsis = false;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-ellipsis\");\r\n\t\t\t/**\r\n\t\t\t * triggered when ellisis is hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_ellipsis.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_ellipsis');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggle the node ellipsis\r\n\t\t * @name toggle_icons()\r\n\t\t */\r\n\t\ttoggle_ellipsis : function () { if(this._data.core.themes.ellipsis) { this.hide_ellipsis(); } else { this.show_ellipsis(); } },\r\n\t\t/**\r\n\t\t * set the node icon for a node\r\n\t\t * @name set_icon(obj, icon)\r\n\t\t * @param {mixed} obj\r\n\t\t * @param {String} icon the new icon - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\r\n\t\t */\r\n\t\tset_icon : function (obj, icon) {\r\n\t\t\tvar t1, t2, dom, old;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_icon(obj[t1], icon);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\told = obj.icon;\r\n\t\t\tobj.icon = icon === true || icon === null || icon === undefined || icon === '' ? true : icon;\r\n\t\t\tdom = this.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\");\r\n\t\t\tif(icon === false) {\r\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\r\n\t\t\t\tthis.hide_icon(obj);\r\n\t\t\t}\r\n\t\t\telse if(icon === true || icon === null || icon === undefined || icon === '') {\r\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\telse if(icon.indexOf(\"/\") === -1 && icon.indexOf(\".\") === -1) {\r\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\r\n\t\t\t\tdom.addClass(icon + ' jstree-themeicon-custom').attr(\"rel\",icon);\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\r\n\t\t\t\tdom.addClass('jstree-themeicon-custom').css(\"background\", \"url('\" + icon + \"') center center no-repeat\").attr(\"rel\",icon);\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the node icon for a node\r\n\t\t * @name get_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_icon : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.icon;\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the icon on an individual node\r\n\t\t * @name hide_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t */\r\n\t\thide_icon : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.hide_icon(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\r\n\t\t\tobj.icon = false;\r\n\t\t\tthis.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\").addClass('jstree-themeicon-hidden');\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * show the icon on an individual node\r\n\t\t * @name show_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t */\r\n\t\tshow_icon : function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.show_icon(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tobj.icon = dom.length ? dom.children(\".jstree-anchor\").children(\".jstree-themeicon\").attr('rel') : true;\r\n\t\t\tif(!obj.icon) { obj.icon = true; }\r\n\t\t\tdom.children(\".jstree-anchor\").children(\".jstree-themeicon\").removeClass('jstree-themeicon-hidden');\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\t// helpers\r\n\t$.vakata = {};\r\n\r\n\t$.vakata.search = function(pattern, txt, options) {\r\n\t\toptions = options || {};\r\n\t\tif(options.fuzzy !== false) {\r\n\t\t\toptions.fuzzy = true;\r\n\t\t}\r\n\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\r\n\t\tvar MATCH_LOCATION\t= options.location || 0,\r\n\t\t\tMATCH_DISTANCE\t= options.distance || 100,\r\n\t\t\tMATCH_THRESHOLD\t= options.threshold || 0.6,\r\n\t\t\tpatternLen = pattern.length;\r\n\t\tif(patternLen > 32) {\r\n\t\t\toptions.fuzzy = false;\r\n\t\t}\r\n\t\tif(options.fuzzy) {\r\n\t\t\tvar matchmask = 1 << (patternLen - 1);\r\n\t\t\tvar pattern_alphabet = (function () {\r\n\t\t\t\tvar mask = {},\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tmask[pattern.charAt(i)] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn mask;\r\n\t\t\t})();\r\n\t\t\tvar match_bitapScore = function (e, x) {\r\n\t\t\t\tvar accuracy = e / patternLen,\r\n\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\r\n\t\t\t\tif(!MATCH_DISTANCE) {\r\n\t\t\t\t\treturn proximity ? 1.0 : accuracy;\r\n\t\t\t\t}\r\n\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\r\n\t\t\t};\r\n\t\t}\r\n\t\tvar search = function (text) {\r\n\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\r\n\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: true,\r\n\t\t\t\t\tscore: 0\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif(!options.fuzzy) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: false,\r\n\t\t\t\t\tscore: 1\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tvar i, j,\r\n\t\t\t\ttextLen = text.length,\r\n\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\r\n\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\r\n\t\t\t\tbinMin, binMid,\r\n\t\t\t\tbinMax = patternLen + textLen,\r\n\t\t\t\tlastRd, start, finish, rd, charMatch,\r\n\t\t\t\tscore = 1,\r\n\t\t\t\tlocations = [];\r\n\t\t\tif (bestLoc != -1) {\r\n\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\r\n\t\t\t\tif (bestLoc != -1) {\r\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbestLoc = -1;\r\n\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\tbinMin = 0;\r\n\t\t\t\tbinMid = binMax;\r\n\t\t\t\twhile (binMin < binMid) {\r\n\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\r\n\t\t\t\t\t\tbinMin = binMid;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\r\n\t\t\t\t}\r\n\t\t\t\tbinMax = binMid;\r\n\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\r\n\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\r\n\t\t\t\trd = Array(finish + 2);\r\n\t\t\t\trd[finish + 1] = (1 << i) - 1;\r\n\t\t\t\tfor (j = finish; j >= start; j--) {\r\n\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\r\n\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (rd[j] & matchmask) {\r\n\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\r\n\t\t\t\t\t\tif (score <= scoreThreshold) {\r\n\t\t\t\t\t\t\tscoreThreshold = score;\r\n\t\t\t\t\t\t\tbestLoc = j - 1;\r\n\t\t\t\t\t\t\tlocations.push(bestLoc);\r\n\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\r\n\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tlastRd = rd;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tisMatch: bestLoc >= 0,\r\n\t\t\t\tscore: score\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn txt === true ? { 'search' : search } : search(txt);\r\n\t};\r\n\r\n\t// collect attributes\r\n\t$.vakata.attributes = function(node, with_values) {\r\n\t\tnode = $(node)[0];\r\n\t\tvar attr = with_values ? {} : [];\r\n\t\tif(node && node.attributes) {\r\n\t\t\t$.each(node.attributes, function (i, v) {\r\n\t\t\t\tif($.inArray(v.name.toLowerCase(),['style','contenteditable','hasfocus','tabindex']) !== -1) { return; }\r\n\t\t\t\tif(v.value !== null && $.trim(v.value) !== '') {\r\n\t\t\t\t\tif(with_values) { attr[v.name] = v.value; }\r\n\t\t\t\t\telse { attr.push(v.name); }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn attr;\r\n\t};\r\n\t$.vakata.array_unique = function(array) {\r\n\t\tvar a = [], i, j, l, o = {};\r\n\t\tfor(i = 0, l = array.length; i < l; i++) {\r\n\t\t\tif(o[array[i]] === undefined) {\r\n\t\t\t\ta.push(array[i]);\r\n\t\t\t\to[array[i]] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t};\r\n\t// remove item from array\r\n\t$.vakata.array_remove = function(array, from) {\r\n\t\tarray.splice(from, 1);\r\n\t\treturn array;\r\n\t\t//var rest = array.slice((to || from) + 1 || array.length);\r\n\t\t//array.length = from < 0 ? array.length + from : from;\r\n\t\t//array.push.apply(array, rest);\r\n\t\t//return array;\r\n\t};\r\n\t// remove item from array\r\n\t$.vakata.array_remove_item = function(array, item) {\r\n\t\tvar tmp = $.inArray(item, array);\r\n\t\treturn tmp !== -1 ? $.vakata.array_remove(array, tmp) : array;\r\n\t};\r\n\t$.vakata.array_filter = function(c,a,b,d,e) {\r\n\t\tif (c.filter) {\r\n\t\t\treturn c.filter(a, b);\r\n\t\t}\r\n\t\td=[];\r\n\t\tfor (e in c) {\r\n\t\t\tif (~~e+''===e+'' && e>=0 && a.call(b,c[e],+e,c)) {\r\n\t\t\t\td.push(c[e]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn d;\r\n\t};\r\n\r\n\r\n\treturn Tree;\r\n\r\n});\r\n\ndefine('Hierarchy',[\r\n  \"skylark-langx/skylark\",\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\"\r\n],function(skylark,langx,browser,eventer,noder,geom,$){\r\n\t\"use strict\";\r\n\r\n\tvar jstree = skylark.jstree =  skylark.jstree || {};\r\n\r\n\t$.ajax = $.ajax || function(options) {\r\n        return langx.Xhr.request(options.url,options);\r\n    };\r\n\r\n    $.camelCase = langx.camelCase;\r\n\r\n    $.each = langx.each;\r\n\r\n    $.extend = function(target) {\r\n        var deep, args = Array.prototype.slice.call(arguments, 1);\r\n        if (typeof target == 'boolean') {\r\n            deep = target\r\n            target = args.shift()\r\n        }\r\n        if (args.length == 0) {\r\n            args = [target];\r\n            target = this;\r\n        }\r\n        args.forEach(function(arg) {\r\n        \tlangx.mixin(target, arg, deep);\r\n        });\r\n        return target;\r\n    };\r\n\r\n    $.grep = function(elements, callback) {\r\n        return filter.call(elements, callback)\r\n    };\r\n\r\n    $.isArray = langx.isArray;\r\n    $.isEmptyObject = langx.isEmptyObject;\r\n    $.isFunction = langx.isFunction;\r\n    $.isWindow = langx.isWindow;\r\n    $.isPlainObject = langx.isPlainObject;\r\n\r\n    $.inArray = langx.inArray;\r\n\r\n    $.makeArray = langx.makeArray;\r\n    $.map = langx.map;\r\n\r\n    $.noop = function() {\r\n    };\r\n\r\n    $.parseJSON = window.JSON.parse;\r\n\r\n    $.proxy = langx.proxy;\r\n\r\n    $.trim = langx.trim;\r\n    $.type = langx.type;\r\n\r\n    $.fn.stop = function() {\r\n    \treturn this;\r\n    }\r\n\r\n\r\n\t/*!\r\n\t * jsTree {{VERSION}}\r\n\t * http://jstree.com/\r\n\t *\r\n\t * Copyright (c) 2014 Ivan Bozhanov (http://vakata.com)\r\n\t *\r\n\t * Licensed same as jquery - under the terms of the MIT License\r\n\t *   http://www.opensource.org/licenses/mit-license.php\r\n\t */\r\n\r\n\t// prevent another load? maybe there is a better way?\r\n\tif($.jstree) {\r\n\t\treturn;\r\n\t}\r\n\r\n\t/**\r\n\t * ### jsTree core functionality\r\n\t */\r\n\r\n\t// internal variables\r\n\tvar instance_counter = 0,\r\n\t\tccp_node = false,\r\n\t\tccp_mode = false,\r\n\t\tccp_inst = false,\r\n\t\tthemes_loaded = [],\r\n\t\tsrc = $('script:last').attr('src'),\r\n\t\tdocument = window.document; // local variable is always faster to access then a global\r\n\r\n\t/**\r\n\t * holds all jstree related functions and variables, including the actual class and methods to create, access and manipulate instances.\r\n\t * @name $.jstree\r\n\t */\r\n\t$.jstree = {\r\n\t\t/**\r\n\t\t * specifies the jstree version in use\r\n\t\t * @name $.jstree.version\r\n\t\t */\r\n\t\tversion : '{{VERSION}}',\r\n\t\t/**\r\n\t\t * holds all the default options used when creating new instances\r\n\t\t * @name $.jstree.defaults\r\n\t\t */\r\n\t\tdefaults : {\r\n\t\t\t/**\r\n\t\t\t * configure which plugins will be active on an instance. Should be an array of strings, where each element is a plugin name. The default is `[]`\r\n\t\t\t * @name $.jstree.defaults.plugins\r\n\t\t\t */\r\n\t\t\tplugins : []\r\n\t\t},\r\n\t\t/**\r\n\t\t * stores all loaded jstree plugins (used internally)\r\n\t\t * @name $.jstree.plugins\r\n\t\t */\r\n\t\tplugins : {},\r\n\t\tpath : src && src.indexOf('/') !== -1 ? src.replace(/\\/[^\\/]+$/,'') : '',\r\n\t\tidregex : /[\\\\:&!^|()\\[\\]<>@*'+~#\";.,=\\- \\/${}%?`]/g,\r\n\t\troot : '#'\r\n\t};\r\n\t\r\n\t/**\r\n\t * creates a jstree instance\r\n\t * @name $.jstree.create(el [, options])\r\n\t * @param {DOMElement|jQuery|String} el the element to create the instance on, can be jQuery extended or a selector\r\n\t * @param {Object} options options for this instance (extends `$.jstree.defaults`)\r\n\t * @return {jsTree} the new instance\r\n\t */\r\n\t$.jstree.create = function (el, options) {\r\n\t\treturn new Tree(el,options);\r\n\t};\r\n\r\n\t/**\r\n\t * remove all traces of jstree from the DOM and destroy all instances\r\n\t * @name $.jstree.destroy()\r\n\t */\r\n\t$.jstree.destroy = function () {\r\n\t\t$('.jstree:jstree').jstree('destroy');\r\n\t\t$(document).off('.jstree');\r\n\t};\r\n\r\n\r\n\t/**\r\n\t * get a reference to an existing instance\r\n\t *\r\n\t * __Examples__\r\n\t *\r\n\t *\t// provided a container with an ID of \"tree\", and a nested node with an ID of \"branch\"\r\n\t *\t// all of there will return the same instance\r\n\t *\t$.jstree.reference('tree');\r\n\t *\t$.jstree.reference('#tree');\r\n\t *\t$.jstree.reference($('#tree'));\r\n\t *\t$.jstree.reference(document.getElementByID('tree'));\r\n\t *\t$.jstree.reference('branch');\r\n\t *\t$.jstree.reference('#branch');\r\n\t *\t$.jstree.reference($('#branch'));\r\n\t *\t$.jstree.reference(document.getElementByID('branch'));\r\n\t *\r\n\t * @name $.jstree.reference(needle)\r\n\t * @param {DOMElement|jQuery|String} needle\r\n\t * @return {jsTree|null} the instance or `null` if not found\r\n\t */\r\n\t$.jstree.reference = function (needle) {\r\n\t\tvar tmp = null,\r\n\t\t\tobj = null;\r\n\t\tif(needle && needle.id && (!needle.tagName || !needle.nodeType)) { needle = needle.id; }\r\n\r\n\t\tif(!obj || !obj.length) {\r\n\t\t\ttry { obj = $(needle); } catch (ignore) { }\r\n\t\t}\r\n\t\tif(!obj || !obj.length) {\r\n\t\t\ttry { obj = $('#' + needle.replace($.jstree.idregex,'\\\\$&')); } catch (ignore) { }\r\n\t\t}\r\n\t\tif(obj && obj.length && (obj = obj.closest('.jstree')).length && (obj = obj.data('jstree'))) {\r\n\t\t\ttmp = obj;\r\n\t\t}\r\n\t\telse {\r\n\t\t\t$('.jstree').each(function () {\r\n\t\t\t\tvar inst = $(this).data('jstree');\r\n\t\t\t\tif(inst && inst._model.data[needle]) {\r\n\t\t\t\t\ttmp = inst;\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn tmp;\r\n\t};\r\n\r\n\t/**\r\n\t * Create an instance, get an instance or invoke a command on a instance.\r\n\t *\r\n\t * If there is no instance associated with the current node a new one is created and `arg` is used to extend `$.jstree.defaults` for this new instance. There would be no return value (chaining is not broken).\r\n\t *\r\n\t * If there is an existing instance and `arg` is a string the command specified by `arg` is executed on the instance, with any additional arguments passed to the function. If the function returns a value it will be returned (chaining could break depending on function).\r\n\t *\r\n\t * If there is an existing instance and `arg` is not a string the instance itself is returned (similar to `$.jstree.reference`).\r\n\t *\r\n\t * In any other case - nothing is returned and chaining is not broken.\r\n\t *\r\n\t * __Examples__\r\n\t *\r\n\t *\t$('#tree1').jstree(); // creates an instance\r\n\t *\t$('#tree2').jstree({ plugins : [] }); // create an instance with some options\r\n\t *\t$('#tree1').jstree('open_node', '#branch_1'); // call a method on an existing instance, passing additional arguments\r\n\t *\t$('#tree2').jstree(); // get an existing instance (or create an instance)\r\n\t *\t$('#tree2').jstree(true); // get an existing instance (will not create new instance)\r\n\t *\t$('#branch_1').jstree().select_node('#branch_1'); // get an instance (using a nested element and call a method)\r\n\t *\r\n\t * @name $().jstree([arg])\r\n\t * @param {String|Object} arg\r\n\t * @return {Mixed}\r\n\t */\r\n\t$.fn.jstree = function (arg) {\r\n\t\t// check for string argument\r\n\t\tvar is_method\t= (typeof arg === 'string'),\r\n\t\t\targs\t\t= Array.prototype.slice.call(arguments, 1),\r\n\t\t\tresult\t\t= null;\r\n\t\tif(arg === true && !this.length) { return false; }\r\n\t\tthis.each(function () {\r\n\t\t\t// get the instance (if there is one) and method (if it exists)\r\n\t\t\tvar instance = $.jstree.reference(this),\r\n\t\t\t\tmethod = is_method && instance ? instance[arg] : null;\r\n\t\t\t// if calling a method, and method is available - execute on the instance\r\n\t\t\tresult = is_method && method ?\r\n\t\t\t\tmethod.apply(instance, args) :\r\n\t\t\t\tnull;\r\n\t\t\t// if there is no instance and no method is being called - create one\r\n\t\t\tif(!instance && !is_method && (arg === undefined || $.isPlainObject(arg))) {\r\n\t\t\t\t$.jstree.create(this, arg);\r\n\t\t\t}\r\n\t\t\t// if there is an instance and no method is called - return the instance\r\n\t\t\tif( (instance && !is_method) || arg === true ) {\r\n\t\t\t\tresult = instance || false;\r\n\t\t\t}\r\n\t\t\t// if there was a method call which returned a result - break and return the value\r\n\t\t\tif(result !== null && result !== undefined) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t});\r\n\t\t// if there was a method call with a valid return value - return that, otherwise continue the chain\r\n\t\treturn result !== null && result !== undefined ?\r\n\t\t\tresult : this;\r\n\t};\r\n\r\n\t/**\r\n\t * stores all defaults for the core\r\n\t * @name $.jstree.defaults.core\r\n\t */\r\n\t$.jstree.defaults.core = {\r\n\t\t/**\r\n\t\t * data configuration\r\n\t\t *\r\n\t\t * If left as `false` the HTML inside the jstree container element is used to populate the tree (that should be an unordered list with list items).\r\n\t\t *\r\n\t\t * You can also pass in a HTML string or a JSON array here.\r\n\t\t *\r\n\t\t * It is possible to pass in a standard jQuery-like AJAX config and jstree will automatically determine if the response is JSON or HTML and use that to populate the tree.\r\n\t\t * In addition to the standard jQuery ajax options here you can suppy functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node is being loaded, the return value of those functions will be used.\r\n\t\t *\r\n\t\t * The last option is to specify a function, that function will receive the node being loaded as argument and a second param which is a function which should be called with the result.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t// AJAX\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : {\r\n\t\t *\t\t\t\t'url' : '/get/children/',\r\n\t\t *\t\t\t\t'data' : function (node) {\r\n\t\t *\t\t\t\t\treturn { 'id' : node.id };\r\n\t\t *\t\t\t\t}\r\n\t\t *\t\t\t}\r\n\t\t *\t\t});\r\n\t\t *\r\n\t\t *\t// direct data\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : [\r\n\t\t *\t\t\t\t'Simple root node',\r\n\t\t *\t\t\t\t{\r\n\t\t *\t\t\t\t\t'id' : 'node_2',\r\n\t\t *\t\t\t\t\t'text' : 'Root node with options',\r\n\t\t *\t\t\t\t\t'state' : { 'opened' : true, 'selected' : true },\r\n\t\t *\t\t\t\t\t'children' : [ { 'text' : 'Child 1' }, 'Child 2']\r\n\t\t *\t\t\t\t}\r\n\t\t *\t\t\t]\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t *\t// function\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'data' : function (obj, callback) {\r\n\t\t *\t\t\t\tcallback.call(this, ['Root 1', 'Root 2']);\r\n\t\t *\t\t\t}\r\n\t\t *\t\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.data\r\n\t\t */\r\n\t\tdata\t\t\t: false,\r\n\t\t/**\r\n\t\t * configure the various strings used throughout the tree\r\n\t\t *\r\n\t\t * You can use an object where the key is the string you need to replace and the value is your replacement.\r\n\t\t * Another option is to specify a function which will be called with an argument of the needed string and should return the replacement.\r\n\t\t * If left as `false` no replacement is made.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'strings' : {\r\n\t\t *\t\t\t\t'Loading ...' : 'Please wait ...'\r\n\t\t *\t\t\t}\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.strings\r\n\t\t */\r\n\t\tstrings\t\t\t: false,\r\n\t\t/**\r\n\t\t * determines what happens when a user tries to modify the structure of the tree\r\n\t\t * If left as `false` all operations like create, rename, delete, move or copy are prevented.\r\n\t\t * You can set this to `true` to allow all interactions or use a function to have better control.\r\n\t\t *\r\n\t\t * __Examples__\r\n\t\t *\r\n\t\t *\t$('#tree').jstree({\r\n\t\t *\t\t'core' : {\r\n\t\t *\t\t\t'check_callback' : function (operation, node, node_parent, node_position, more) {\r\n\t\t *\t\t\t\t// operation can be 'create_node', 'rename_node', 'delete_node', 'move_node', 'copy_node' or 'edit'\r\n\t\t *\t\t\t\t// in case of 'rename_node' node_position is filled with the new node name\r\n\t\t *\t\t\t\treturn operation === 'rename_node' ? true : false;\r\n\t\t *\t\t\t}\r\n\t\t *\t\t}\r\n\t\t *\t});\r\n\t\t *\r\n\t\t * @name $.jstree.defaults.core.check_callback\r\n\t\t */\r\n\t\tcheck_callback\t: false,\r\n\t\t/**\r\n\t\t * a callback called with a single object parameter in the instance's scope when something goes wrong (operation prevented, ajax failed, etc)\r\n\t\t * @name $.jstree.defaults.core.error\r\n\t\t */\r\n\t\terror\t\t\t: $.noop,\r\n\t\t/**\r\n\t\t * the open / close animation duration in milliseconds - set this to `false` to disable the animation (default is `200`)\r\n\t\t * @name $.jstree.defaults.core.animation\r\n\t\t */\r\n\t\tanimation\t\t: 200,\r\n\t\t/**\r\n\t\t * a boolean indicating if multiple nodes can be selected\r\n\t\t * @name $.jstree.defaults.core.multiple\r\n\t\t */\r\n\t\tmultiple\t\t: true,\r\n\t\t/**\r\n\t\t * theme configuration object\r\n\t\t * @name $.jstree.defaults.core.themes\r\n\t\t */\r\n\t\tthemes\t\t\t: {\r\n\t\t\t/**\r\n\t\t\t * the name of the theme to use (if left as `false` the default theme is used)\r\n\t\t\t * @name $.jstree.defaults.core.themes.name\r\n\t\t\t */\r\n\t\t\tname\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * the URL of the theme's CSS file, leave this as `false` if you have manually included the theme CSS (recommended). You can set this to `true` too which will try to autoload the theme.\r\n\t\t\t * @name $.jstree.defaults.core.themes.url\r\n\t\t\t */\r\n\t\t\turl\t\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * the location of all jstree themes - only used if `url` is set to `true`\r\n\t\t\t * @name $.jstree.defaults.core.themes.dir\r\n\t\t\t */\r\n\t\t\tdir\t\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if connecting dots are shown\r\n\t\t\t * @name $.jstree.defaults.core.themes.dots\r\n\t\t\t */\r\n\t\t\tdots\t\t\t: true,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if node icons are shown\r\n\t\t\t * @name $.jstree.defaults.core.themes.icons\r\n\t\t\t */\r\n\t\t\ticons\t\t\t: true,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if node ellipsis should be shown - this only works with a fixed with on the container\r\n\t\t\t * @name $.jstree.defaults.core.themes.ellipsis\r\n\t\t\t */\r\n\t\t\tellipsis\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean indicating if the tree background is striped\r\n\t\t\t * @name $.jstree.defaults.core.themes.stripes\r\n\t\t\t */\r\n\t\t\tstripes\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a string (or boolean `false`) specifying the theme variant to use (if the theme supports variants)\r\n\t\t\t * @name $.jstree.defaults.core.themes.variant\r\n\t\t\t */\r\n\t\t\tvariant\t\t\t: false,\r\n\t\t\t/**\r\n\t\t\t * a boolean specifying if a reponsive version of the theme should kick in on smaller screens (if the theme supports it). Defaults to `false`.\r\n\t\t\t * @name $.jstree.defaults.core.themes.responsive\r\n\t\t\t */\r\n\t\t\tresponsive\t\t: false\r\n\t\t},\r\n\t\t/**\r\n\t\t * if left as `true` all parents of all selected nodes will be opened once the tree loads (so that all selected nodes are visible to the user)\r\n\t\t * @name $.jstree.defaults.core.expand_selected_onload\r\n\t\t */\r\n\t\texpand_selected_onload : true,\r\n\t\t/**\r\n\t\t * if left as `true` web workers will be used to parse incoming JSON data where possible, so that the UI will not be blocked by large requests. Workers are however about 30% slower. Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.worker\r\n\t\t */\r\n\t\tworker : true,\r\n\t\t/**\r\n\t\t * Force node text to plain text (and escape HTML). Defaults to `false`\r\n\t\t * @name $.jstree.defaults.core.force_text\r\n\t\t */\r\n\t\tforce_text : false,\r\n\t\t/**\r\n\t\t * Should the node should be toggled if the text is double clicked . Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.dblclick_toggle\r\n\t\t */\r\n\t\tdblclick_toggle : true,\r\n\t\t/**\r\n\t\t * Should the loaded nodes be part of the state. Defaults to `false`\r\n\t\t * @name $.jstree.defaults.core.loaded_state\r\n\t\t */\r\n\t\tloaded_state : false,\r\n\t\t/**\r\n\t\t * Should the last active node be focused when the tree container is blurred and the focused again. This helps working with screen readers. Defaults to `true`\r\n\t\t * @name $.jstree.defaults.core.restore_focus\r\n\t\t */\r\n\t\trestore_focus : true,\r\n\t\t/**\r\n\t\t * Default keyboard shortcuts (an object where each key is the button name or combo - like 'enter', 'ctrl-space', 'p', etc and the value is the function to execute in the instance's scope)\r\n\t\t * @name $.jstree.defaults.core.keyboard\r\n\t\t */\r\n\t\tkeyboard : {\r\n\t\t\t'ctrl-space': function (e) {\r\n\t\t\t\t// aria defines space only with Ctrl\r\n\t\t\t\te.type = \"click\";\r\n\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t},\r\n\t\t\t'enter': function (e) {\r\n\t\t\t\t// enter\r\n\t\t\t\te.type = \"click\";\r\n\t\t\t\t$(e.currentTarget).trigger(e);\r\n\t\t\t},\r\n\t\t\t'left': function (e) {\r\n\t\t\t\t// left\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tif(this.is_open(e.currentTarget)) {\r\n\t\t\t\t\tthis.close_node(e.currentTarget);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvar o = this.get_parent(e.currentTarget);\r\n\t\t\t\t\tif(o && o.id !== $.jstree.root) { this.get_node(o, true).children('.jstree-anchor').focus(); }\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'up': function (e) {\r\n\t\t\t\t// up\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this.get_prev_dom(e.currentTarget);\r\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\r\n\t\t\t},\r\n\t\t\t'right': function (e) {\r\n\t\t\t\t// right\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tif(this.is_closed(e.currentTarget)) {\r\n\t\t\t\t\tthis.open_node(e.currentTarget, function (o) { this.get_node(o, true).children('.jstree-anchor').focus(); });\r\n\t\t\t\t}\r\n\t\t\t\telse if (this.is_open(e.currentTarget)) {\r\n\t\t\t\t\tvar o = this.get_node(e.currentTarget, true).children('.jstree-children')[0];\r\n\t\t\t\t\tif(o) { $(this._firstChild(o)).children('.jstree-anchor').focus(); }\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'down': function (e) {\r\n\t\t\t\t// down\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this.get_next_dom(e.currentTarget);\r\n\t\t\t\tif(o && o.length) { o.children('.jstree-anchor').focus(); }\r\n\t\t\t},\r\n\t\t\t'*': function (e) {\r\n\t\t\t\t// aria defines * on numpad as open_all - not very common\r\n\t\t\t\tthis.open_all();\r\n\t\t\t},\r\n\t\t\t'home': function (e) {\r\n\t\t\t\t// home\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tvar o = this._firstChild(this.get_container_ul()[0]);\r\n\t\t\t\tif(o) { $(o).children('.jstree-anchor').filter(':visible').focus(); }\r\n\t\t\t},\r\n\t\t\t'end': function (e) {\r\n\t\t\t\t// end\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.element.find('.jstree-anchor').filter(':visible').last().focus();\r\n\t\t\t},\r\n\t\t\t'f2': function (e) {\r\n\t\t\t\t// f2 - safe to include - if check_callback is false it will fail\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tthis.edit(e.currentTarget);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n    var Tree = jstree.Tree = langx.Evented.inherit({\r\n        klassName: \"Tree\",\r\n\r\n\t\t/**\r\n\t\t * used to decorate an instance with a plugin. Used internally.\r\n\t\t * @private\r\n\t\t * @name plugin(deco [, opts])\r\n\t\t * @param  {String} deco the plugin to decorate with\r\n\t\t * @param  {Object} opts options for the plugin\r\n\t\t * @return {jsTree}\r\n\t\t */\r\n\t\tplugin : function (deco, opts) {\r\n\t\t\tvar Child = $.jstree.plugins[deco];\r\n\t\t\tif(Child) {\r\n\t\t\t\tthis._data[deco] = {};\r\n\t\t\t\tChild.prototype = this;\r\n\t\t\t\treturn new Child(opts, this);\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t},\r\n\t\t/**\r\n\t\t * initialize the instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name init(el, optons)\r\n\t\t * @param {DOMElement|jQuery|String} el the element we are transforming\r\n\t\t * @param {Object} options options for this instance\r\n\t\t * @trigger init.jstree, loading.jstree, loaded.jstree, ready.jstree, changed.jstree\r\n\t\t */\r\n\t\tinit : function (el, options) {\r\n\t\t\tthis._id = ++instance_counter;\r\n\t\t\tthis._cnt = 0;\r\n\t\t\tthis._wrk = null;\r\n\t\t\tthis._data = {\r\n\t\t\t\tcore : {\r\n\t\t\t\t\tthemes : {\r\n\t\t\t\t\t\tname : false,\r\n\t\t\t\t\t\tdots : false,\r\n\t\t\t\t\t\ticons : false,\r\n\t\t\t\t\t\tellipsis : false\r\n\t\t\t\t\t},\r\n\t\t\t\t\tselected : [],\r\n\t\t\t\t\tlast_error : {},\r\n\t\t\t\t\tworking : false,\r\n\t\t\t\t\tworker_queue : [],\r\n\t\t\t\t\tfocused : null\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\tvar  opt = options,\r\n\t\t\t\ttmp = this;\r\n\t\t\toptions = $.extend(true, {}, $.jstree.defaults, options);\r\n\t\t\tif(opt && opt.plugins) {\r\n\t\t\t\toptions.plugins = opt.plugins;\r\n\t\t\t}\r\n\t\t\t$.each(options.plugins, function (i, k) {\r\n\t\t\t\tif(i !== 'core') {\r\n\t\t\t\t\ttmp = tmp.plugin(k, options[k]);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t$(el).data('jstree', tmp);\r\n\r\n\t\t\ttmp._model = {\r\n\t\t\t\tdata : {},\r\n\t\t\t\tchanged : [],\r\n\t\t\t\tforce_full_redraw : false,\r\n\t\t\t\tredraw_timeout : false,\r\n\t\t\t\tdefault_state : {\r\n\t\t\t\t\tloaded : true,\r\n\t\t\t\t\topened : false,\r\n\t\t\t\t\tselected : false,\r\n\t\t\t\t\tdisabled : false\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\ttmp._model.data[$.jstree.root] = {\r\n\t\t\t\tid : $.jstree.root,\r\n\t\t\t\tparent : null,\r\n\t\t\t\tparents : [],\r\n\t\t\t\tchildren : [],\r\n\t\t\t\tchildren_d : [],\r\n\t\t\t\tstate : { loaded : false }\r\n\t\t\t};\r\n\r\n\t\t\ttmp.element = $(el).addClass('jstree jstree-' + tmp._id);\r\n\t\t\ttmp.settings = options;\r\n\r\n\t\t\ttmp._data.core.ready = false;\r\n\t\t\ttmp._data.core.loaded = false;\r\n\t\t\ttmp._data.core.rtl = (tmp.element.css(\"direction\") === \"rtl\");\r\n\t\t\ttmp.element[tmp._data.core.rtl ? 'addClass' : 'removeClass'](\"jstree-rtl\");\r\n\t\t\ttmp.element.attr('role','tree');\r\n\t\t\tif(tmp.settings.core.multiple) {\r\n\t\t\t\ttmp.element.attr('aria-multiselectable', true);\r\n\t\t\t}\r\n\t\t\tif(!tmp.element.attr('tabindex')) {\r\n\t\t\t\ttmp.element.attr('tabindex','0');\r\n\t\t\t}\r\n\r\n\t\t\ttmp.bind();\r\n\t\t\t/**\r\n\t\t\t * triggered after all events are bound\r\n\t\t\t * @event\r\n\t\t\t * @name init.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"init\");\r\n\r\n\t\t\ttmp._data.core.original_container_html = tmp.element.find(\" > ul > li\").clone(true);\r\n\t\t\ttmp._data.core.original_container_html\r\n\t\t\t\t.find(\"li\").addBack()\r\n\t\t\t\t.contents().filter(function() {\r\n\t\t\t\t\treturn this.nodeType === 3 && (!this.nodeValue || /^\\s+$/.test(this.nodeValue));\r\n\t\t\t\t})\r\n\t\t\t\t.remove();\r\n\t\t\ttmp.element.html(\"<\"+\"ul class='jstree-container-ul jstree-children' role='group'><\"+\"li id='j\"+tmp._id+\"_loading' class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='tree-item'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + tmp.get_string(\"Loading ...\") + \"</a></li></ul>\");\r\n\t\t\ttmp.element.attr('aria-activedescendant','j' + tmp._id + '_loading');\r\n\t\t\ttmp._data.core.li_height = tmp.get_container_ul().children(\"li\").first().outerHeight() || 24;\r\n\t\t\ttmp._data.core.node = tmp._create_prototype_node();\r\n\t\t\t/**\r\n\t\t\t * triggered after the loading text is shown and before loading starts\r\n\t\t\t * @event\r\n\t\t\t * @name loading.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"loading\");\r\n\t\t\ttmp.load_node($.jstree.root);\r\n\t\t\treturn tmp;\r\n\t\t},\r\n\r\n\t\t/**\r\n\t\t * destroy an instance\r\n\t\t * @name destroy()\r\n\t\t * @param  {Boolean} keep_html if not set to `true` the container will be emptied, otherwise the current DOM elements will be kept intact\r\n\t\t */\r\n\t\tdestroy : function (keep_html) {\r\n\t\t\t/**\r\n\t\t\t * triggered before the tree is destroyed\r\n\t\t\t * @event\r\n\t\t\t * @name destroy.jstree\r\n\t\t\t */\r\n\t\t\ttmp.trigger(\"destroy\");\r\n\t\t\tif(this._wrk) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\twindow.URL.revokeObjectURL(this._wrk);\r\n\t\t\t\t\tthis._wrk = null;\r\n\t\t\t\t}\r\n\t\t\t\tcatch (ignore) { }\r\n\t\t\t}\r\n\t\t\tif(!keep_html) { this.element.empty(); }\r\n\t\t\tthis.teardown();\r\n\t\t},\r\n\t\t/**\r\n\t\t * Create a prototype node\r\n\t\t * @name _create_prototype_node()\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_create_prototype_node : function () {\r\n\t\t\tvar _node = document.createElement('LI'), _temp1, _temp2;\r\n\t\t\t_node.setAttribute('role', 'treeitem');\r\n\t\t\t_temp1 = document.createElement('I');\r\n\t\t\t_temp1.className = 'jstree-icon jstree-ocl';\r\n\t\t\t_temp1.setAttribute('role', 'presentation');\r\n\t\t\t_node.appendChild(_temp1);\r\n\t\t\t_temp1 = document.createElement('A');\r\n\t\t\t_temp1.className = 'jstree-anchor';\r\n\t\t\t_temp1.setAttribute('href','#');\r\n\t\t\t_temp1.setAttribute('tabindex','-1');\r\n\t\t\t_temp2 = document.createElement('I');\r\n\t\t\t_temp2.className = 'jstree-icon jstree-themeicon';\r\n\t\t\t_temp2.setAttribute('role', 'presentation');\r\n\t\t\t_temp1.appendChild(_temp2);\r\n\t\t\t_node.appendChild(_temp1);\r\n\t\t\t_temp1 = _temp2 = null;\r\n\r\n\t\t\treturn _node;\r\n\t\t},\r\n\t\t_kbevent_to_func : function (e) {\r\n\t\t\tvar keys = {\r\n\t\t\t\t8: \"Backspace\", 9: \"Tab\", 13: \"Return\", 19: \"Pause\", 27: \"Esc\",\r\n\t\t\t\t32: \"Space\", 33: \"PageUp\", 34: \"PageDown\", 35: \"End\", 36: \"Home\",\r\n\t\t\t\t37: \"Left\", 38: \"Up\", 39: \"Right\", 40: \"Down\", 44: \"Print\", 45: \"Insert\",\r\n\t\t\t\t46: \"Delete\", 96: \"Numpad0\", 97: \"Numpad1\", 98: \"Numpad2\", 99 : \"Numpad3\",\r\n\t\t\t\t100: \"Numpad4\", 101: \"Numpad5\", 102: \"Numpad6\", 103: \"Numpad7\",\r\n\t\t\t\t104: \"Numpad8\", 105: \"Numpad9\", '-13': \"NumpadEnter\", 112: \"F1\",\r\n\t\t\t\t113: \"F2\", 114: \"F3\", 115: \"F4\", 116: \"F5\", 117: \"F6\", 118: \"F7\",\r\n\t\t\t\t119: \"F8\", 120: \"F9\", 121: \"F10\", 122: \"F11\", 123: \"F12\", 144: \"Numlock\",\r\n\t\t\t\t145: \"Scrolllock\", 16: 'Shift', 17: 'Ctrl', 18: 'Alt',\r\n\t\t\t\t48: '0',  49: '1',  50: '2',  51: '3',  52: '4', 53:  '5',\r\n\t\t\t\t54: '6',  55: '7',  56: '8',  57: '9',  59: ';',  61: '=', 65:  'a',\r\n\t\t\t\t66: 'b',  67: 'c',  68: 'd',  69: 'e',  70: 'f',  71: 'g', 72:  'h',\r\n\t\t\t\t73: 'i',  74: 'j',  75: 'k',  76: 'l',  77: 'm',  78: 'n', 79:  'o',\r\n\t\t\t\t80: 'p',  81: 'q',  82: 'r',  83: 's',  84: 't',  85: 'u', 86:  'v',\r\n\t\t\t\t87: 'w',  88: 'x',  89: 'y',  90: 'z', 107: '+', 109: '-', 110: '.',\r\n\t\t\t\t186: ';', 187: '=', 188: ',', 189: '-', 190: '.', 191: '/', 192: '`',\r\n\t\t\t\t219: '[', 220: '\\\\',221: ']', 222: \"'\", 111: '/', 106: '*', 173: '-'\r\n\t\t\t};\r\n\t\t\tvar parts = [];\r\n\t\t\tif (e.ctrlKey) { parts.push('ctrl'); }\r\n\t\t\tif (e.altKey) { parts.push('alt'); }\r\n\t\t\tif (e.shiftKey) { parts.push('shift'); }\r\n\t\t\tparts.push(keys[e.which] || e.which);\r\n\t\t\tparts = parts.sort().join('-').toLowerCase();\r\n\r\n\t\t\tvar kb = this.settings.core.keyboard, i, tmp;\r\n\t\t\tfor (i in kb) {\r\n\t\t\t\tif (kb.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp = i;\r\n\t\t\t\t\tif (tmp !== '-' && tmp !== '+') {\r\n\t\t\t\t\t\ttmp = tmp.replace('--', '-MINUS').replace('+-', '-MINUS').replace('++', '-PLUS').replace('-+', '-PLUS');\r\n\t\t\t\t\t\ttmp = tmp.split(/-|\\+/).sort().join('-').replace('MINUS', '-').replace('PLUS', '+').toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (tmp === parts) {\r\n\t\t\t\t\t\treturn kb[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t},\r\n\t\t/**\r\n\t\t * part of the destroying of an instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name teardown()\r\n\t\t */\r\n\t\tteardown : function () {\r\n\t\t\tthis.unbind();\r\n\t\t\tthis.element\r\n\t\t\t\t.removeClass('jstree')\r\n\t\t\t\t.removeData('jstree')\r\n\t\t\t\t.find(\"[class^='jstree']\")\r\n\t\t\t\t\t.addBack()\r\n\t\t\t\t\t.attr(\"class\", function () { return this.className.replace(/jstree[^ ]*|$/ig,''); });\r\n\t\t\tthis.element = null;\r\n\t\t},\r\n\t\t/**\r\n\t\t * bind all events. Used internally.\r\n\t\t * @private\r\n\t\t * @name bind()\r\n\t\t */\r\n\t\tbind : function () {\r\n\t\t\tvar word = '',\r\n\t\t\t\ttout = null,\r\n\t\t\t\twas_click = 0;\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"dblclick.jstree\", function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(document.selection && document.selection.empty) {\r\n\t\t\t\t\t\t\tdocument.selection.empty();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tif(window.getSelection) {\r\n\t\t\t\t\t\t\t\tvar sel = window.getSelection();\r\n\t\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\t\tsel.removeAllRanges();\r\n\t\t\t\t\t\t\t\t\tsel.collapse();\r\n\t\t\t\t\t\t\t\t} catch (ignore) { }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"mousedown.jstree\", $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target === this.element[0]) {\r\n\t\t\t\t\t\t\te.preventDefault(); // prevent losing focus when clicking scroll arrows (FF, Chrome)\r\n\t\t\t\t\t\t\twas_click = +(new Date()); // ie does not allow to prevent losing focus\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"mousedown.jstree\", \".jstree-ocl\", function (e) {\r\n\t\t\t\t\t\te.preventDefault(); // prevent any node inside from losing focus when clicking the open/close icon\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-ocl\", $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.toggle_node(e.target);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"dblclick.jstree\", \".jstree-anchor\", $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(this.settings.core.dblclick_toggle) {\r\n\t\t\t\t\t\t\tthis.toggle_node(e.target);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-anchor\", $.proxy(function (e) {\r\n\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\tif(e.currentTarget !== document.activeElement) { $(e.currentTarget).focus(); }\r\n\t\t\t\t\t\tthis.activate_node(e.currentTarget, e);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('keydown.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(this._data.core.rtl) {\r\n\t\t\t\t\t\t\tif(e.which === 37) { e.which = 39; }\r\n\t\t\t\t\t\t\telse if(e.which === 39) { e.which = 37; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar f = this._kbevent_to_func(e);\r\n\t\t\t\t\t\tif (f) {\r\n\t\t\t\t\t\t\tvar r = f.call(this, e);\r\n\t\t\t\t\t\t\tif (r === false || r === true) {\r\n\t\t\t\t\t\t\t\treturn r;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"load_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(data.status) {\r\n\t\t\t\t\t\t\tif(data.node.id === $.jstree.root && !this._data.core.loaded) {\r\n\t\t\t\t\t\t\t\tthis._data.core.loaded = true;\r\n\t\t\t\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\r\n\t\t\t\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t * triggered after the root node is loaded for the first time\r\n\t\t\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t\t\t * @name loaded.jstree\r\n\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\tthis.trigger(\"loaded\");\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!this._data.core.ready) {\r\n\t\t\t\t\t\t\t\tsetTimeout($.proxy(function() {\r\n\t\t\t\t\t\t\t\t\tif(this.element && !this.get_container_ul().find('.jstree-loading').length) {\r\n\t\t\t\t\t\t\t\t\t\tthis._data.core.ready = true;\r\n\t\t\t\t\t\t\t\t\t\tif(this._data.core.selected.length) {\r\n\t\t\t\t\t\t\t\t\t\t\tif(this.settings.core.expand_selected_onload) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tvar tmp = [], i, j;\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttmp = tmp.concat(this._model.data[this._data.core.selected[i]].parents);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\ttmp = $.vakata.array_unique(tmp);\r\n\t\t\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.open_node(tmp[i], false, 0);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'ready', 'selected' : this._data.core.selected });\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t\t\t\t * triggered after all nodes are finished loading\r\n\t\t\t\t\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t\t\t\t\t * @name ready.jstree\r\n\t\t\t\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\t\t\t\tthis.trigger(\"ready\");\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}, this), 0);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t// quick searching when the tree is focused\r\n\t\t\t\t.on('keypress.jstree', $.proxy(function (e) {\r\n\t\t\t\t\t\tif(e.target.tagName && e.target.tagName.toLowerCase() === \"input\") { return true; }\r\n\t\t\t\t\t\tif(tout) { clearTimeout(tout); }\r\n\t\t\t\t\t\ttout = setTimeout(function () {\r\n\t\t\t\t\t\t\tword = '';\r\n\t\t\t\t\t\t}, 500);\r\n\r\n\t\t\t\t\t\tvar chr = String.fromCharCode(e.which).toLowerCase(),\r\n\t\t\t\t\t\t\tcol = this.element.find('.jstree-anchor').filter(':visible'),\r\n\t\t\t\t\t\t\tind = col.index(document.activeElement) || 0,\r\n\t\t\t\t\t\t\tend = false;\r\n\t\t\t\t\t\tword += chr;\r\n\r\n\t\t\t\t\t\t// match for whole word from current node down (including the current node)\r\n\t\t\t\t\t\tif(word.length > 1) {\r\n\t\t\t\t\t\t\tcol.slice(ind).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\r\n\t\t\t\t\t\t\t// match for whole word from the beginning of the tree\r\n\t\t\t\t\t\t\tcol.slice(0, ind).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().indexOf(word) === 0) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// list nodes that start with that letter (only if word consists of a single char)\r\n\t\t\t\t\t\tif(new RegExp('^' + chr.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + '+$').test(word)) {\r\n\t\t\t\t\t\t\t// search for the next node starting with that letter\r\n\t\t\t\t\t\t\tcol.slice(ind + 1).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\r\n\t\t\t\t\t\t\t// search from the beginning\r\n\t\t\t\t\t\t\tcol.slice(0, ind + 1).each($.proxy(function (i, v) {\r\n\t\t\t\t\t\t\t\tif($(v).text().toLowerCase().charAt(0) === chr) {\r\n\t\t\t\t\t\t\t\t\t$(v).focus();\r\n\t\t\t\t\t\t\t\t\tend = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t\t\tif(end) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t// THEME RELATED\r\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tvar s = this.settings.core.themes;\r\n\t\t\t\t\t\tthis._data.core.themes.dots\t\t\t= s.dots;\r\n\t\t\t\t\t\tthis._data.core.themes.stripes\t\t= s.stripes;\r\n\t\t\t\t\t\tthis._data.core.themes.icons\t\t= s.icons;\r\n\t\t\t\t\t\tthis._data.core.themes.ellipsis\t\t= s.ellipsis;\r\n\t\t\t\t\t\tthis.set_theme(s.name || \"default\", s.url);\r\n\t\t\t\t\t\tthis.set_theme_variant(s.variant);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis[ this._data.core.themes.dots ? \"show_dots\" : \"hide_dots\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.icons ? \"show_icons\" : \"hide_icons\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.stripes ? \"show_stripes\" : \"hide_stripes\" ]();\r\n\t\t\t\t\t\tthis[ this._data.core.themes.ellipsis ? \"show_ellipsis\" : \"hide_ellipsis\" ]();\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('blur.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\t\t\t$(e.currentTarget).filter('.jstree-hovered').mouseleave();\r\n\t\t\t\t\t\tthis.element.attr('tabindex', '0');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('focus.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tvar tmp = this.get_node(e.currentTarget);\r\n\t\t\t\t\t\tif(tmp && tmp.id) {\r\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.element.find('.jstree-hovered').not(e.currentTarget).mouseleave();\r\n\t\t\t\t\t\t$(e.currentTarget).mouseenter();\r\n\t\t\t\t\t\tthis.element.attr('tabindex', '-1');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('focus.jstree', $.proxy(function () {\r\n\t\t\t\t\t\tif(+(new Date()) - was_click > 500 && !this._data.core.focused && this.settings.core.restore_focus) {\r\n\t\t\t\t\t\t\twas_click = 0;\r\n\t\t\t\t\t\t\tvar act = this.get_node(this.element.attr('aria-activedescendant'), true);\r\n\t\t\t\t\t\t\tif(act) {\r\n\t\t\t\t\t\t\t\tact.find('> .jstree-anchor').focus();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('mouseenter.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.hover_node(e.currentTarget);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on('mouseleave.jstree', '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\r\n\t\t\t\t\t}, this));\r\n\t\t},\r\n\t\t/**\r\n\t\t * part of the destroying of an instance. Used internally.\r\n\t\t * @private\r\n\t\t * @name unbind()\r\n\t\t */\r\n\t\tunbind : function () {\r\n\t\t\tthis.element.off('.jstree');\r\n\t\t\t$(document).off('.jstree-' + this._id);\r\n\t\t},\r\n\t\t/**\r\n\t\t * trigger an event. Used internally.\r\n\t\t * @private\r\n\t\t * @name trigger(ev [, data])\r\n\t\t * @param  {String} ev the name of the event to trigger\r\n\t\t * @param  {Object} data additional data to pass with the event\r\n\t\t */\r\n\t\ttrigger : function (ev, data) {\r\n\t\t\tif(!data) {\r\n\t\t\t\tdata = {};\r\n\t\t\t}\r\n\t\t\tdata.instance = this;\r\n\t\t\tthis.element.trigger(ev.replace('.jstree','') + '.jstree', data);\r\n\t\t},\r\n\t\t/**\r\n\t\t * returns the jQuery extended instance container\r\n\t\t * @name get_container()\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_container : function () {\r\n\t\t\treturn this.element;\r\n\t\t},\r\n\t\t/**\r\n\t\t * returns the jQuery extended main UL node inside the instance container. Used internally.\r\n\t\t * @private\r\n\t\t * @name get_container_ul()\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_container_ul : function () {\r\n\t\t\treturn this.element.children(\".jstree-children\").first();\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets string replacements (localization). Used internally.\r\n\t\t * @private\r\n\t\t * @name get_string(key)\r\n\t\t * @param  {String} key\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_string : function (key) {\r\n\t\t\tvar a = this.settings.core.strings;\r\n\t\t\tif($.isFunction(a)) { return a.call(this, key); }\r\n\t\t\tif(a && a[key]) { return a[key]; }\r\n\t\t\treturn key;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the first child of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _firstChild(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_firstChild : function (dom) {\r\n\t\t\tdom = dom ? dom.firstChild : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.nextSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the next sibling of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _nextSibling(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_nextSibling : function (dom) {\r\n\t\t\tdom = dom ? dom.nextSibling : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.nextSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the previous sibling of a DOM node. Used internally.\r\n\t\t * @private\r\n\t\t * @name _previousSibling(dom)\r\n\t\t * @param  {DOMElement} dom\r\n\t\t * @return {DOMElement}\r\n\t\t */\r\n\t\t_previousSibling : function (dom) {\r\n\t\t\tdom = dom ? dom.previousSibling : null;\r\n\t\t\twhile(dom !== null && dom.nodeType !== 1) {\r\n\t\t\t\tdom = dom.previousSibling;\r\n\t\t\t}\r\n\t\t\treturn dom;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the JSON representation of a node (or the actual jQuery extended DOM node) by using any input (child DOM element, ID string, selector, etc)\r\n\t\t * @name get_node(obj [, as_dom])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} as_dom\r\n\t\t * @return {Object|jQuery}\r\n\t\t */\r\n\t\tget_node : function (obj, as_dom) {\r\n\t\t\tif(obj && obj.id) {\r\n\t\t\t\tobj = obj.id;\r\n\t\t\t}\r\n\t\t\tvar dom;\r\n\t\t\ttry {\r\n\t\t\t\tif(this._model.data[obj]) {\r\n\t\t\t\t\tobj = this._model.data[obj];\r\n\t\t\t\t}\r\n\t\t\t\telse if(typeof obj === \"string\" && this._model.data[obj.replace(/^#/, '')]) {\r\n\t\t\t\t\tobj = this._model.data[obj.replace(/^#/, '')];\r\n\t\t\t\t}\r\n\t\t\t\telse if(typeof obj === \"string\" && (dom = $('#' + obj.replace($.jstree.idregex,'\\\\$&'), this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\r\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\r\n\t\t\t\t}\r\n\t\t\t\telse if((dom = $(obj, this.element)).length && this._model.data[dom.closest('.jstree-node').attr('id')]) {\r\n\t\t\t\t\tobj = this._model.data[dom.closest('.jstree-node').attr('id')];\r\n\t\t\t\t}\r\n\t\t\t\telse if((dom = $(obj, this.element)).length && dom.hasClass('jstree')) {\r\n\t\t\t\t\tobj = this._model.data[$.jstree.root];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(as_dom) {\r\n\t\t\t\t\tobj = obj.id === $.jstree.root ? this.element : $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\t} catch (ex) { return false; }\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the path to a node, either consisting of node texts, or of node IDs, optionally glued together (otherwise an array)\r\n\t\t * @name get_path(obj [, glue, ids])\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {String} glue if you want the path as a string - pass the glue here (for example '/'), if a falsy value is supplied here, an array is returned\r\n\t\t * @param  {Boolean} ids if set to true build the path using ID, otherwise node text is used\r\n\t\t * @return {mixed}\r\n\t\t */\r\n\t\tget_path : function (obj, glue, ids) {\r\n\t\t\tobj = obj.parents ? obj : this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root || !obj.parents) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar i, j, p = [];\r\n\t\t\tp.push(ids ? obj.id : obj.text);\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tp.push(ids ? obj.parents[i] : this.get_text(obj.parents[i]));\r\n\t\t\t}\r\n\t\t\tp = p.reverse().slice(1);\r\n\t\t\treturn glue ? p.join(glue) : p;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the next visible node that is below the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\r\n\t\t * @name get_next_dom(obj [, strict])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} strict\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_next_dom : function (obj, strict) {\r\n\t\t\tvar tmp;\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\ttmp = this._firstChild(this.get_container_ul()[0]);\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(strict) {\r\n\t\t\t\ttmp = obj[0];\r\n\t\t\t\tdo {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(obj.hasClass(\"jstree-open\")) {\r\n\t\t\t\ttmp = this._firstChild(obj.children('.jstree-children')[0]);\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp !== null) {\r\n\t\t\t\t\treturn $(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = obj[0];\r\n\t\t\tdo {\r\n\t\t\t\ttmp = this._nextSibling(tmp);\r\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\tif(tmp !== null) {\r\n\t\t\t\treturn $(tmp);\r\n\t\t\t}\r\n\t\t\treturn obj.parentsUntil(\".jstree\",\".jstree-node\").nextAll(\".jstree-node:visible\").first();\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the previous visible node that is above the `obj` node. If `strict` is set to `true` only sibling nodes are returned.\r\n\t\t * @name get_prev_dom(obj [, strict])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Boolean} strict\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_prev_dom : function (obj, strict) {\r\n\t\t\tvar tmp;\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\ttmp = this.get_container_ul()[0].lastChild;\r\n\t\t\t\twhile (tmp && tmp.offsetHeight === 0) {\r\n\t\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(strict) {\r\n\t\t\t\ttmp = obj[0];\r\n\t\t\t\tdo {\r\n\t\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\t\treturn tmp ? $(tmp) : false;\r\n\t\t\t}\r\n\t\t\ttmp = obj[0];\r\n\t\t\tdo {\r\n\t\t\t\ttmp = this._previousSibling(tmp);\r\n\t\t\t} while (tmp && tmp.offsetHeight === 0);\r\n\t\t\tif(tmp !== null) {\r\n\t\t\t\tobj = $(tmp);\r\n\t\t\t\twhile(obj.hasClass(\"jstree-open\")) {\r\n\t\t\t\t\tobj = obj.children(\".jstree-children\").first().children(\".jstree-node:visible:last\");\r\n\t\t\t\t}\r\n\t\t\t\treturn obj;\r\n\t\t\t}\r\n\t\t\ttmp = obj[0].parentNode.parentNode;\r\n\t\t\treturn tmp && tmp.className && tmp.className.indexOf('jstree-node') !== -1 ? $(tmp) : false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the parent ID of a node\r\n\t\t * @name get_parent(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_parent : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.parent;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get a jQuery collection of all the children of a node (node must be rendered), returns false on error\r\n\t\t * @name get_children_dom(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {jQuery}\r\n\t\t */\r\n\t\tget_children_dom : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(obj[0] === this.element[0]) {\r\n\t\t\t\treturn this.get_container_ul().children(\".jstree-node\");\r\n\t\t\t}\r\n\t\t\tif(!obj || !obj.length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.children(\".jstree-children\").children(\".jstree-node\");\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node has children\r\n\t\t * @name is_parent(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_parent : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && (obj.state.loaded === false || obj.children.length > 0);\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is loaded (its children are available)\r\n\t\t * @name is_loaded(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_loaded : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state.loaded;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is currently loading (fetching children)\r\n\t\t * @name is_loading(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_loading : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state && obj.state.loading;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is opened\r\n\t\t * @name is_open(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_open : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state.opened;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node is in a closed state\r\n\t\t * @name is_closed(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_closed : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && this.is_parent(obj) && !obj.state.opened;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if a node has no children\r\n\t\t * @name is_leaf(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_leaf : function (obj) {\r\n\t\t\treturn !this.is_parent(obj);\r\n\t\t},\r\n\t\t/**\r\n\t\t * loads a node (fetches its children using the `core.data` setting). Multiple nodes can be passed to by using an array.\r\n\t\t * @name load_node(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives two arguments - the node and a boolean status\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger load_node.jstree\r\n\t\t */\r\n\t\tload_node : function (obj, callback) {\r\n\t\t\tvar k, l, i, j, c;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tthis._load_nodes(obj.slice(), callback);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) {\r\n\t\t\t\tif(callback) { callback.call(this, obj, false); }\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t// if(obj.state.loading) { } // the node is already loading - just wait for it to load and invoke callback? but if called implicitly it should be loaded again?\r\n\t\t\tif(obj.state.loaded) {\r\n\t\t\t\tobj.state.loaded = false;\r\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\r\n\t\t\t\t\t\treturn $.inArray(v, obj.children_d) === -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tfor(k = 0, l = obj.children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(this._model.data[obj.children_d[k]].state.selected) {\r\n\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdelete this._model.data[obj.children_d[k]];\r\n\t\t\t\t}\r\n\t\t\t\tif (c) {\r\n\t\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\r\n\t\t\t\t\t\treturn $.inArray(v, obj.children_d) === -1;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tobj.children = [];\r\n\t\t\t\tobj.children_d = [];\r\n\t\t\t\tif(c) {\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'load_node', 'node' : obj, 'selected' : this._data.core.selected });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj.state.failed = false;\r\n\t\t\tobj.state.loading = true;\r\n\t\t\tthis.get_node(obj, true).addClass(\"jstree-loading\").attr('aria-busy',true);\r\n\t\t\tthis._load_node(obj, $.proxy(function (status) {\r\n\t\t\t\tobj = this._model.data[obj.id];\r\n\t\t\t\tobj.state.loading = false;\r\n\t\t\t\tobj.state.loaded = status;\r\n\t\t\t\tobj.state.failed = !obj.state.loaded;\r\n\t\t\t\tvar dom = this.get_node(obj, true), i = 0, j = 0, m = this._model.data, has_children = false;\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tif(m[obj.children[i]] && !m[obj.children[i]].state.hidden) {\r\n\t\t\t\t\t\thas_children = true;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(obj.state.loaded && dom && dom.length) {\r\n\t\t\t\t\tdom.removeClass('jstree-closed jstree-open jstree-leaf');\r\n\t\t\t\t\tif (!has_children) {\r\n\t\t\t\t\t\tdom.addClass('jstree-leaf');\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tif (obj.id !== '#') {\r\n\t\t\t\t\t\t\tdom.addClass(obj.state.opened ? 'jstree-open' : 'jstree-closed');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered after a node is loaded\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name load_node.jstree\r\n\t\t\t\t * @param {Object} node the node that was loading\r\n\t\t\t\t * @param {Boolean} status was the node loaded successfully\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('load_node', { \"node\" : obj, \"status\" : status });\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, status);\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * load an array of nodes (will also load unavailable nodes as soon as the appear in the structure). Used internally.\r\n\t\t * @private\r\n\t\t * @name _load_nodes(nodes [, callback])\r\n\t\t * @param  {array} nodes\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - the array passed to _load_nodes\r\n\t\t */\r\n\t\t_load_nodes : function (nodes, callback, is_callback, force_reload) {\r\n\t\t\tvar r = true,\r\n\t\t\t\tc = function () { this._load_nodes(nodes, callback, true); },\r\n\t\t\t\tm = this._model.data, i, j, tmp = [];\r\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\tif(m[nodes[i]] && ( (!m[nodes[i]].state.loaded && !m[nodes[i]].state.failed) || (!is_callback && force_reload) )) {\r\n\t\t\t\t\tif(!this.is_loading(nodes[i])) {\r\n\t\t\t\t\t\tthis.load_node(nodes[i], c);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tr = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(r) {\r\n\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\tif(m[nodes[i]] && m[nodes[i]].state.loaded) {\r\n\t\t\t\t\t\ttmp.push(nodes[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(callback && !callback.done) {\r\n\t\t\t\t\tcallback.call(this, tmp);\r\n\t\t\t\t\tcallback.done = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * loads all unloaded nodes\r\n\t\t * @name load_all([obj, callback])\r\n\t\t * @param {mixed} obj the node to load recursively, omit to load all nodes in the tree\r\n\t\t * @param {function} callback a function to be executed once loading all the nodes is complete,\r\n\t\t * @trigger load_all.jstree\r\n\t\t */\r\n\t\tload_all : function (obj, callback) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar to_load = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tc = m[obj.id].children_d,\r\n\t\t\t\ti, j;\r\n\t\t\tif(obj.state && !obj.state.loaded) {\r\n\t\t\t\tto_load.push(obj.id);\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = c.length; i < j; i++) {\r\n\t\t\t\tif(m[c[i]] && m[c[i]].state && !m[c[i]].state.loaded) {\r\n\t\t\t\t\tto_load.push(c[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(to_load.length) {\r\n\t\t\t\tthis._load_nodes(to_load, function () {\r\n\t\t\t\t\tthis.load_all(obj, callback);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered after a load_all call completes\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name load_all.jstree\r\n\t\t\t\t * @param {Object} node the recursively loaded node\r\n\t\t\t\t */\r\n\t\t\t\tif(callback) { callback.call(this, obj); }\r\n\t\t\t\tthis.trigger('load_all', { \"node\" : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * handles the actual loading of a node. Used only internally.\r\n\t\t * @private\r\n\t\t * @name _load_node(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {function} callback a function to be executed once loading is complete, the function is executed in the instance's scope and receives one argument - a boolean status\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\t_load_node : function (obj, callback) {\r\n\t\t\tvar s = this.settings.core.data, t;\r\n\t\t\tvar notTextOrCommentNode = function notTextOrCommentNode () {\r\n\t\t\t\treturn this.nodeType !== 3 && this.nodeType !== 8;\r\n\t\t\t};\r\n\t\t\t// use original HTML\r\n\t\t\tif(!s) {\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_html_data(obj, this._data.core.original_container_html.clone(true), function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t// return callback.call(this, obj.id === $.jstree.root ? this._append_html_data(obj, this._data.core.original_container_html.clone(true)) : false);\r\n\t\t\t}\r\n\t\t\tif($.isFunction(s)) {\r\n\t\t\t\treturn s.call(this, obj, $.proxy(function (d) {\r\n\t\t\t\t\tif(d === false) {\r\n\t\t\t\t\t\tcallback.call(this, false);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $($.parseHTML(d)).filter(notTextOrCommentNode) : d, function (status) {\r\n\t\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// return d === false ? callback.call(this, false) : callback.call(this, this[typeof d === 'string' ? '_append_html_data' : '_append_json_data'](obj, typeof d === 'string' ? $(d) : d));\r\n\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(typeof s === 'object') {\r\n\t\t\t\tif(s.url) {\r\n\t\t\t\t\ts = $.extend(true, {}, s);\r\n\t\t\t\t\tif($.isFunction(s.url)) {\r\n\t\t\t\t\t\ts.url = s.url.call(this, obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif($.isFunction(s.data)) {\r\n\t\t\t\t\t\ts.data = s.data.call(this, obj);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn $.ajax(s)\r\n\t\t\t\t\t\t.done($.proxy(function (d,t,x) {\r\n\t\t\t\t\t\t\t\tvar type = x.getResponseHeader('Content-Type');\r\n\t\t\t\t\t\t\t\tif((type && type.indexOf('json') !== -1) || typeof d === \"object\") {\r\n\t\t\t\t\t\t\t\t\treturn this._append_json_data(obj, d, function (status) { callback.call(this, status); });\r\n\t\t\t\t\t\t\t\t\t//return callback.call(this, this._append_json_data(obj, d));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif((type && type.indexOf('html') !== -1) || typeof d === \"string\") {\r\n\t\t\t\t\t\t\t\t\treturn this._append_html_data(obj, $($.parseHTML(d)).filter(notTextOrCommentNode), function (status) { callback.call(this, status); });\r\n\t\t\t\t\t\t\t\t\t// return callback.call(this, this._append_html_data(obj, $(d)));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : x }) };\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t.fail($.proxy(function (f) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'core', 'id' : 'core_04', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id, 'xhr' : f }) };\r\n\t\t\t\t\t\t\t\tcallback.call(this, false);\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t}\r\n\t\t\t\tif ($.isArray(s)) {\r\n\t\t\t\t\tt = $.extend(true, [], s);\r\n\t\t\t\t} else if ($.isPlainObject(s)) {\r\n\t\t\t\t\tt = $.extend(true, {}, s);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tt = s;\r\n\t\t\t\t}\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_json_data(obj, t, function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_05', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\r\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_json_data(obj, t) : false) );\r\n\t\t\t}\r\n\t\t\tif(typeof s === 'string') {\r\n\t\t\t\tif(obj.id === $.jstree.root) {\r\n\t\t\t\t\treturn this._append_html_data(obj, $($.parseHTML(s)).filter(notTextOrCommentNode), function (status) {\r\n\t\t\t\t\t\tcallback.call(this, status);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'nodata', 'plugin' : 'core', 'id' : 'core_06', 'reason' : 'Could not load node', 'data' : JSON.stringify({ 'id' : obj.id }) };\r\n\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\treturn callback.call(this, false);\r\n\t\t\t\t}\r\n\t\t\t\t//return callback.call(this, (obj.id === $.jstree.root ? this._append_html_data(obj, $(s)) : false) );\r\n\t\t\t}\r\n\t\t\treturn callback.call(this, false);\r\n\t\t},\r\n\t\t/**\r\n\t\t * adds a node to the list of nodes to redraw. Used only internally.\r\n\t\t * @private\r\n\t\t * @name _node_changed(obj [, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t */\r\n\t\t_node_changed : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n      if (obj && $.inArray(obj.id, this._model.changed) === -1) {\r\n\t\t\t\tthis._model.changed.push(obj.id);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * appends HTML content to the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name _append_html_data(obj, data)\r\n\t\t * @param  {mixed} obj the node to append to\r\n\t\t * @param  {String} data the HTML string to parse and append\r\n\t\t * @trigger model.jstree, changed.jstree\r\n\t\t */\r\n\t\t_append_html_data : function (dom, data, cb) {\r\n\t\t\tdom = this.get_node(dom);\r\n\t\t\tdom.children = [];\r\n\t\t\tdom.children_d = [];\r\n\t\t\tvar dat = data.is('ul') ? data.children() : data,\r\n\t\t\t\tpar = dom.id,\r\n\t\t\t\tchd = [],\r\n\t\t\t\tdpc = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tp = m[par],\r\n\t\t\t\ts = this._data.core.selected.length,\r\n\t\t\t\ttmp, i, j;\r\n\t\t\tdat.each($.proxy(function (i, v) {\r\n\t\t\t\ttmp = this._parse_model_from_html($(v), par, p.parents.concat());\r\n\t\t\t\tif(tmp) {\r\n\t\t\t\t\tchd.push(tmp);\r\n\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, this));\r\n\t\t\tp.children = chd;\r\n\t\t\tp.children_d = dpc;\r\n\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when new data is inserted to the tree model\r\n\t\t\t * @event\r\n\t\t\t * @name model.jstree\r\n\t\t\t * @param {Array} nodes an array of node IDs\r\n\t\t\t * @param {String} parent the parent ID of the nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, 'parent' : par });\r\n\t\t\tif(par !== $.jstree.root) {\r\n\t\t\t\tthis._node_changed(par);\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.get_container_ul().children('.jstree-initial-node').remove();\r\n\t\t\t\tthis.redraw(true);\r\n\t\t\t}\r\n\t\t\tif(this._data.core.selected.length !== s) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\r\n\t\t\t}\r\n\t\t\tcb.call(this, true);\r\n\t\t},\r\n\t\t/**\r\n\t\t * appends JSON content to the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name _append_json_data(obj, data)\r\n\t\t * @param  {mixed} obj the node to append to\r\n\t\t * @param  {String} data the JSON object to parse and append\r\n\t\t * @param  {Boolean} force_processing internal param - do not set\r\n\t\t * @trigger model.jstree, changed.jstree\r\n\t\t */\r\n\t\t_append_json_data : function (dom, data, cb, force_processing) {\r\n\t\t\tif(this.element === null) { return; }\r\n\t\t\tdom = this.get_node(dom);\r\n\t\t\tdom.children = [];\r\n\t\t\tdom.children_d = [];\r\n\t\t\t// *%$@!!!\r\n\t\t\tif(data.d) {\r\n\t\t\t\tdata = data.d;\r\n\t\t\t\tif(typeof data === \"string\") {\r\n\t\t\t\t\tdata = JSON.parse(data);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!$.isArray(data)) { data = [data]; }\r\n\t\t\tvar w = null,\r\n\t\t\t\targs = {\r\n\t\t\t\t\t'df'\t: this._model.default_state,\r\n\t\t\t\t\t'dat'\t: data,\r\n\t\t\t\t\t'par'\t: dom.id,\r\n\t\t\t\t\t'm'\t\t: this._model.data,\r\n\t\t\t\t\t't_id'\t: this._id,\r\n\t\t\t\t\t't_cnt'\t: this._cnt,\r\n\t\t\t\t\t'sel'\t: this._data.core.selected\r\n\t\t\t\t},\r\n\t\t\t\tfunc = function (data, undefined) {\r\n\t\t\t\t\tif(data.data) { data = data.data; }\r\n\t\t\t\t\tvar dat = data.dat,\r\n\t\t\t\t\t\tpar = data.par,\r\n\t\t\t\t\t\tchd = [],\r\n\t\t\t\t\t\tdpc = [],\r\n\t\t\t\t\t\tadd = [],\r\n\t\t\t\t\t\tdf = data.df,\r\n\t\t\t\t\t\tt_id = data.t_id,\r\n\t\t\t\t\t\tt_cnt = data.t_cnt,\r\n\t\t\t\t\t\tm = data.m,\r\n\t\t\t\t\t\tp = m[par],\r\n\t\t\t\t\t\tsel = data.sel,\r\n\t\t\t\t\t\ttmp, i, j, rslt,\r\n\t\t\t\t\t\tparse_flat = function (d, p, ps) {\r\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\r\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\r\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\t\t\t\t\tvar tid = d.id.toString(),\r\n\t\t\t\t\t\t\t\ti, j, c, e,\r\n\t\t\t\t\t\t\t\ttmp = {\r\n\t\t\t\t\t\t\t\t\tid\t\t\t: tid,\r\n\t\t\t\t\t\t\t\t\ttext\t\t: d.text || '',\r\n\t\t\t\t\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\t\t\t\t\tchildren\t: d.children || [],\r\n\t\t\t\t\t\t\t\t\tchildren_d\t: d.children_d || [],\r\n\t\t\t\t\t\t\t\t\tdata\t\t: d.data,\r\n\t\t\t\t\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\t\t\t\t\toriginal\t: false\r\n\t\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tfor(i in df) {\r\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\t\t\t\t\ttmp.icon = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data) {\r\n\t\t\t\t\t\t\t\ttmp.data = d.data;\r\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tid;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\t\t\t\t\ttmp.children = [];\r\n\t\t\t\t\t\t\t\ttmp.children_d = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\r\n\t\t\t\t\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tc = parse_flat(m[tmp.children[i]], tmp.id, ps);\r\n\t\t\t\t\t\t\t\te = m[c];\r\n\t\t\t\t\t\t\t\ttmp.children_d.push(c);\r\n\t\t\t\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdelete d.data;\r\n\t\t\t\t\t\t\tdelete d.children;\r\n\t\t\t\t\t\t\tm[tmp.id].original = d;\r\n\t\t\t\t\t\t\tif(tmp.state.selected) {\r\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn tmp.id;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tparse_nest = function (d, p, ps) {\r\n\t\t\t\t\t\t\tif(!ps) { ps = []; }\r\n\t\t\t\t\t\t\telse { ps = ps.concat(); }\r\n\t\t\t\t\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\t\t\t\t\tvar tid = false, i, j, c, e, tmp;\r\n\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\ttid = 'j' + t_id + '_' + (++t_cnt);\r\n\t\t\t\t\t\t\t} while(m[tid]);\r\n\r\n\t\t\t\t\t\t\ttmp = {\r\n\t\t\t\t\t\t\t\tid\t\t\t: false,\r\n\t\t\t\t\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\r\n\t\t\t\t\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\t\t\t\tchildren\t: [],\r\n\t\t\t\t\t\t\t\tchildren_d\t: [],\r\n\t\t\t\t\t\t\t\tdata\t\t: null,\r\n\t\t\t\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\t\t\t\toriginal\t: false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tfor(i in df) {\r\n\t\t\t\t\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\r\n\t\t\t\t\t\t\tif(d && d.text) { tmp.text = d.text; }\r\n\t\t\t\t\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\t\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\t\t\t\t\ttmp.icon = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.data) {\r\n\t\t\t\t\t\t\t\ttmp.data = d.data;\r\n\t\t\t\t\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(tmp.li_attr.id && !tmp.id) {\r\n\t\t\t\t\t\t\t\ttmp.id = tmp.li_attr.id.toString();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.id) {\r\n\t\t\t\t\t\t\t\ttmp.id = tid;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\t\t\t\t\ttmp.li_attr.id = tmp.id;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children.length) {\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc = parse_nest(d.children[i], tmp.id, ps);\r\n\t\t\t\t\t\t\t\t\te = m[c];\r\n\t\t\t\t\t\t\t\t\ttmp.children.push(c);\r\n\t\t\t\t\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\t\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\t\t\t\t\ttmp.children = [];\r\n\t\t\t\t\t\t\t\ttmp.children_d = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tdelete d.data;\r\n\t\t\t\t\t\t\tdelete d.children;\r\n\t\t\t\t\t\t\ttmp.original = d;\r\n\t\t\t\t\t\t\tm[tmp.id] = tmp;\r\n\t\t\t\t\t\t\tif(tmp.state.selected) {\r\n\t\t\t\t\t\t\t\tadd.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn tmp.id;\r\n\t\t\t\t\t\t};\r\n\r\n\t\t\t\t\tif(dat.length && dat[0].id !== undefined && dat[0].parent !== undefined) {\r\n\t\t\t\t\t\t// Flat JSON support (for easy import from DB):\r\n\t\t\t\t\t\t// 1) convert to object (foreach)\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\tif(!dat[i].children) {\r\n\t\t\t\t\t\t\t\tdat[i].children = [];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(!dat[i].state) {\r\n\t\t\t\t\t\t\t\tdat[i].state = {};\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[dat[i].id.toString()] = dat[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 2) populate children (foreach)\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\tif (!m[dat[i].parent.toString()]) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'parse', 'plugin' : 'core', 'id' : 'core_07', 'reason' : 'Node with invalid parent', 'data' : JSON.stringify({ 'id' : dat[i].id.toString(), 'parent' : dat[i].parent.toString() }) };\r\n\t\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tm[dat[i].parent.toString()].children.push(dat[i].id.toString());\r\n\t\t\t\t\t\t\t// populate parent.children_d\r\n\t\t\t\t\t\t\tp.children_d.push(dat[i].id.toString());\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// 3) normalize && populate parents and children_d with recursion\r\n\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = parse_flat(m[p.children[i]], par, p.parents.concat());\r\n\t\t\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// ?) three_state selection - p.state.selected && t - (if three_state foreach(dat => ch) -> foreach(parents) if(parent.selected) child.selected = true;\r\n\t\t\t\t\t\trslt = {\r\n\t\t\t\t\t\t\t'cnt' : t_cnt,\r\n\t\t\t\t\t\t\t'mod' : m,\r\n\t\t\t\t\t\t\t'sel' : sel,\r\n\t\t\t\t\t\t\t'par' : par,\r\n\t\t\t\t\t\t\t'dpc' : dpc,\r\n\t\t\t\t\t\t\t'add' : add\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfor(i = 0, j = dat.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = parse_nest(dat[i], par, p.parents.concat());\r\n\t\t\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\t\t\tchd.push(tmp);\r\n\t\t\t\t\t\t\t\tdpc.push(tmp);\r\n\t\t\t\t\t\t\t\tif(m[tmp].children_d.length) {\r\n\t\t\t\t\t\t\t\t\tdpc = dpc.concat(m[tmp].children_d);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tp.children = chd;\r\n\t\t\t\t\t\tp.children_d = dpc;\r\n\t\t\t\t\t\tfor(i = 0, j = p.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[p.parents[i]].children_d = m[p.parents[i]].children_d.concat(dpc);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trslt = {\r\n\t\t\t\t\t\t\t'cnt' : t_cnt,\r\n\t\t\t\t\t\t\t'mod' : m,\r\n\t\t\t\t\t\t\t'sel' : sel,\r\n\t\t\t\t\t\t\t'par' : par,\r\n\t\t\t\t\t\t\t'dpc' : dpc,\r\n\t\t\t\t\t\t\t'add' : add\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof window === 'undefined' || typeof window.document === 'undefined') {\r\n\t\t\t\t\t\tpostMessage(rslt);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\treturn rslt;\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t\trslt = function (rslt, worker) {\r\n\t\t\t\t\tif(this.element === null) { return; }\r\n\t\t\t\t\tthis._cnt = rslt.cnt;\r\n\t\t\t\t\tvar i, m = this._model.data;\r\n\t\t\t\t\tfor (i in m) {\r\n\t\t\t\t\t\tif (m.hasOwnProperty(i) && m[i].state && m[i].state.loading && rslt.mod[i]) {\r\n\t\t\t\t\t\t\trslt.mod[i].state.loading = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._model.data = rslt.mod; // breaks the reference in load_node - careful\r\n\r\n\t\t\t\t\tif(worker) {\r\n\t\t\t\t\t\tvar j, a = rslt.add, r = rslt.sel, s = this._data.core.selected.slice();\r\n\t\t\t\t\t\tm = this._model.data;\r\n\t\t\t\t\t\t// if selection was changed while calculating in worker\r\n\t\t\t\t\t\tif(r.length !== s.length || $.vakata.array_unique(r.concat(s)).length !== r.length) {\r\n\t\t\t\t\t\t\t// deselect nodes that are no longer selected\r\n\t\t\t\t\t\t\tfor(i = 0, j = r.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif($.inArray(r[i], a) === -1 && $.inArray(r[i], s) === -1) {\r\n\t\t\t\t\t\t\t\t\tm[r[i]].state.selected = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// select nodes that were selected in the mean time\r\n\t\t\t\t\t\t\tfor(i = 0, j = s.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif($.inArray(s[i], r) === -1) {\r\n\t\t\t\t\t\t\t\t\tm[s[i]].state.selected = true;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(rslt.add.length) {\r\n\t\t\t\t\t\tthis._data.core.selected = this._data.core.selected.concat(rslt.add);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.trigger('model', { \"nodes\" : rslt.dpc, 'parent' : rslt.par });\r\n\r\n\t\t\t\t\tif(rslt.par !== $.jstree.root) {\r\n\t\t\t\t\t\tthis._node_changed(rslt.par);\r\n\t\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// this.get_container_ul().children('.jstree-initial-node').remove();\r\n\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(rslt.add.length) {\r\n\t\t\t\t\t\tthis.trigger('changed', { 'action' : 'model', 'selected' : this._data.core.selected });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcb.call(this, true);\r\n\t\t\t\t};\r\n\t\t\tif(this.settings.core.worker && window.Blob && window.URL && window.Worker) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif(this._wrk === null) {\r\n\t\t\t\t\t\tthis._wrk = window.URL.createObjectURL(\r\n\t\t\t\t\t\t\tnew window.Blob(\r\n\t\t\t\t\t\t\t\t['self.onmessage = ' + func.toString()],\r\n\t\t\t\t\t\t\t\t{type:\"text/javascript\"}\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!this._data.core.working || force_processing) {\r\n\t\t\t\t\t\tthis._data.core.working = true;\r\n\t\t\t\t\t\tw = new window.Worker(this._wrk);\r\n\t\t\t\t\t\tw.onmessage = $.proxy(function (e) {\r\n\t\t\t\t\t\t\trslt.call(this, e.data, true);\r\n\t\t\t\t\t\t\ttry { w.terminate(); w = null; } catch(ignore) { }\r\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this);\r\n\t\t\t\t\t\tif(!args.par) {\r\n\t\t\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tw.postMessage(args);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._data.core.worker_queue.push([dom, data, cb, true]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tcatch(e) {\r\n\t\t\t\t\trslt.call(this, func(args), false);\r\n\t\t\t\t\tif(this._data.core.worker_queue.length) {\r\n\t\t\t\t\t\tthis._append_json_data.apply(this, this._data.core.worker_queue.shift());\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis._data.core.working = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\trslt.call(this, func(args), false);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a jQuery object and appends them to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_html(d [, p, ps])\r\n\t\t * @param  {jQuery} d the jQuery object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_html : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = [].concat(ps); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar c, e, m = this._model.data,\r\n\t\t\t\tdata = {\r\n\t\t\t\t\tid\t\t\t: false,\r\n\t\t\t\t\ttext\t\t: false,\r\n\t\t\t\t\ticon\t\t: true,\r\n\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\tchildren\t: [],\r\n\t\t\t\t\tchildren_d\t: [],\r\n\t\t\t\t\tdata\t\t: null,\r\n\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\toriginal\t: false\r\n\t\t\t\t}, i, tmp, tid;\r\n\t\t\tfor(i in this._model.default_state) {\r\n\t\t\t\tif(this._model.default_state.hasOwnProperty(i)) {\r\n\t\t\t\t\tdata.state[i] = this._model.default_state[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = $.vakata.attributes(d, true);\r\n\t\t\t$.each(tmp, function (i, v) {\r\n\t\t\t\tv = $.trim(v);\r\n\t\t\t\tif(!v.length) { return true; }\r\n\t\t\t\tdata.li_attr[i] = v;\r\n\t\t\t\tif(i === 'id') {\r\n\t\t\t\t\tdata.id = v.toString();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\ttmp = d.children('a').first();\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\ttmp = $.vakata.attributes(tmp, true);\r\n\t\t\t\t$.each(tmp, function (i, v) {\r\n\t\t\t\t\tv = $.trim(v);\r\n\t\t\t\t\tif(v.length) {\r\n\t\t\t\t\t\tdata.a_attr[i] = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"a\").first().length ? d.children(\"a\").first().clone() : d.clone();\r\n\t\t\ttmp.children(\"ins, i, ul\").remove();\r\n\t\t\ttmp = tmp.html();\r\n\t\t\ttmp = $('<div />').html(tmp);\r\n\t\t\tdata.text = this.settings.core.force_text ? tmp.text() : tmp.html();\r\n\t\t\ttmp = d.data();\r\n\t\t\tdata.data = tmp ? $.extend(true, {}, tmp) : null;\r\n\t\t\tdata.state.opened = d.hasClass('jstree-open');\r\n\t\t\tdata.state.selected = d.children('a').hasClass('jstree-clicked');\r\n\t\t\tdata.state.disabled = d.children('a').hasClass('jstree-disabled');\r\n\t\t\tif(data.data && data.data.jstree) {\r\n\t\t\t\tfor(i in data.data.jstree) {\r\n\t\t\t\t\tif(data.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tdata.state[i] = data.data.jstree[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"a\").children(\".jstree-themeicon\");\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\tdata.icon = tmp.hasClass('jstree-themeicon-hidden') ? false : tmp.attr('rel');\r\n\t\t\t}\r\n\t\t\tif(data.state.icon !== undefined) {\r\n\t\t\t\tdata.icon = data.state.icon;\r\n\t\t\t}\r\n\t\t\tif(data.icon === undefined || data.icon === null || data.icon === \"\") {\r\n\t\t\t\tdata.icon = true;\r\n\t\t\t}\r\n\t\t\ttmp = d.children(\"ul\").children(\"li\");\r\n\t\t\tdo {\r\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\r\n\t\t\t} while(m[tid]);\r\n\t\t\tdata.id = data.li_attr.id ? data.li_attr.id.toString() : tid;\r\n\t\t\tif(tmp.length) {\r\n\t\t\t\ttmp.each($.proxy(function (i, v) {\r\n\t\t\t\t\tc = this._parse_model_from_html($(v), data.id, ps);\r\n\t\t\t\t\te = this._model.data[c];\r\n\t\t\t\t\tdata.children.push(c);\r\n\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\tdata.children_d = data.children_d.concat(e.children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this));\r\n\t\t\t\tdata.children_d = data.children_d.concat(data.children);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(d.hasClass('jstree-closed')) {\r\n\t\t\t\t\tdata.state.loaded = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(data.li_attr['class']) {\r\n\t\t\t\tdata.li_attr['class'] = data.li_attr['class'].replace('jstree-closed','').replace('jstree-open','');\r\n\t\t\t}\r\n\t\t\tif(data.a_attr['class']) {\r\n\t\t\t\tdata.a_attr['class'] = data.a_attr['class'].replace('jstree-clicked','').replace('jstree-disabled','');\r\n\t\t\t}\r\n\t\t\tm[data.id] = data;\r\n\t\t\tif(data.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(data.id);\r\n\t\t\t}\r\n\t\t\treturn data.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a JSON object (used when dealing with flat data, which has no nesting of children, but has id and parent properties) and appends it to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_flat_json(d [, p, ps])\r\n\t\t * @param  {Object} d the JSON object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_flat_json : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = ps.concat(); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar tid = d.id.toString(),\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tdf = this._model.default_state,\r\n\t\t\t\ti, j, c, e,\r\n\t\t\t\ttmp = {\r\n\t\t\t\t\tid\t\t\t: tid,\r\n\t\t\t\t\ttext\t\t: d.text || '',\r\n\t\t\t\t\ticon\t\t: d.icon !== undefined ? d.icon : true,\r\n\t\t\t\t\tparent\t\t: p,\r\n\t\t\t\t\tparents\t\t: ps,\r\n\t\t\t\t\tchildren\t: d.children || [],\r\n\t\t\t\t\tchildren_d\t: d.children_d || [],\r\n\t\t\t\t\tdata\t\t: d.data,\r\n\t\t\t\t\tstate\t\t: { },\r\n\t\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\t\toriginal\t: false\r\n\t\t\t\t};\r\n\t\t\tfor(i in df) {\r\n\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t}\r\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\ttmp.icon = true;\r\n\t\t\t}\r\n\t\t\tif(d && d.data) {\r\n\t\t\t\ttmp.data = d.data;\r\n\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\ttmp.li_attr.id = tid;\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t\ttmp.children_d = [];\r\n\t\t\t}\r\n\t\t\tm[tmp.id] = tmp;\r\n\t\t\tfor(i = 0, j = tmp.children.length; i < j; i++) {\r\n\t\t\t\tc = this._parse_model_from_flat_json(m[tmp.children[i]], tmp.id, ps);\r\n\t\t\t\te = m[c];\r\n\t\t\t\ttmp.children_d.push(c);\r\n\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete d.data;\r\n\t\t\tdelete d.children;\r\n\t\t\tm[tmp.id].original = d;\r\n\t\t\tif(tmp.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(tmp.id);\r\n\t\t\t}\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * parses a node from a JSON object and appends it to the in memory tree model. Used internally.\r\n\t\t * @private\r\n\t\t * @name _parse_model_from_json(d [, p, ps])\r\n\t\t * @param  {Object} d the JSON object to parse\r\n\t\t * @param  {String} p the parent ID\r\n\t\t * @param  {Array} ps list of all parents\r\n\t\t * @return {String} the ID of the object added to the model\r\n\t\t */\r\n\t\t_parse_model_from_json : function (d, p, ps) {\r\n\t\t\tif(!ps) { ps = []; }\r\n\t\t\telse { ps = ps.concat(); }\r\n\t\t\tif(p) { ps.unshift(p); }\r\n\t\t\tvar tid = false, i, j, c, e, m = this._model.data, df = this._model.default_state, tmp;\r\n\t\t\tdo {\r\n\t\t\t\ttid = 'j' + this._id + '_' + (++this._cnt);\r\n\t\t\t} while(m[tid]);\r\n\r\n\t\t\ttmp = {\r\n\t\t\t\tid\t\t\t: false,\r\n\t\t\t\ttext\t\t: typeof d === 'string' ? d : '',\r\n\t\t\t\ticon\t\t: typeof d === 'object' && d.icon !== undefined ? d.icon : true,\r\n\t\t\t\tparent\t\t: p,\r\n\t\t\t\tparents\t\t: ps,\r\n\t\t\t\tchildren\t: [],\r\n\t\t\t\tchildren_d\t: [],\r\n\t\t\t\tdata\t\t: null,\r\n\t\t\t\tstate\t\t: { },\r\n\t\t\t\tli_attr\t\t: { id : false },\r\n\t\t\t\ta_attr\t\t: { href : '#' },\r\n\t\t\t\toriginal\t: false\r\n\t\t\t};\r\n\t\t\tfor(i in df) {\r\n\t\t\t\tif(df.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.state[i] = df[i];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.id) { tmp.id = d.id.toString(); }\r\n\t\t\tif(d && d.text) { tmp.text = d.text; }\r\n\t\t\tif(d && d.data && d.data.jstree && d.data.jstree.icon) {\r\n\t\t\t\ttmp.icon = d.data.jstree.icon;\r\n\t\t\t}\r\n\t\t\tif(tmp.icon === undefined || tmp.icon === null || tmp.icon === \"\") {\r\n\t\t\t\ttmp.icon = true;\r\n\t\t\t}\r\n\t\t\tif(d && d.data) {\r\n\t\t\t\ttmp.data = d.data;\r\n\t\t\t\tif(d.data.jstree) {\r\n\t\t\t\t\tfor(i in d.data.jstree) {\r\n\t\t\t\t\t\tif(d.data.jstree.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\ttmp.state[i] = d.data.jstree[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.state === 'object') {\r\n\t\t\t\tfor (i in d.state) {\r\n\t\t\t\t\tif(d.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = d.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.li_attr === 'object') {\r\n\t\t\t\tfor (i in d.li_attr) {\r\n\t\t\t\t\tif(d.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.li_attr[i] = d.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(tmp.li_attr.id && !tmp.id) {\r\n\t\t\t\ttmp.id = tmp.li_attr.id.toString();\r\n\t\t\t}\r\n\t\t\tif(!tmp.id) {\r\n\t\t\t\ttmp.id = tid;\r\n\t\t\t}\r\n\t\t\tif(!tmp.li_attr.id) {\r\n\t\t\t\ttmp.li_attr.id = tmp.id;\r\n\t\t\t}\r\n\t\t\tif(d && typeof d.a_attr === 'object') {\r\n\t\t\t\tfor (i in d.a_attr) {\r\n\t\t\t\t\tif(d.a_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.a_attr[i] = d.a_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children.length) {\r\n\t\t\t\tfor(i = 0, j = d.children.length; i < j; i++) {\r\n\t\t\t\t\tc = this._parse_model_from_json(d.children[i], tmp.id, ps);\r\n\t\t\t\t\te = m[c];\r\n\t\t\t\t\ttmp.children.push(c);\r\n\t\t\t\t\tif(e.children_d.length) {\r\n\t\t\t\t\t\ttmp.children_d = tmp.children_d.concat(e.children_d);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ttmp.children_d = tmp.children_d.concat(tmp.children);\r\n\t\t\t}\r\n\t\t\tif(d && d.children && d.children === true) {\r\n\t\t\t\ttmp.state.loaded = false;\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t\ttmp.children_d = [];\r\n\t\t\t}\r\n\t\t\tdelete d.data;\r\n\t\t\tdelete d.children;\r\n\t\t\ttmp.original = d;\r\n\t\t\tm[tmp.id] = tmp;\r\n\t\t\tif(tmp.state.selected) {\r\n\t\t\t\tthis._data.core.selected.push(tmp.id);\r\n\t\t\t}\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws all nodes that need to be redrawn. Used internally.\r\n\t\t * @private\r\n\t\t * @name _redraw()\r\n\t\t * @trigger redraw.jstree\r\n\t\t */\r\n\t\t_redraw : function () {\r\n\t\t\tvar nodes = this._model.force_full_redraw ? this._model.data[$.jstree.root].children.concat([]) : this._model.changed.concat([]),\r\n\t\t\t\tf = document.createElement('UL'), tmp, i, j, fe = this._data.core.focused;\r\n\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\ttmp = this.redraw_node(nodes[i], true, this._model.force_full_redraw);\r\n\t\t\t\tif(tmp && this._model.force_full_redraw) {\r\n\t\t\t\t\tf.appendChild(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(this._model.force_full_redraw) {\r\n\t\t\t\tf.className = this.get_container_ul()[0].className;\r\n\t\t\t\tf.setAttribute('role','group');\r\n\t\t\t\tthis.element.empty().append(f);\r\n\t\t\t\t//this.get_container_ul()[0].appendChild(f);\r\n\t\t\t}\r\n\t\t\tif(fe !== null) {\r\n\t\t\t\ttmp = this.get_node(fe, true);\r\n\t\t\t\tif(tmp && tmp.length && tmp.children('.jstree-anchor')[0] !== document.activeElement) {\r\n\t\t\t\t\ttmp.children('.jstree-anchor').focus();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = false;\r\n\t\t\tthis._model.changed = [];\r\n\t\t\t/**\r\n\t\t\t * triggered after nodes are redrawn\r\n\t\t\t * @event\r\n\t\t\t * @name redraw.jstree\r\n\t\t\t * @param {array} nodes the redrawn nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('redraw', { \"nodes\" : nodes });\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws all nodes that need to be redrawn or optionally - the whole tree\r\n\t\t * @name redraw([full])\r\n\t\t * @param {Boolean} full if set to `true` all nodes are redrawn.\r\n\t\t */\r\n\t\tredraw : function (full) {\r\n\t\t\tif(full) {\r\n\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t}\r\n\t\t\t//if(this._model.redraw_timeout) {\r\n\t\t\t//\tclearTimeout(this._model.redraw_timeout);\r\n\t\t\t//}\r\n\t\t\t//this._model.redraw_timeout = setTimeout($.proxy(this._redraw, this),0);\r\n\t\t\tthis._redraw();\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws a single node's children. Used internally.\r\n\t\t * @private\r\n\t\t * @name draw_children(node)\r\n\t\t * @param {mixed} node the node whose children will be redrawn\r\n\t\t */\r\n\t\tdraw_children : function (node) {\r\n\t\t\tvar obj = this.get_node(node),\r\n\t\t\t\ti = false,\r\n\t\t\t\tj = false,\r\n\t\t\t\tk = false,\r\n\t\t\t\td = document;\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(obj.id === $.jstree.root) { return this.redraw(true); }\r\n\t\t\tnode = this.get_node(node, true);\r\n\t\t\tif(!node || !node.length) { return false; } // TODO: quick toggle\r\n\r\n\t\t\tnode.children('.jstree-children').remove();\r\n\t\t\tnode = node[0];\r\n\t\t\tif(obj.children.length && obj.state.loaded) {\r\n\t\t\t\tk = d.createElement('UL');\r\n\t\t\t\tk.setAttribute('role', 'group');\r\n\t\t\t\tk.className = 'jstree-children';\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], true, true));\r\n\t\t\t\t}\r\n\t\t\t\tnode.appendChild(k);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * redraws a single node. Used internally.\r\n\t\t * @private\r\n\t\t * @name redraw_node(node, deep, is_callback, force_render)\r\n\t\t * @param {mixed} node the node to redraw\r\n\t\t * @param {Boolean} deep should child nodes be redrawn too\r\n\t\t * @param {Boolean} is_callback is this a recursion call\r\n\t\t * @param {Boolean} force_render should children of closed parents be drawn anyway\r\n\t\t */\r\n\t\tredraw_node : function (node, deep, is_callback, force_render) {\r\n\t\t\tvar obj = this.get_node(node),\r\n\t\t\t\tpar = false,\r\n\t\t\t\tind = false,\r\n\t\t\t\told = false,\r\n\t\t\t\ti = false,\r\n\t\t\t\tj = false,\r\n\t\t\t\tk = false,\r\n\t\t\t\tc = '',\r\n\t\t\t\td = document,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tf = false,\r\n\t\t\t\ts = false,\r\n\t\t\t\ttmp = null,\r\n\t\t\t\tt = 0,\r\n\t\t\t\tl = 0,\r\n\t\t\t\thas_children = false,\r\n\t\t\t\tlast_sibling = false;\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(obj.id === $.jstree.root) {  return this.redraw(true); }\r\n\t\t\tdeep = deep || obj.children.length === 0;\r\n\t\t\tnode = !document.querySelector ? document.getElementById(obj.id) : this.element[0].querySelector('#' + (\"0123456789\".indexOf(obj.id[0]) !== -1 ? '\\\\3' + obj.id[0] + ' ' + obj.id.substr(1).replace($.jstree.idregex,'\\\\$&') : obj.id.replace($.jstree.idregex,'\\\\$&')) ); //, this.element);\r\n\t\t\tif(!node) {\r\n\t\t\t\tdeep = true;\r\n\t\t\t\t//node = d.createElement('LI');\r\n\t\t\t\tif(!is_callback) {\r\n\t\t\t\t\tpar = obj.parent !== $.jstree.root ? $('#' + obj.parent.replace($.jstree.idregex,'\\\\$&'), this.element)[0] : null;\r\n\t\t\t\t\tif(par !== null && (!par || !m[obj.parent].state.opened)) {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tind = $.inArray(obj.id, par === null ? m[$.jstree.root].children : m[obj.parent].children);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode = $(node);\r\n\t\t\t\tif(!is_callback) {\r\n\t\t\t\t\tpar = node.parent().parent()[0];\r\n\t\t\t\t\tif(par === this.element[0]) {\r\n\t\t\t\t\t\tpar = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tind = node.index();\r\n\t\t\t\t}\r\n\t\t\t\t// m[obj.id].data = node.data(); // use only node's data, no need to touch jquery storage\r\n\t\t\t\tif(!deep && obj.children.length && !node.children('.jstree-children').length) {\r\n\t\t\t\t\tdeep = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(!deep) {\r\n\t\t\t\t\told = node.children('.jstree-children')[0];\r\n\t\t\t\t}\r\n\t\t\t\tf = node.children('.jstree-anchor')[0] === document.activeElement;\r\n\t\t\t\tnode.remove();\r\n\t\t\t\t//node = d.createElement('LI');\r\n\t\t\t\t//node = node[0];\r\n\t\t\t}\r\n\t\t\tnode = this._data.core.node.cloneNode(true);\r\n\t\t\t// node is DOM, deep is boolean\r\n\r\n\t\t\tc = 'jstree-node ';\r\n\t\t\tfor(i in obj.li_attr) {\r\n\t\t\t\tif(obj.li_attr.hasOwnProperty(i)) {\r\n\t\t\t\t\tif(i === 'id') { continue; }\r\n\t\t\t\t\tif(i !== 'class') {\r\n\t\t\t\t\t\tnode.setAttribute(i, obj.li_attr[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tc += obj.li_attr[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!obj.a_attr.id) {\r\n\t\t\t\tobj.a_attr.id = obj.id + '_anchor';\r\n\t\t\t}\r\n\t\t\tnode.setAttribute('aria-selected', !!obj.state.selected);\r\n\t\t\tnode.setAttribute('aria-level', obj.parents.length);\r\n\t\t\tnode.setAttribute('aria-labelledby', obj.a_attr.id);\r\n\t\t\tif(obj.state.disabled) {\r\n\t\t\t\tnode.setAttribute('aria-disabled', true);\r\n\t\t\t}\r\n\r\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\tif(!m[obj.children[i]].state.hidden) {\r\n\t\t\t\t\thas_children = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(obj.parent !== null && m[obj.parent] && !obj.state.hidden) {\r\n\t\t\t\ti = $.inArray(obj.id, m[obj.parent].children);\r\n\t\t\t\tlast_sibling = obj.id;\r\n\t\t\t\tif(i !== -1) {\r\n\t\t\t\t\ti++;\r\n\t\t\t\t\tfor(j = m[obj.parent].children.length; i < j; i++) {\r\n\t\t\t\t\t\tif(!m[m[obj.parent].children[i]].state.hidden) {\r\n\t\t\t\t\t\t\tlast_sibling = m[obj.parent].children[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(last_sibling !== obj.id) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(obj.state.hidden) {\r\n\t\t\t\tc += ' jstree-hidden';\r\n\t\t\t}\r\n\t\t\tif (obj.state.loading) {\r\n\t\t\t\tc += ' jstree-loading';\r\n\t\t\t}\r\n\t\t\tif(obj.state.loaded && !has_children) {\r\n\t\t\t\tc += ' jstree-leaf';\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tc += obj.state.opened && obj.state.loaded ? ' jstree-open' : ' jstree-closed';\r\n\t\t\t\tnode.setAttribute('aria-expanded', (obj.state.opened && obj.state.loaded) );\r\n\t\t\t}\r\n\t\t\tif(last_sibling === obj.id) {\r\n\t\t\t\tc += ' jstree-last';\r\n\t\t\t}\r\n\t\t\tnode.id = obj.id;\r\n\t\t\tnode.className = c;\r\n\t\t\tc = ( obj.state.selected ? ' jstree-clicked' : '') + ( obj.state.disabled ? ' jstree-disabled' : '');\r\n\t\t\tfor(j in obj.a_attr) {\r\n\t\t\t\tif(obj.a_attr.hasOwnProperty(j)) {\r\n\t\t\t\t\tif(j === 'href' && obj.a_attr[j] === '#') { continue; }\r\n\t\t\t\t\tif(j !== 'class') {\r\n\t\t\t\t\t\tnode.childNodes[1].setAttribute(j, obj.a_attr[j]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tc += ' ' + obj.a_attr[j];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(c.length) {\r\n\t\t\t\tnode.childNodes[1].className = 'jstree-anchor ' + c;\r\n\t\t\t}\r\n\t\t\tif((obj.icon && obj.icon !== true) || obj.icon === false) {\r\n\t\t\t\tif(obj.icon === false) {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-hidden';\r\n\t\t\t\t}\r\n\t\t\t\telse if(obj.icon.indexOf('/') === -1 && obj.icon.indexOf('.') === -1) {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' ' + obj.icon + ' jstree-themeicon-custom';\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundImage = 'url(\"'+obj.icon+'\")';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundPosition = 'center center';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].style.backgroundSize = 'auto';\r\n\t\t\t\t\tnode.childNodes[1].childNodes[0].className += ' jstree-themeicon-custom';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(this.settings.core.force_text) {\r\n\t\t\t\tnode.childNodes[1].appendChild(d.createTextNode(obj.text));\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tnode.childNodes[1].innerHTML += obj.text;\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif(deep && obj.children.length && (obj.state.opened || force_render) && obj.state.loaded) {\r\n\t\t\t\tk = d.createElement('UL');\r\n\t\t\t\tk.setAttribute('role', 'group');\r\n\t\t\t\tk.className = 'jstree-children';\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tk.appendChild(this.redraw_node(obj.children[i], deep, true));\r\n\t\t\t\t}\r\n\t\t\t\tnode.appendChild(k);\r\n\t\t\t}\r\n\t\t\tif(old) {\r\n\t\t\t\tnode.appendChild(old);\r\n\t\t\t}\r\n\t\t\tif(!is_callback) {\r\n\t\t\t\t// append back using par / ind\r\n\t\t\t\tif(!par) {\r\n\t\t\t\t\tpar = this.element[0];\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0, j = par.childNodes.length; i < j; i++) {\r\n\t\t\t\t\tif(par.childNodes[i] && par.childNodes[i].className && par.childNodes[i].className.indexOf('jstree-children') !== -1) {\r\n\t\t\t\t\t\ttmp = par.childNodes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!tmp) {\r\n\t\t\t\t\ttmp = d.createElement('UL');\r\n\t\t\t\t\ttmp.setAttribute('role', 'group');\r\n\t\t\t\t\ttmp.className = 'jstree-children';\r\n\t\t\t\t\tpar.appendChild(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tpar = tmp;\r\n\r\n\t\t\t\tif(ind < par.childNodes.length) {\r\n\t\t\t\t\tpar.insertBefore(node, par.childNodes[ind]);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tpar.appendChild(node);\r\n\t\t\t\t}\r\n\t\t\t\tif(f) {\r\n\t\t\t\t\tt = this.element[0].scrollTop;\r\n\t\t\t\t\tl = this.element[0].scrollLeft;\r\n\t\t\t\t\tnode.childNodes[1].focus();\r\n\t\t\t\t\tthis.element[0].scrollTop = t;\r\n\t\t\t\t\tthis.element[0].scrollLeft = l;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(obj.state.opened && !obj.state.loaded) {\r\n\t\t\t\tobj.state.opened = false;\r\n\t\t\t\tsetTimeout($.proxy(function () {\r\n\t\t\t\t\tthis.open_node(obj.id, false, 0);\r\n\t\t\t\t}, this), 0);\r\n\t\t\t}\r\n\t\t\treturn node;\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens a node, revaling its children. If the node is not loaded it will be loaded and opened once ready.\r\n\t\t * @name open_node(obj [, callback, animation])\r\n\t\t * @param {mixed} obj the node to open\r\n\t\t * @param {Function} callback a function to execute once the node is opened\r\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the node (overrides the `core.animation` setting). Use `false` for no animation.\r\n\t\t * @trigger open_node.jstree, after_open.jstree, before_open.jstree\r\n\t\t */\r\n\t\topen_node : function (obj, callback, animation) {\r\n\t\t\tvar t1, t2, d, t;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.open_node(obj[t1], callback, animation);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\r\n\t\t\tif(!this.is_closed(obj)) {\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, false);\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!this.is_loaded(obj)) {\r\n\t\t\t\tif(this.is_loading(obj)) {\r\n\t\t\t\t\treturn setTimeout($.proxy(function () {\r\n\t\t\t\t\t\tthis.open_node(obj, callback, animation);\r\n\t\t\t\t\t}, this), 500);\r\n\t\t\t\t}\r\n\t\t\t\tthis.load_node(obj, function (o, ok) {\r\n\t\t\t\t\treturn ok ? this.open_node(o, callback, animation) : (callback ? callback.call(this, o, false) : false);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\td = this.get_node(obj, true);\r\n\t\t\t\tt = this;\r\n\t\t\t\tif(d.length) {\r\n\t\t\t\t\tif(animation && d.children(\".jstree-children\").length) {\r\n\t\t\t\t\t\td.children(\".jstree-children\").stop(true, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(obj.children.length && !this._firstChild(d.children('.jstree-children')[0])) {\r\n\t\t\t\t\t\tthis.draw_children(obj);\r\n\t\t\t\t\t\t//d = this.get_node(obj, true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(!animation) {\r\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t\t\td[0].className = d[0].className.replace('jstree-closed', 'jstree-open');\r\n\t\t\t\t\t\td[0].setAttribute(\"aria-expanded\", true);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t\t\td\r\n\t\t\t\t\t\t\t.children(\".jstree-children\").css(\"display\",\"none\").end()\r\n\t\t\t\t\t\t\t.removeClass(\"jstree-closed\").addClass(\"jstree-open\").attr(\"aria-expanded\", true)\r\n\t\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true)\r\n\t\t\t\t\t\t\t\t.slideDown(animation, function () {\r\n\t\t\t\t\t\t\t\t\tthis.style.display = \"\";\r\n\t\t\t\t\t\t\t\t\tif (t.element) {\r\n\t\t\t\t\t\t\t\t\t\tt.trigger(\"after_open\", { \"node\" : obj });\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tobj.state.opened = true;\r\n\t\t\t\tif(callback) {\r\n\t\t\t\t\tcallback.call(this, obj, true);\r\n\t\t\t\t}\r\n\t\t\t\tif(!d.length) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a node is about to be opened (if the node is supposed to be in the DOM, it will be, but it won't be visible yet)\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name before_open.jstree\r\n\t\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('before_open', { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is opened (if there is an animation it will not be completed yet)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name open_node.jstree\r\n\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('open_node', { \"node\" : obj });\r\n\t\t\t\tif(!animation || !d.length) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a node is opened and the animation is complete\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name after_open.jstree\r\n\t\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger(\"after_open\", { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens every parent of a node (node should be loaded)\r\n\t\t * @name _open_to(obj)\r\n\t\t * @param {mixed} obj the node to reveal\r\n\t\t * @private\r\n\t\t */\r\n\t\t_open_to : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar i, j, p = obj.parents;\r\n\t\t\tfor(i = 0, j = p.length; i < j; i+=1) {\r\n\t\t\t\tif(i !== $.jstree.root) {\r\n\t\t\t\t\tthis.open_node(p[i], false, 0);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn $('#' + obj.id.replace($.jstree.idregex,'\\\\$&'), this.element);\r\n\t\t},\r\n\t\t/**\r\n\t\t * closes a node, hiding its children\r\n\t\t * @name close_node(obj [, animation])\r\n\t\t * @param {mixed} obj the node to close\r\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the node (overrides the `core.animation` setting). Use `false` for no animation.\r\n\t\t * @trigger close_node.jstree, after_close.jstree\r\n\t\t */\r\n\t\tclose_node : function (obj, animation) {\r\n\t\t\tvar t1, t2, t, d;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.close_node(obj[t1], animation);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.is_closed(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tanimation = animation === undefined ? this.settings.core.animation : animation;\r\n\t\t\tt = this;\r\n\t\t\td = this.get_node(obj, true);\r\n\r\n\t\t\tobj.state.opened = false;\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is closed (if there is an animation it will not be complete yet)\r\n\t\t\t * @event\r\n\t\t\t * @name close_node.jstree\r\n\t\t\t * @param {Object} node the closed node\r\n\t\t\t */\r\n\t\t\tthis.trigger('close_node',{ \"node\" : obj });\r\n\t\t\tif(!d.length) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is closed and the animation is complete\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name after_close.jstree\r\n\t\t\t\t * @param {Object} node the closed node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(!animation) {\r\n\t\t\t\t\td[0].className = d[0].className.replace('jstree-open', 'jstree-closed');\r\n\t\t\t\t\td.attr(\"aria-expanded\", false).children('.jstree-children').remove();\r\n\t\t\t\t\tthis.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\td\r\n\t\t\t\t\t\t.children(\".jstree-children\").attr(\"style\",\"display:block !important\").end()\r\n\t\t\t\t\t\t.removeClass(\"jstree-open\").addClass(\"jstree-closed\").attr(\"aria-expanded\", false)\r\n\t\t\t\t\t\t.children(\".jstree-children\").stop(true, true).slideUp(animation, function () {\r\n\t\t\t\t\t\t\tthis.style.display = \"\";\r\n\t\t\t\t\t\t\td.children('.jstree-children').remove();\r\n\t\t\t\t\t\t\tif (t.element) {\r\n\t\t\t\t\t\t\t\tt.trigger(\"after_close\", { \"node\" : obj });\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles a node - closing it if it is open, opening it if it is closed\r\n\t\t * @name toggle_node(obj)\r\n\t\t * @param {mixed} obj the node to toggle\r\n\t\t */\r\n\t\ttoggle_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.toggle_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tif(this.is_closed(obj)) {\r\n\t\t\t\treturn this.open_node(obj);\r\n\t\t\t}\r\n\t\t\tif(this.is_open(obj)) {\r\n\t\t\t\treturn this.close_node(obj);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * opens all nodes within a node (or the tree), revaling their children. If the node is not loaded it will be loaded and opened once ready.\r\n\t\t * @name open_all([obj, animation, original_obj])\r\n\t\t * @param {mixed} obj the node to open recursively, omit to open all nodes in the tree\r\n\t\t * @param {Number} animation the animation duration in milliseconds when opening the nodes, the default is no animation\r\n\t\t * @param {jQuery} reference to the node that started the process (internal use)\r\n\t\t * @trigger open_all.jstree\r\n\t\t */\r\n\t\topen_all : function (obj, animation, original_obj) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true), i, j, _this;\r\n\t\t\tif(!dom.length) {\r\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\tif(this.is_closed(this._model.data[obj.children_d[i]])) {\r\n\t\t\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this.trigger('open_all', { \"node\" : obj });\r\n\t\t\t}\r\n\t\t\toriginal_obj = original_obj || dom;\r\n\t\t\t_this = this;\r\n\t\t\tdom = this.is_closed(obj) ? dom.find('.jstree-closed').addBack() : dom.find('.jstree-closed');\r\n\t\t\tdom.each(function () {\r\n\t\t\t\t_this.open_node(\r\n\t\t\t\t\tthis,\r\n\t\t\t\t\tfunction(node, status) { if(status && this.is_parent(node)) { this.open_all(node, animation, original_obj); } },\r\n\t\t\t\t\tanimation || 0\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\tif(original_obj.find('.jstree-closed').length === 0) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an `open_all` call completes\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name open_all.jstree\r\n\t\t\t\t * @param {Object} node the opened node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('open_all', { \"node\" : this.get_node(original_obj) });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * closes all nodes within a node (or the tree), revaling their children\r\n\t\t * @name close_all([obj, animation])\r\n\t\t * @param {mixed} obj the node to close recursively, omit to close all nodes in the tree\r\n\t\t * @param {Number} animation the animation duration in milliseconds when closing the nodes, the default is no animation\r\n\t\t * @trigger close_all.jstree\r\n\t\t */\r\n\t\tclose_all : function (obj, animation) {\r\n\t\t\tif(!obj) { obj = $.jstree.root; }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar dom = obj.id === $.jstree.root ? this.get_container_ul() : this.get_node(obj, true),\r\n\t\t\t\t_this = this, i, j;\r\n\t\t\tif(dom.length) {\r\n\t\t\t\tdom = this.is_open(obj) ? dom.find('.jstree-open').addBack() : dom.find('.jstree-open');\r\n\t\t\t\t$(dom.get().reverse()).each(function () { _this.close_node(this, animation || 0); });\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[obj.children_d[i]].state.opened = false;\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when an `close_all` call completes\r\n\t\t\t * @event\r\n\t\t\t * @name close_all.jstree\r\n\t\t\t * @param {Object} node the closed node\r\n\t\t\t */\r\n\t\t\tthis.trigger('close_all', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is disabled (not selectable)\r\n\t\t * @name is_disabled(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_disabled : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj && obj.state && obj.state.disabled;\r\n\t\t},\r\n\t\t/**\r\n\t\t * enables a node - so that it can be selected\r\n\t\t * @name enable_node(obj)\r\n\t\t * @param {mixed} obj the node to enable\r\n\t\t * @trigger enable_node.jstree\r\n\t\t */\r\n\t\tenable_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.enable_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.state.disabled = false;\r\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').removeClass('jstree-disabled').attr('aria-disabled', false);\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is enabled\r\n\t\t\t * @event\r\n\t\t\t * @name enable_node.jstree\r\n\t\t\t * @param {Object} node the enabled node\r\n\t\t\t */\r\n\t\t\tthis.trigger('enable_node', { 'node' : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * disables a node - so that it can not be selected\r\n\t\t * @name disable_node(obj)\r\n\t\t * @param {mixed} obj the node to disable\r\n\t\t * @trigger disable_node.jstree\r\n\t\t */\r\n\t\tdisable_node : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.disable_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.state.disabled = true;\r\n\t\t\tthis.get_node(obj,true).children('.jstree-anchor').addClass('jstree-disabled').attr('aria-disabled', true);\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is disabled\r\n\t\t\t * @event\r\n\t\t\t * @name disable_node.jstree\r\n\t\t\t * @param {Object} node the disabled node\r\n\t\t\t */\r\n\t\t\tthis.trigger('disable_node', { 'node' : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * determines if a node is hidden\r\n\t\t * @name is_hidden(obj)\r\n\t\t * @param {mixed} obj the node\r\n\t\t */\r\n\t\tis_hidden : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn obj.state.hidden === true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides a node - it is still in the structure but will not be visible\r\n\t\t * @name hide_node(obj)\r\n\t\t * @param {mixed} obj the node to hide\r\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\r\n\t\t * @trigger hide_node.jstree\r\n\t\t */\r\n\t\thide_node : function (obj, skip_redraw) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.hide_node(obj[t1], true);\r\n\t\t\t\t}\r\n\t\t\t\tif (!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!obj.state.hidden) {\r\n\t\t\t\tobj.state.hidden = true;\r\n\t\t\t\tthis._node_changed(obj.parent);\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is hidden\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name hide_node.jstree\r\n\t\t\t\t * @param {Object} node the hidden node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('hide_node', { 'node' : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * shows a node\r\n\t\t * @name show_node(obj)\r\n\t\t * @param {mixed} obj the node to show\r\n\t\t * @param {Boolean} skip_redraw internal parameter controlling if redraw is called\r\n\t\t * @trigger show_node.jstree\r\n\t\t */\r\n\t\tshow_node : function (obj, skip_redraw) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.show_node(obj[t1], true);\r\n\t\t\t\t}\r\n\t\t\t\tif (!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(obj.state.hidden) {\r\n\t\t\t\tobj.state.hidden = false;\r\n\t\t\t\tthis._node_changed(obj.parent);\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is shown\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name show_node.jstree\r\n\t\t\t\t * @param {Object} node the shown node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('show_node', { 'node' : obj });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides all nodes\r\n\t\t * @name hide_all()\r\n\t\t * @trigger hide_all.jstree\r\n\t\t */\r\n\t\thide_all : function (skip_redraw) {\r\n\t\t\tvar i, m = this._model.data, ids = [];\r\n\t\t\tfor(i in m) {\r\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && !m[i].state.hidden) {\r\n\t\t\t\t\tm[i].state.hidden = true;\r\n\t\t\t\t\tids.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_all.jstree\r\n\t\t\t * @param {Array} nodes the IDs of all hidden nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_all', { 'nodes' : ids });\r\n\t\t\treturn ids;\r\n\t\t},\r\n\t\t/**\r\n\t\t * shows all nodes\r\n\t\t * @name show_all()\r\n\t\t * @trigger show_all.jstree\r\n\t\t */\r\n\t\tshow_all : function (skip_redraw) {\r\n\t\t\tvar i, m = this._model.data, ids = [];\r\n\t\t\tfor(i in m) {\r\n\t\t\t\tif(m.hasOwnProperty(i) && i !== $.jstree.root && m[i].state.hidden) {\r\n\t\t\t\t\tm[i].state.hidden = false;\r\n\t\t\t\t\tids.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_all.jstree\r\n\t\t\t * @param {Array} nodes the IDs of all shown nodes\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_all', { 'nodes' : ids });\r\n\t\t\treturn ids;\r\n\t\t},\r\n\t\t/**\r\n\t\t * called when a node is selected by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name activate_node(obj, e)\r\n\t\t * @param {mixed} obj the node\r\n\t\t * @param {Object} e the related event\r\n\t\t * @trigger activate_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tactivate_node : function (obj, e) {\r\n\t\t\tif(this.is_disabled(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!e || typeof e !== 'object') {\r\n\t\t\t\te = {};\r\n\t\t\t}\r\n\r\n\t\t\t// ensure last_clicked is still in the DOM, make it fresh (maybe it was moved?) and make sure it is still selected, if not - make last_clicked the last selected node\r\n\t\t\tthis._data.core.last_clicked = this._data.core.last_clicked && this._data.core.last_clicked.id !== undefined ? this.get_node(this._data.core.last_clicked.id) : null;\r\n\t\t\tif(this._data.core.last_clicked && !this._data.core.last_clicked.state.selected) { this._data.core.last_clicked = null; }\r\n\t\t\tif(!this._data.core.last_clicked && this._data.core.selected.length) { this._data.core.last_clicked = this.get_node(this._data.core.selected[this._data.core.selected.length - 1]); }\r\n\r\n\t\t\tif(!this.settings.core.multiple || (!e.metaKey && !e.ctrlKey && !e.shiftKey) || (e.shiftKey && (!this._data.core.last_clicked || !this.get_parent(obj) || this.get_parent(obj) !== this._data.core.last_clicked.parent ) )) {\r\n\t\t\t\tif(!this.settings.core.multiple && (e.metaKey || e.ctrlKey || e.shiftKey) && this.is_selected(obj)) {\r\n\t\t\t\t\tthis.deselect_node(obj, false, e);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.deselect_all(true);\r\n\t\t\t\t\tthis.select_node(obj, false, false, e);\r\n\t\t\t\t\tthis._data.core.last_clicked = this.get_node(obj);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif(e.shiftKey) {\r\n\t\t\t\t\tvar o = this.get_node(obj).id,\r\n\t\t\t\t\t\tl = this._data.core.last_clicked.id,\r\n\t\t\t\t\t\tp = this.get_node(this._data.core.last_clicked.parent).children,\r\n\t\t\t\t\t\tc = false,\r\n\t\t\t\t\t\ti, j;\r\n\t\t\t\t\tfor(i = 0, j = p.length; i < j; i += 1) {\r\n\t\t\t\t\t\t// separate IFs work whem o and l are the same\r\n\t\t\t\t\t\tif(p[i] === o) {\r\n\t\t\t\t\t\t\tc = !c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(p[i] === l) {\r\n\t\t\t\t\t\t\tc = !c;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(!this.is_disabled(p[i]) && (c || p[i] === o || p[i] === l)) {\r\n\t\t\t\t\t\t\tif (!this.is_hidden(p[i])) {\r\n\t\t\t\t\t\t\t\tthis.select_node(p[i], true, false, e);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis.deselect_node(p[i], true, e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : this.get_node(obj), 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(!this.is_selected(obj)) {\r\n\t\t\t\t\t\tthis.select_node(obj, false, false, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tthis.deselect_node(obj, false, e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is clicked or intercated with by the user\r\n\t\t\t * @event\r\n\t\t\t * @name activate_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {Object} event the ooriginal event (if any) which triggered the call (may be an empty object)\r\n\t\t\t */\r\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj), 'event' : e });\r\n\t\t},\r\n\t\t/**\r\n\t\t * applies the hover state on a node, called when a node is hovered by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name hover_node(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @trigger hover_node.jstree\r\n\t\t */\r\n\t\thover_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(!obj || !obj.length || obj.children('.jstree-hovered').length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tvar o = this.element.find('.jstree-hovered'), t = this.element;\r\n\t\t\tif(o && o.length) { this.dehover_node(o); }\r\n\r\n\t\t\tobj.children('.jstree-anchor').addClass('jstree-hovered');\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is hovered\r\n\t\t\t * @event\r\n\t\t\t * @name hover_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('hover_node', { 'node' : this.get_node(obj) });\r\n\t\t\tsetTimeout(function () { t.attr('aria-activedescendant', obj[0].id); }, 0);\r\n\t\t},\r\n\t\t/**\r\n\t\t * removes the hover state from a nodecalled when a node is no longer hovered by the user. Used internally.\r\n\t\t * @private\r\n\t\t * @name dehover_node(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @trigger dehover_node.jstree\r\n\t\t */\r\n\t\tdehover_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj, true);\r\n\t\t\tif(!obj || !obj.length || !obj.children('.jstree-hovered').length) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tobj.children('.jstree-anchor').removeClass('jstree-hovered');\r\n\t\t\t/**\r\n\t\t\t * triggered when an node is no longer hovered\r\n\t\t\t * @event\r\n\t\t\t * @name dehover_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('dehover_node', { 'node' : this.get_node(obj) });\r\n\t\t},\r\n\t\t/**\r\n\t\t * select a node\r\n\t\t * @name select_node(obj [, supress_event, prevent_open])\r\n\t\t * @param {mixed} obj an array can be used to select multiple nodes\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @param {Boolean} prevent_open if set to `true` parents of the selected node won't be opened\r\n\t\t * @trigger select_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tselect_node : function (obj, supress_event, prevent_open, e) {\r\n\t\t\tvar dom, t1, t2, th;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.select_node(obj[t1], supress_event, prevent_open, e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.selected) {\r\n\t\t\t\tobj.state.selected = true;\r\n\t\t\t\tthis._data.core.selected.push(obj.id);\r\n\t\t\t\tif(!prevent_open) {\r\n\t\t\t\t\tdom = this._open_to(obj);\r\n\t\t\t\t}\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.attr('aria-selected', true).children('.jstree-anchor').addClass('jstree-clicked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is selected\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name select_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this select_node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('select_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\tif(!supress_event) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when selection changes\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name changed.jstree\r\n\t\t\t\t\t * @param {Object} node\r\n\t\t\t\t\t * @param {Object} action the action that caused the selection to change\r\n\t\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t\t * @param {Object} event the event (if any) that triggered this changed event\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'select_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * deselect a node\r\n\t\t * @name deselect_node(obj [, supress_event])\r\n\t\t * @param {mixed} obj an array can be used to deselect multiple nodes\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger deselect_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tdeselect_node : function (obj, supress_event, e) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.deselect_node(obj[t1], supress_event, e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.selected) {\r\n\t\t\t\tobj.state.selected = false;\r\n\t\t\t\tthis._data.core.selected = $.vakata.array_remove_item(this._data.core.selected, obj.id);\r\n\t\t\t\tif(dom.length) {\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass('jstree-clicked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is deselected\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name deselect_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this deselect_node\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('deselect_node', { 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\tif(!supress_event) {\r\n\t\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_node', 'node' : obj, 'selected' : this._data.core.selected, 'event' : e });\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * select all nodes in the tree\r\n\t\t * @name select_all([supress_event])\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger select_all.jstree, changed.jstree\r\n\t\t */\r\n\t\tselect_all : function (supress_event) {\r\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\r\n\t\t\tthis._data.core.selected = this._model.data[$.jstree.root].children_d.concat();\r\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.redraw(true);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are selected\r\n\t\t\t * @event\r\n\t\t\t * @name select_all.jstree\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t */\r\n\t\t\tthis.trigger('select_all', { 'selected' : this._data.core.selected });\r\n\t\t\tif(!supress_event) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'select_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * deselect all selected nodes\r\n\t\t * @name deselect_all([supress_event])\r\n\t\t * @param {Boolean} supress_event if set to `true` the `changed.jstree` event won't be triggered\r\n\t\t * @trigger deselect_all.jstree, changed.jstree\r\n\t\t */\r\n\t\tdeselect_all : function (supress_event) {\r\n\t\t\tvar tmp = this._data.core.selected.concat([]), i, j;\r\n\t\t\tfor(i = 0, j = this._data.core.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.core.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.core.selected[i]].state.selected = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._data.core.selected = [];\r\n\t\t\tthis.element.find('.jstree-clicked').removeClass('jstree-clicked').parent().attr('aria-selected', false);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are deselected\r\n\t\t\t * @event\r\n\t\t\t * @name deselect_all.jstree\r\n\t\t\t * @param {Object} node the previous selection\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t */\r\n\t\t\tthis.trigger('deselect_all', { 'selected' : this._data.core.selected, 'node' : tmp });\r\n\t\t\tif(!supress_event) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'deselect_all', 'selected' : this._data.core.selected, 'old_selection' : tmp });\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * checks if a node is selected\r\n\t\t * @name is_selected(obj)\r\n\t\t * @param  {mixed}  obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tis_selected : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn obj.state.selected;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all selected nodes\r\n\t\t * @name get_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_selected : function (full) {\r\n\t\t\treturn full ? $.map(this._data.core.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.core.selected.slice();\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all top level selected nodes (ignoring children of selected nodes)\r\n\t\t * @name get_top_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_top_selected : function (full) {\r\n\t\t\tvar tmp = this.get_selected(true),\r\n\t\t\t\tobj = {}, i, j, k, l;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tobj[tmp[i].id] = tmp[i];\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\r\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i in obj) {\r\n\t\t\t\tif(obj.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get an array of all bottom level selected nodes (ignoring selected parents)\r\n\t\t * @name get_bottom_selected([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t */\r\n\t\tget_bottom_selected : function (full) {\r\n\t\t\tvar tmp = this.get_selected(true),\r\n\t\t\t\tobj = [], i, j;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tif(!tmp[i].children.length) {\r\n\t\t\t\t\tobj.push(tmp[i].id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the current state of the tree so that it can be restored later with `set_state(state)`. Used internally.\r\n\t\t * @name get_state()\r\n\t\t * @private\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tget_state : function () {\r\n\t\t\tvar state\t= {\r\n\t\t\t\t'core' : {\r\n\t\t\t\t\t'open' : [],\r\n\t\t\t\t\t'loaded' : [],\r\n\t\t\t\t\t'scroll' : {\r\n\t\t\t\t\t\t'left' : this.element.scrollLeft(),\r\n\t\t\t\t\t\t'top' : this.element.scrollTop()\r\n\t\t\t\t\t},\r\n\t\t\t\t\t/*!\r\n\t\t\t\t\t'themes' : {\r\n\t\t\t\t\t\t'name' : this.get_theme(),\r\n\t\t\t\t\t\t'icons' : this._data.core.themes.icons,\r\n\t\t\t\t\t\t'dots' : this._data.core.themes.dots\r\n\t\t\t\t\t},\r\n\t\t\t\t\t*/\r\n\t\t\t\t\t'selected' : []\r\n\t\t\t\t}\r\n\t\t\t}, i;\r\n\t\t\tfor(i in this._model.data) {\r\n\t\t\t\tif(this._model.data.hasOwnProperty(i)) {\r\n\t\t\t\t\tif(i !== $.jstree.root) {\r\n\t\t\t\t\t\tif(this._model.data[i].state.loaded && this.settings.core.loaded_state) {\r\n\t\t\t\t\t\t\tstate.core.loaded.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this._model.data[i].state.opened) {\r\n\t\t\t\t\t\t\tstate.core.open.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this._model.data[i].state.selected) {\r\n\t\t\t\t\t\t\tstate.core.selected.push(i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn state;\r\n\t\t},\r\n\t\t/**\r\n\t\t * sets the state of the tree. Used internally.\r\n\t\t * @name set_state(state [, callback])\r\n\t\t * @private\r\n\t\t * @param {Object} state the state to restore. Keep in mind this object is passed by reference and jstree will modify it.\r\n\t\t * @param {Function} callback an optional function to execute once the state is restored.\r\n\t\t * @trigger set_state.jstree\r\n\t\t */\r\n\t\tset_state : function (state, callback) {\r\n\t\t\tif(state) {\r\n\t\t\t\tif(state.core && state.core.selected && state.core.initial_selection === undefined) {\r\n\t\t\t\t\tstate.core.initial_selection = this._data.core.selected.concat([]).sort().join(',');\r\n\t\t\t\t}\r\n\t\t\t\tif(state.core) {\r\n\t\t\t\t\tvar res, n, t, _this, i;\r\n\t\t\t\t\tif(state.core.loaded) {\r\n\t\t\t\t\t\tif(!this.settings.core.loaded_state || !$.isArray(state.core.loaded) || !state.core.loaded.length) {\r\n\t\t\t\t\t\t\tdelete state.core.loaded;\r\n\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._load_nodes(state.core.loaded, function (nodes) {\r\n\t\t\t\t\t\t\t\tdelete state.core.loaded;\r\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.open) {\r\n\t\t\t\t\t\tif(!$.isArray(state.core.open) || !state.core.open.length) {\r\n\t\t\t\t\t\t\tdelete state.core.open;\r\n\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\tthis._load_nodes(state.core.open, function (nodes) {\r\n\t\t\t\t\t\t\t\tthis.open_node(nodes, false, 0);\r\n\t\t\t\t\t\t\t\tdelete state.core.open;\r\n\t\t\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.scroll) {\r\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.left !== undefined) {\r\n\t\t\t\t\t\t\tthis.element.scrollLeft(state.core.scroll.left);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(state.core.scroll && state.core.scroll.top !== undefined) {\r\n\t\t\t\t\t\t\tthis.element.scrollTop(state.core.scroll.top);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete state.core.scroll;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(state.core.selected) {\r\n\t\t\t\t\t\t_this = this;\r\n\t\t\t\t\t\tif (state.core.initial_selection === undefined ||\r\n\t\t\t\t\t\t\tstate.core.initial_selection === this._data.core.selected.concat([]).sort().join(',')\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tthis.deselect_all();\r\n\t\t\t\t\t\t\t$.each(state.core.selected, function (i, v) {\r\n\t\t\t\t\t\t\t\t_this.select_node(v, false, true);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tdelete state.core.initial_selection;\r\n\t\t\t\t\t\tdelete state.core.selected;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor(i in state) {\r\n\t\t\t\t\t\tif(state.hasOwnProperty(i) && i !== \"core\" && $.inArray(i, this.settings.plugins) === -1) {\r\n\t\t\t\t\t\t\tdelete state[i];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif($.isEmptyObject(state.core)) {\r\n\t\t\t\t\t\tdelete state.core;\r\n\t\t\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif($.isEmptyObject(state)) {\r\n\t\t\t\t\tstate = null;\r\n\t\t\t\t\tif(callback) { callback.call(this); }\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered when a `set_state` call completes\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @name set_state.jstree\r\n\t\t\t\t\t */\r\n\t\t\t\t\tthis.trigger('set_state');\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * refreshes the tree - all nodes are reloaded with calls to `load_node`.\r\n\t\t * @name refresh()\r\n\t\t * @param {Boolean} skip_loading an option to skip showing the loading indicator\r\n\t\t * @param {Mixed} forget_state if set to `true` state will not be reapplied, if set to a function (receiving the current state as argument) the result of that function will be used as state\r\n\t\t * @trigger refresh.jstree\r\n\t\t */\r\n\t\trefresh : function (skip_loading, forget_state) {\r\n\t\t\tthis._data.core.state = forget_state === true ? {} : this.get_state();\r\n\t\t\tif(forget_state && $.isFunction(forget_state)) { this._data.core.state = forget_state.call(this, this._data.core.state); }\r\n\t\t\tthis._cnt = 0;\r\n\t\t\tthis._model.data = {};\r\n\t\t\tthis._model.data[$.jstree.root] = {\r\n\t\t\t\tid : $.jstree.root,\r\n\t\t\t\tparent : null,\r\n\t\t\t\tparents : [],\r\n\t\t\t\tchildren : [],\r\n\t\t\t\tchildren_d : [],\r\n\t\t\t\tstate : { loaded : false }\r\n\t\t\t};\r\n\t\t\tthis._data.core.selected = [];\r\n\t\t\tthis._data.core.last_clicked = null;\r\n\t\t\tthis._data.core.focused = null;\r\n\r\n\t\t\tvar c = this.get_container_ul()[0].className;\r\n\t\t\tif(!skip_loading) {\r\n\t\t\t\tthis.element.html(\"<\"+\"ul class='\"+c+\"' role='group'><\"+\"li class='jstree-initial-node jstree-loading jstree-leaf jstree-last' role='treeitem' id='j\"+this._id+\"_loading'><i class='jstree-icon jstree-ocl'></i><\"+\"a class='jstree-anchor' href='#'><i class='jstree-icon jstree-themeicon-hidden'></i>\" + this.get_string(\"Loading ...\") + \"</a></li></ul>\");\r\n\t\t\t\tthis.element.attr('aria-activedescendant','j'+this._id+'_loading');\r\n\t\t\t}\r\n\t\t\tthis.load_node($.jstree.root, function (o, s) {\r\n\t\t\t\tif(s) {\r\n\t\t\t\t\tthis.get_container_ul()[0].className = c;\r\n\t\t\t\t\tif(this._firstChild(this.get_container_ul()[0])) {\r\n\t\t\t\t\t\tthis.element.attr('aria-activedescendant',this._firstChild(this.get_container_ul()[0]).id);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.set_state($.extend(true, {}, this._data.core.state), function () {\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * triggered when a `refresh` call completes\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * @name refresh.jstree\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tthis.trigger('refresh');\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.core.state = null;\r\n\t\t\t});\r\n\t\t},\r\n\t\t/**\r\n\t\t * refreshes a node in the tree (reload its children) all opened nodes inside that node are reloaded with calls to `load_node`.\r\n\t\t * @name refresh_node(obj)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @trigger refresh_node.jstree\r\n\t\t */\r\n\t\trefresh_node : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tvar opened = [], to_load = [], s = this._data.core.selected.concat([]);\r\n\t\t\tto_load.push(obj.id);\r\n\t\t\tif(obj.state.opened === true) { opened.push(obj.id); }\r\n\t\t\tthis.get_node(obj, true).find('.jstree-open').each(function() { to_load.push(this.id); opened.push(this.id); });\r\n\t\t\tthis._load_nodes(to_load, $.proxy(function (nodes) {\r\n\t\t\t\tthis.open_node(opened, false, 0);\r\n\t\t\t\tthis.select_node(s);\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when a node is refreshed\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name refresh_node.jstree\r\n\t\t\t\t * @param {Object} node - the refreshed node\r\n\t\t\t\t * @param {Array} nodes - an array of the IDs of the nodes that were reloaded\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('refresh_node', { 'node' : obj, 'nodes' : nodes });\r\n\t\t\t}, this), false, true);\r\n\t\t},\r\n\t\t/**\r\n\t\t * set (change) the ID of a node\r\n\t\t * @name set_id(obj, id)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {String} id the new ID\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger set_id.jstree\r\n\t\t */\r\n\t\tset_id : function (obj, id) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tvar i, j, m = this._model.data, old = obj.id;\r\n\t\t\tid = id.toString();\r\n\t\t\t// update parents (replace current ID with new one in children and children_d)\r\n\t\t\tm[obj.parent].children[$.inArray(obj.id, m[obj.parent].children)] = id;\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tm[obj.parents[i]].children_d[$.inArray(obj.id, m[obj.parents[i]].children_d)] = id;\r\n\t\t\t}\r\n\t\t\t// update children (replace current ID with new one in parent and parents)\r\n\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\tm[obj.children[i]].parent = id;\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tm[obj.children_d[i]].parents[$.inArray(obj.id, m[obj.children_d[i]].parents)] = id;\r\n\t\t\t}\r\n\t\t\ti = $.inArray(obj.id, this._data.core.selected);\r\n\t\t\tif(i !== -1) { this._data.core.selected[i] = id; }\r\n\t\t\t// update model and obj itself (obj.id, this._model.data[KEY])\r\n\t\t\ti = this.get_node(obj.id, true);\r\n\t\t\tif(i) {\r\n\t\t\t\ti.attr('id', id); //.children('.jstree-anchor').attr('id', id + '_anchor').end().attr('aria-labelledby', id + '_anchor');\r\n\t\t\t\tif(this.element.attr('aria-activedescendant') === obj.id) {\r\n\t\t\t\t\tthis.element.attr('aria-activedescendant', id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete m[obj.id];\r\n\t\t\tobj.id = id;\r\n\t\t\tobj.li_attr.id = id;\r\n\t\t\tm[id] = obj;\r\n\t\t\t/**\r\n\t\t\t * triggered when a node id value is changed\r\n\t\t\t * @event\r\n\t\t\t * @name set_id.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} old the old id\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_id',{ \"node\" : obj, \"new\" : obj.id, \"old\" : old });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the text value of a node\r\n\t\t * @name get_text(obj)\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_text : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.text;\r\n\t\t},\r\n\t\t/**\r\n\t\t * set the text value of a node. Used internally, please use `rename_node(obj, val)`.\r\n\t\t * @private\r\n\t\t * @name set_text(obj, val)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to set the text on multiple nodes\r\n\t\t * @param  {String} val the new text value\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger set_text.jstree\r\n\t\t */\r\n\t\tset_text : function (obj, val) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_text(obj[t1], val);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tobj.text = val;\r\n\t\t\tif(this.get_node(obj, true).length) {\r\n\t\t\t\tthis.redraw_node(obj.id);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when a node text value is changed\r\n\t\t\t * @event\r\n\t\t\t * @name set_text.jstree\r\n\t\t\t * @param {Object} obj\r\n\t\t\t * @param {String} text the new value\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_text',{ \"obj\" : obj, \"text\" : val });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets a JSON representation of a node (or the whole tree)\r\n\t\t * @name get_json([obj, options])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {Object} options\r\n\t\t * @param  {Boolean} options.no_state do not return state information\r\n\t\t * @param  {Boolean} options.no_id do not return ID\r\n\t\t * @param  {Boolean} options.no_children do not include children\r\n\t\t * @param  {Boolean} options.no_data do not include node data\r\n\t\t * @param  {Boolean} options.no_li_attr do not include LI attributes\r\n\t\t * @param  {Boolean} options.no_a_attr do not include A attributes\r\n\t\t * @param  {Boolean} options.flat return flat JSON instead of nested\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tget_json : function (obj, options, flat) {\r\n\t\t\tobj = this.get_node(obj || $.jstree.root);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(options && options.flat && !flat) { flat = []; }\r\n\t\t\tvar tmp = {\r\n\t\t\t\t'id' : obj.id,\r\n\t\t\t\t'text' : obj.text,\r\n\t\t\t\t'icon' : this.get_icon(obj),\r\n\t\t\t\t'li_attr' : $.extend(true, {}, obj.li_attr),\r\n\t\t\t\t'a_attr' : $.extend(true, {}, obj.a_attr),\r\n\t\t\t\t'state' : {},\r\n\t\t\t\t'data' : options && options.no_data ? false : $.extend(true, $.isArray(obj.data)?[]:{}, obj.data)\r\n\t\t\t\t//( this.get_node(obj, true).length ? this.get_node(obj, true).data() : obj.data ),\r\n\t\t\t}, i, j;\r\n\t\t\tif(options && options.flat) {\r\n\t\t\t\ttmp.parent = obj.parent;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmp.children = [];\r\n\t\t\t}\r\n\t\t\tif(!options || !options.no_state) {\r\n\t\t\t\tfor(i in obj.state) {\r\n\t\t\t\t\tif(obj.state.hasOwnProperty(i)) {\r\n\t\t\t\t\t\ttmp.state[i] = obj.state[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tdelete tmp.state;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_li_attr) {\r\n\t\t\t\tdelete tmp.li_attr;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_a_attr) {\r\n\t\t\t\tdelete tmp.a_attr;\r\n\t\t\t}\r\n\t\t\tif(options && options.no_id) {\r\n\t\t\t\tdelete tmp.id;\r\n\t\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\r\n\t\t\t\t\tdelete tmp.li_attr.id;\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp.a_attr && tmp.a_attr.id) {\r\n\t\t\t\t\tdelete tmp.a_attr.id;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(options && options.flat && obj.id !== $.jstree.root) {\r\n\t\t\t\tflat.push(tmp);\r\n\t\t\t}\r\n\t\t\tif(!options || !options.no_children) {\r\n\t\t\t\tfor(i = 0, j = obj.children.length; i < j; i++) {\r\n\t\t\t\t\tif(options && options.flat) {\r\n\t\t\t\t\t\tthis.get_json(obj.children[i], options, flat);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttmp.children.push(this.get_json(obj.children[i], options));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn options && options.flat ? flat : (obj.id === $.jstree.root ? tmp.children : tmp);\r\n\t\t},\r\n\t\t/**\r\n\t\t * create a new node (do not confuse with load_node)\r\n\t\t * @name create_node([par, node, pos, callback, is_loaded])\r\n\t\t * @param  {mixed}   par       the parent node (to create a root node use either \"#\" (string) or `null`)\r\n\t\t * @param  {mixed}   node      the data for the new node (a valid JSON object, or a simple string with the name)\r\n\t\t * @param  {mixed}   pos       the index at which to insert the node, \"first\" and \"last\" are also supported, default is \"last\"\r\n\t\t * @param  {Function} callback a function to be called once the node is created\r\n\t\t * @param  {Boolean} is_loaded internal argument indicating if the parent node was succesfully loaded\r\n\t\t * @return {String}            the ID of the newly create node\r\n\t\t * @trigger model.jstree, create_node.jstree\r\n\t\t */\r\n\t\tcreate_node : function (par, node, pos, callback, is_loaded) {\r\n\t\t\tif(par === null) { par = $.jstree.root; }\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tpos = pos === undefined ? \"last\" : pos;\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.create_node(par, node, pos, callback, true); });\r\n\t\t\t}\r\n\t\t\tif(!node) { node = { \"text\" : this.get_string('New node') }; }\r\n\t\t\tif(typeof node === \"string\") {\r\n\t\t\t\tnode = { \"text\" : node };\r\n\t\t\t} else {\r\n\t\t\t\tnode = $.extend(true, {}, node);\r\n\t\t\t}\r\n\t\t\tif(node.text === undefined) { node.text = this.get_string('New node'); }\r\n\t\t\tvar tmp, dpc, i, j;\r\n\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\ttmp = this.get_node(par.parent);\r\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children);\r\n\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\ttmp = this.get_node(par.parent);\r\n\t\t\t\t\tpos = $.inArray(par.id, tmp.children) + 1;\r\n\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > par.children.length) { pos = par.children.length; }\r\n\t\t\tif(!node.id) { node.id = true; }\r\n\t\t\tif(!this.check(\"create_node\", node, par, pos)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(node.id === true) { delete node.id; }\r\n\t\t\tnode = this._parse_model_from_json(node, par.id, par.parents.concat());\r\n\t\t\tif(!node) { return false; }\r\n\t\t\ttmp = this.get_node(node);\r\n\t\t\tdpc = [];\r\n\t\t\tdpc.push(node);\r\n\t\t\tdpc = dpc.concat(tmp.children_d);\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : par.id });\r\n\r\n\t\t\tpar.children_d = par.children_d.concat(dpc);\r\n\t\t\tfor(i = 0, j = par.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[par.parents[i]].children_d = this._model.data[par.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\tnode = tmp;\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\ttmp[i >= pos ? i+1 : i] = par.children[i];\r\n\t\t\t}\r\n\t\t\ttmp[pos] = node.id;\r\n\t\t\tpar.children = tmp;\r\n\r\n\t\t\tthis.redraw_node(par, true);\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is created\r\n\t\t\t * @event\r\n\t\t\t * @name create_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the new node among the parent's children\r\n\t\t\t */\r\n\t\t\tthis.trigger('create_node', { \"node\" : this.get_node(node), \"parent\" : par.id, \"position\" : pos });\r\n\t\t\tif(callback) { callback.call(this, this.get_node(node)); }\r\n\t\t\treturn node.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * set the text value of a node\r\n\t\t * @name rename_node(obj, val)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to rename multiple nodes to the same name\r\n\t\t * @param  {String} val the new text value\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger rename_node.jstree\r\n\t\t */\r\n\t\trename_node : function (obj, val) {\r\n\t\t\tvar t1, t2, old;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.rename_node(obj[t1], val);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\told = obj.text;\r\n\t\t\tif(!this.check(\"rename_node\", obj, this.get_parent(obj), val)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tthis.set_text(obj, val); // .apply(this, Array.prototype.slice.call(arguments))\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is renamed\r\n\t\t\t * @event\r\n\t\t\t * @name rename_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} text the new value\r\n\t\t\t * @param {String} old the old value\r\n\t\t\t */\r\n\t\t\tthis.trigger('rename_node', { \"node\" : obj, \"text\" : val, \"old\" : old });\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * remove a node\r\n\t\t * @name delete_node(obj)\r\n\t\t * @param  {mixed} obj the node, you can pass an array to delete multiple nodes\r\n\t\t * @return {Boolean}\r\n\t\t * @trigger delete_node.jstree, changed.jstree\r\n\t\t */\r\n\t\tdelete_node : function (obj) {\r\n\t\t\tvar t1, t2, par, pos, tmp, i, j, k, l, c, top, lft;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.delete_node(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\tpar = this.get_node(obj.parent);\r\n\t\t\tpos = $.inArray(obj.id, par.children);\r\n\t\t\tc = false;\r\n\t\t\tif(!this.check(\"delete_node\", obj, par, pos)) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(pos !== -1) {\r\n\t\t\t\tpar.children = $.vakata.array_remove(par.children, pos);\r\n\t\t\t}\r\n\t\t\ttmp = obj.children_d.concat([]);\r\n\t\t\ttmp.push(obj.id);\r\n\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[obj.parents[i]].children_d = $.vakata.array_filter(this._model.data[obj.parents[i]].children_d, function (v) {\r\n\t\t\t\t\treturn $.inArray(v, tmp) === -1;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\r\n\t\t\t\tif(this._model.data[tmp[k]].state.selected) {\r\n\t\t\t\t\tc = true;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (c) {\r\n\t\t\t\tthis._data.core.selected = $.vakata.array_filter(this._data.core.selected, function (v) {\r\n\t\t\t\t\treturn $.inArray(v, tmp) === -1;\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is deleted\r\n\t\t\t * @event\r\n\t\t\t * @name delete_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t */\r\n\t\t\tthis.trigger('delete_node', { \"node\" : obj, \"parent\" : par.id });\r\n\t\t\tif(c) {\r\n\t\t\t\tthis.trigger('changed', { 'action' : 'delete_node', 'node' : obj, 'selected' : this._data.core.selected, 'parent' : par.id });\r\n\t\t\t}\r\n\t\t\tfor(k = 0, l = tmp.length; k < l; k++) {\r\n\t\t\t\tdelete this._model.data[tmp[k]];\r\n\t\t\t}\r\n\t\t\tif($.inArray(this._data.core.focused, tmp) !== -1) {\r\n\t\t\t\tthis._data.core.focused = null;\r\n\t\t\t\ttop = this.element[0].scrollTop;\r\n\t\t\t\tlft = this.element[0].scrollLeft;\r\n\t\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\t\tif (this._model.data[$.jstree.root].children[0]) {\r\n\t\t\t\t\t\tthis.get_node(this._model.data[$.jstree.root].children[0], true).children('.jstree-anchor').focus();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis.get_node(par, true).children('.jstree-anchor').focus();\r\n\t\t\t\t}\r\n\t\t\t\tthis.element[0].scrollTop  = top;\r\n\t\t\t\tthis.element[0].scrollLeft = lft;\r\n\t\t\t}\r\n\t\t\tthis.redraw_node(par, true);\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if an operation is premitted on the tree. Used internally.\r\n\t\t * @private\r\n\t\t * @name check(chk, obj, par, pos)\r\n\t\t * @param  {String} chk the operation to check, can be \"create_node\", \"rename_node\", \"delete_node\", \"copy_node\" or \"move_node\"\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param  {mixed} par the parent\r\n\t\t * @param  {mixed} pos the position to insert at, or if \"rename_node\" - the new name\r\n\t\t * @param  {mixed} more some various additional information, for example if a \"move_node\" operations is triggered by DND this will be the hovered node\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tcheck : function (chk, obj, par, pos, more) {\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tpar = par && par.id ? par : this.get_node(par);\r\n\t\t\tvar tmp = chk.match(/^move_node|copy_node|create_node$/i) ? par : obj,\r\n\t\t\t\tchc = this.settings.core.check_callback;\r\n\t\t\tif(chk === \"move_node\" || chk === \"copy_node\") {\r\n\t\t\t\tif((!more || !more.is_multi) && (obj.id === par.id || (chk === \"move_node\" && $.inArray(obj.id, par.children) === pos) || $.inArray(par.id, obj.children_d) !== -1)) {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_01', 'reason' : 'Moving parent inside child', 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(tmp && tmp.data) { tmp = tmp.data; }\r\n\t\t\tif(tmp && tmp.functions && (tmp.functions[chk] === false || tmp.functions[chk] === true)) {\r\n\t\t\t\tif(tmp.functions[chk] === false) {\r\n\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_02', 'reason' : 'Node data prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp.functions[chk];\r\n\t\t\t}\r\n\t\t\tif(chc === false || ($.isFunction(chc) && chc.call(this, chk, obj, par, pos, more) === false) || (chc && chc[chk] === false)) {\r\n\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'core', 'id' : 'core_03', 'reason' : 'User config for core.check_callback prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the last error\r\n\t\t * @name last_error()\r\n\t\t * @return {Object}\r\n\t\t */\r\n\t\tlast_error : function () {\r\n\t\t\treturn this._data.core.last_error;\r\n\t\t},\r\n\t\t/**\r\n\t\t * move a node to a new parent\r\n\t\t * @name move_node(obj, par [, pos, callback, is_loaded])\r\n\t\t * @param  {mixed} obj the node to move, pass an array to move multiple nodes\r\n\t\t * @param  {mixed} par the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\r\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\r\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\r\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\r\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\r\n\t\t * @trigger move_node.jstree\r\n\t\t */\r\n\t\tmove_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\r\n\t\t\tvar t1, t2, old_par, old_pos, new_par, old_ins, is_multi, dpc, tmp, i, j, k, l, p;\r\n\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tpos = pos === undefined ? 0 : pos;\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.move_node(obj, par, pos, callback, true, false, origin); });\r\n\t\t\t}\r\n\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tif(obj.length === 1) {\r\n\t\t\t\t\tobj = obj[0];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//obj = obj.slice();\r\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\tif((tmp = this.move_node(obj[t1], par, pos, callback, is_loaded, false, origin))) {\r\n\t\t\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\t\t\tpos = \"after\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\r\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\r\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\r\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\r\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\r\n\t\t\told_pos = old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1;\r\n\t\t\tif(old_ins && old_ins._id) {\r\n\t\t\t\tobj = old_ins._model.data[obj.id];\r\n\t\t\t}\r\n\r\n\t\t\tif(is_multi) {\r\n\t\t\t\tif((tmp = this.copy_node(obj, par, pos, callback, is_loaded, false, origin))) {\r\n\t\t\t\t\tif(old_ins) { old_ins.delete_node(obj); }\r\n\t\t\t\t\treturn tmp;\r\n\t\t\t\t}\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\t//var m = this._model.data;\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = new_par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\r\n\t\t\tif(!this.check(\"move_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(obj.parent === new_par.id) {\r\n\t\t\t\tdpc = new_par.children.concat();\r\n\t\t\t\ttmp = $.inArray(obj.id, dpc);\r\n\t\t\t\tif(tmp !== -1) {\r\n\t\t\t\t\tdpc = $.vakata.array_remove(dpc, tmp);\r\n\t\t\t\t\tif(pos > tmp) { pos--; }\r\n\t\t\t\t}\r\n\t\t\t\ttmp = [];\r\n\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\ttmp[i >= pos ? i+1 : i] = dpc[i];\r\n\t\t\t\t}\r\n\t\t\t\ttmp[pos] = obj.id;\r\n\t\t\t\tnew_par.children = tmp;\r\n\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// clean old parent and up\r\n\t\t\t\ttmp = obj.children_d.concat();\r\n\t\t\t\ttmp.push(obj.id);\r\n\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\tdpc = [];\r\n\t\t\t\t\tp = old_ins._model.data[obj.parents[i]].children_d;\r\n\t\t\t\t\tfor(k = 0, l = p.length; k < l; k++) {\r\n\t\t\t\t\t\tif($.inArray(p[k], tmp) === -1) {\r\n\t\t\t\t\t\t\tdpc.push(p[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\told_ins._model.data[obj.parents[i]].children_d = dpc;\r\n\t\t\t\t}\r\n\t\t\t\told_ins._model.data[old_par].children = $.vakata.array_remove_item(old_ins._model.data[old_par].children, obj.id);\r\n\r\n\t\t\t\t// insert into new parent and up\r\n\t\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(tmp);\r\n\t\t\t\t}\r\n\t\t\t\tdpc = [];\r\n\t\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\r\n\t\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\r\n\t\t\t\t}\r\n\t\t\t\tdpc[pos] = obj.id;\r\n\t\t\t\tnew_par.children = dpc;\r\n\t\t\t\tnew_par.children_d.push(obj.id);\r\n\t\t\t\tnew_par.children_d = new_par.children_d.concat(obj.children_d);\r\n\r\n\t\t\t\t// update object\r\n\t\t\t\tobj.parent = new_par.id;\r\n\t\t\t\ttmp = new_par.parents.concat();\r\n\t\t\t\ttmp.unshift(new_par.id);\r\n\t\t\t\tp = obj.parents.length;\r\n\t\t\t\tobj.parents = tmp;\r\n\r\n\t\t\t\t// update object children\r\n\t\t\t\ttmp = tmp.concat();\r\n\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\tthis._model.data[obj.children_d[i]].parents = this._model.data[obj.children_d[i]].parents.slice(0,p*-1);\r\n\t\t\t\t\tArray.prototype.push.apply(this._model.data[obj.children_d[i]].parents, tmp);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif(old_par === $.jstree.root || new_par.id === $.jstree.root) {\r\n\t\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t\t}\r\n\t\t\t\tif(!this._model.force_full_redraw) {\r\n\t\t\t\t\tthis._node_changed(old_par);\r\n\t\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t\t}\r\n\t\t\t\tif(!skip_redraw) {\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(callback) { callback.call(this, obj, new_par, pos); }\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is moved\r\n\t\t\t * @event\r\n\t\t\t * @name move_node.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the node among the parent's children\r\n\t\t\t * @param {String} old_parent the old parent of the node\r\n\t\t\t * @param {Number} old_position the old position of the node\r\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\r\n\t\t\t * @param {jsTree} old_instance the instance the node came from\r\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\r\n\t\t\t */\r\n\t\t\tthis.trigger('move_node', { \"node\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_pos, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\r\n\t\t\treturn obj.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy a node to a new parent\r\n\t\t * @name copy_node(obj, par [, pos, callback, is_loaded])\r\n\t\t * @param  {mixed} obj the node to copy, pass an array to copy multiple nodes\r\n\t\t * @param  {mixed} par the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer values, \"first\" and \"last\" are supported, as well as \"before\" and \"after\"), defaults to integer `0`\r\n\t\t * @param  {function} callback a function to call once the move is completed, receives 3 arguments - the node, the new parent and the position\r\n\t\t * @param  {Boolean} is_loaded internal parameter indicating if the parent node has been loaded\r\n\t\t * @param  {Boolean} skip_redraw internal parameter indicating if the tree should be redrawn\r\n\t\t * @param  {Boolean} instance internal parameter indicating if the node comes from another instance\r\n\t\t * @trigger model.jstree copy_node.jstree\r\n\t\t */\r\n\t\tcopy_node : function (obj, par, pos, callback, is_loaded, skip_redraw, origin) {\r\n\t\t\tvar t1, t2, dpc, tmp, i, j, node, old_par, new_par, old_ins, is_multi;\r\n\r\n\t\t\tpar = this.get_node(par);\r\n\t\t\tpos = pos === undefined ? 0 : pos;\r\n\t\t\tif(!par) { return false; }\r\n\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\treturn this.load_node(par, function () { this.copy_node(obj, par, pos, callback, true, false, origin); });\r\n\t\t\t}\r\n\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tif(obj.length === 1) {\r\n\t\t\t\t\tobj = obj[0];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t//obj = obj.slice();\r\n\t\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\tif((tmp = this.copy_node(obj[t1], par, pos, callback, is_loaded, true, origin))) {\r\n\t\t\t\t\t\t\tpar = tmp;\r\n\t\t\t\t\t\t\tpos = \"after\";\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.redraw();\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\r\n\t\t\told_par = (obj.parent || $.jstree.root).toString();\r\n\t\t\tnew_par = (!pos.toString().match(/^(before|after)$/) || par.id === $.jstree.root) ? par : this.get_node(par.parent);\r\n\t\t\told_ins = origin ? origin : (this._model.data[obj.id] ? this : $.jstree.reference(obj.id));\r\n\t\t\tis_multi = !old_ins || !old_ins._id || (this._id !== old_ins._id);\r\n\r\n\t\t\tif(old_ins && old_ins._id) {\r\n\t\t\t\tobj = old_ins._model.data[obj.id];\r\n\t\t\t}\r\n\r\n\t\t\tif(par.id === $.jstree.root) {\r\n\t\t\t\tif(pos === \"before\") { pos = \"first\"; }\r\n\t\t\t\tif(pos === \"after\") { pos = \"last\"; }\r\n\t\t\t}\r\n\t\t\tswitch(pos) {\r\n\t\t\t\tcase \"before\":\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children);\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"after\" :\r\n\t\t\t\t\tpos = $.inArray(par.id, new_par.children) + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"inside\":\r\n\t\t\t\tcase \"first\":\r\n\t\t\t\t\tpos = 0;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"last\":\r\n\t\t\t\t\tpos = new_par.children.length;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tif(!pos) { pos = 0; }\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(pos > new_par.children.length) { pos = new_par.children.length; }\r\n\t\t\tif(!this.check(\"copy_node\", obj, new_par, pos, { 'core' : true, 'origin' : origin, 'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id) })) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tnode = old_ins ? old_ins.get_json(obj, { no_id : true, no_data : true, no_state : true }) : obj;\r\n\t\t\tif(!node) { return false; }\r\n\t\t\tif(node.id === true) { delete node.id; }\r\n\t\t\tnode = this._parse_model_from_json(node, new_par.id, new_par.parents.concat());\r\n\t\t\tif(!node) { return false; }\r\n\t\t\ttmp = this.get_node(node);\r\n\t\t\tif(obj && obj.state && obj.state.loaded === false) { tmp.state.loaded = false; }\r\n\t\t\tdpc = [];\r\n\t\t\tdpc.push(node);\r\n\t\t\tdpc = dpc.concat(tmp.children_d);\r\n\t\t\tthis.trigger('model', { \"nodes\" : dpc, \"parent\" : new_par.id });\r\n\r\n\t\t\t// insert into new parent and up\r\n\t\t\tfor(i = 0, j = new_par.parents.length; i < j; i++) {\r\n\t\t\t\tthis._model.data[new_par.parents[i]].children_d = this._model.data[new_par.parents[i]].children_d.concat(dpc);\r\n\t\t\t}\r\n\t\t\tdpc = [];\r\n\t\t\tfor(i = 0, j = new_par.children.length; i < j; i++) {\r\n\t\t\t\tdpc[i >= pos ? i+1 : i] = new_par.children[i];\r\n\t\t\t}\r\n\t\t\tdpc[pos] = tmp.id;\r\n\t\t\tnew_par.children = dpc;\r\n\t\t\tnew_par.children_d.push(tmp.id);\r\n\t\t\tnew_par.children_d = new_par.children_d.concat(tmp.children_d);\r\n\r\n\t\t\tif(new_par.id === $.jstree.root) {\r\n\t\t\t\tthis._model.force_full_redraw = true;\r\n\t\t\t}\r\n\t\t\tif(!this._model.force_full_redraw) {\r\n\t\t\t\tthis._node_changed(new_par.id);\r\n\t\t\t}\r\n\t\t\tif(!skip_redraw) {\r\n\t\t\t\tthis.redraw(new_par.id === $.jstree.root);\r\n\t\t\t}\r\n\t\t\tif(callback) { callback.call(this, tmp, new_par, pos); }\r\n\t\t\t/**\r\n\t\t\t * triggered when a node is copied\r\n\t\t\t * @event\r\n\t\t\t * @name copy_node.jstree\r\n\t\t\t * @param {Object} node the copied node\r\n\t\t\t * @param {Object} original the original node\r\n\t\t\t * @param {String} parent the parent's ID\r\n\t\t\t * @param {Number} position the position of the node among the parent's children\r\n\t\t\t * @param {String} old_parent the old parent of the node\r\n\t\t\t * @param {Number} old_position the position of the original node\r\n\t\t\t * @param {Boolean} is_multi do the node and new parent belong to different instances\r\n\t\t\t * @param {jsTree} old_instance the instance the node came from\r\n\t\t\t * @param {jsTree} new_instance the instance of the new parent\r\n\t\t\t */\r\n\t\t\tthis.trigger('copy_node', { \"node\" : tmp, \"original\" : obj, \"parent\" : new_par.id, \"position\" : pos, \"old_parent\" : old_par, \"old_position\" : old_ins && old_ins._id && old_par && old_ins._model.data[old_par] && old_ins._model.data[old_par].children ? $.inArray(obj.id, old_ins._model.data[old_par].children) : -1,'is_multi' : (old_ins && old_ins._id && old_ins._id !== this._id), 'is_foreign' : (!old_ins || !old_ins._id), 'old_instance' : old_ins, 'new_instance' : this });\r\n\t\t\treturn tmp.id;\r\n\t\t},\r\n\t\t/**\r\n\t\t * cut a node (a later call to `paste(obj)` would move the node)\r\n\t\t * @name cut(obj)\r\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\r\n\t\t * @trigger cut.jstree\r\n\t\t */\r\n\t\tcut : function (obj) {\r\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\r\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\r\n\t\t\tif(!obj.length) { return false; }\r\n\t\t\tvar tmp = [], o, t1, t2;\r\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\to = this.get_node(obj[t1]);\r\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\r\n\t\t\t}\r\n\t\t\tif(!tmp.length) { return false; }\r\n\t\t\tccp_node = tmp;\r\n\t\t\tccp_inst = this;\r\n\t\t\tccp_mode = 'move_node';\r\n\t\t\t/**\r\n\t\t\t * triggered when nodes are added to the buffer for moving\r\n\t\t\t * @event\r\n\t\t\t * @name cut.jstree\r\n\t\t\t * @param {Array} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('cut', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy a node (a later call to `paste(obj)` would copy the node)\r\n\t\t * @name copy(obj)\r\n\t\t * @param  {mixed} obj multiple objects can be passed using an array\r\n\t\t * @trigger copy.jstree\r\n\t\t */\r\n\t\tcopy : function (obj) {\r\n\t\t\tif(!obj) { obj = this._data.core.selected.concat(); }\r\n\t\t\tif(!$.isArray(obj)) { obj = [obj]; }\r\n\t\t\tif(!obj.length) { return false; }\r\n\t\t\tvar tmp = [], o, t1, t2;\r\n\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\to = this.get_node(obj[t1]);\r\n\t\t\t\tif(o && o.id && o.id !== $.jstree.root) { tmp.push(o); }\r\n\t\t\t}\r\n\t\t\tif(!tmp.length) { return false; }\r\n\t\t\tccp_node = tmp;\r\n\t\t\tccp_inst = this;\r\n\t\t\tccp_mode = 'copy_node';\r\n\t\t\t/**\r\n\t\t\t * triggered when nodes are added to the buffer for copying\r\n\t\t\t * @event\r\n\t\t\t * @name copy.jstree\r\n\t\t\t * @param {Array} node\r\n\t\t\t */\r\n\t\t\tthis.trigger('copy', { \"node\" : obj });\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the current buffer (any nodes that are waiting for a paste operation)\r\n\t\t * @name get_buffer()\r\n\t\t * @return {Object} an object consisting of `mode` (\"copy_node\" or \"move_node\"), `node` (an array of objects) and `inst` (the instance)\r\n\t\t */\r\n\t\tget_buffer : function () {\r\n\t\t\treturn { 'mode' : ccp_mode, 'node' : ccp_node, 'inst' : ccp_inst };\r\n\t\t},\r\n\t\t/**\r\n\t\t * check if there is something in the buffer to paste\r\n\t\t * @name can_paste()\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tcan_paste : function () {\r\n\t\t\treturn ccp_mode !== false && ccp_node !== false; // && ccp_inst._model.data[ccp_node];\r\n\t\t},\r\n\t\t/**\r\n\t\t * copy or move the previously cut or copied nodes to a new parent\r\n\t\t * @name paste(obj [, pos])\r\n\t\t * @param  {mixed} obj the new parent\r\n\t\t * @param  {mixed} pos the position to insert at (besides integer, \"first\" and \"last\" are supported), defaults to integer `0`\r\n\t\t * @trigger paste.jstree\r\n\t\t */\r\n\t\tpaste : function (obj, pos) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || !ccp_mode || !ccp_mode.match(/^(copy_node|move_node)$/) || !ccp_node) { return false; }\r\n\t\t\tif(this[ccp_mode](ccp_node, obj, pos, false, false, false, ccp_inst)) {\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when paste is invoked\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name paste.jstree\r\n\t\t\t\t * @param {String} parent the ID of the receiving node\r\n\t\t\t\t * @param {Array} node the nodes in the buffer\r\n\t\t\t\t * @param {String} mode the performed operation - \"copy_node\" or \"move_node\"\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('paste', { \"parent\" : obj.id, \"node\" : ccp_node, \"mode\" : ccp_mode });\r\n\t\t\t}\r\n\t\t\tccp_node = false;\r\n\t\t\tccp_mode = false;\r\n\t\t\tccp_inst = false;\r\n\t\t},\r\n\t\t/**\r\n\t\t * clear the buffer of previously copied or cut nodes\r\n\t\t * @name clear_buffer()\r\n\t\t * @trigger clear_buffer.jstree\r\n\t\t */\r\n\t\tclear_buffer : function () {\r\n\t\t\tccp_node = false;\r\n\t\t\tccp_mode = false;\r\n\t\t\tccp_inst = false;\r\n\t\t\t/**\r\n\t\t\t * triggered when the copy / cut buffer is cleared\r\n\t\t\t * @event\r\n\t\t\t * @name clear_buffer.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('clear_buffer');\r\n\t\t},\r\n\t\t/**\r\n\t\t * put a node in edit mode (input field to rename the node)\r\n\t\t * @name edit(obj [, default_text, callback])\r\n\t\t * @param  {mixed} obj\r\n\t\t * @param  {String} default_text the text to populate the input with (if omitted or set to a non-string value the node's text value is used)\r\n\t\t * @param  {Function} callback a function to be called once the text box is blurred, it is called in the instance's scope and receives the node, a status parameter (true if the rename is successful, false otherwise) and a boolean indicating if the user cancelled the edit. You can access the node's title using .text\r\n\t\t */\r\n\t\tedit : function (obj, default_text, callback) {\r\n\t\t\tvar rtl, w, a, s, t, h1, h2, fn, tmp, cancel = false;\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tif(!this.check(\"edit\", obj, this.get_parent(obj))) {\r\n\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\ttmp = obj;\r\n\t\t\tdefault_text = typeof default_text === 'string' ? default_text : obj.text;\r\n\t\t\tthis.set_text(obj, \"\");\r\n\t\t\tobj = this._open_to(obj);\r\n\t\t\ttmp.text = default_text;\r\n\r\n\t\t\trtl = this._data.core.rtl;\r\n\t\t\tw  = this.element.width();\r\n\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\ta  = obj.children('.jstree-anchor').focus();\r\n\t\t\ts  = $('<span>');\r\n\t\t\t/*!\r\n\t\t\toi = obj.children(\"i:visible\"),\r\n\t\t\tai = a.children(\"i:visible\"),\r\n\t\t\tw1 = oi.width() * oi.length,\r\n\t\t\tw2 = ai.width() * ai.length,\r\n\t\t\t*/\r\n\t\t\tt  = default_text;\r\n\t\t\th1 = $(\"<\"+\"div />\", { css : { \"position\" : \"absolute\", \"top\" : \"-200px\", \"left\" : (rtl ? \"0px\" : \"-1000px\"), \"visibility\" : \"hidden\" } }).appendTo(document.body);\r\n\t\t\th2 = $(\"<\"+\"input />\", {\r\n\t\t\t\t\t\t\"value\" : t,\r\n\t\t\t\t\t\t\"class\" : \"jstree-rename-input\",\r\n\t\t\t\t\t\t// \"size\" : t.length,\r\n\t\t\t\t\t\t\"css\" : {\r\n\t\t\t\t\t\t\t\"padding\" : \"0\",\r\n\t\t\t\t\t\t\t\"border\" : \"1px solid silver\",\r\n\t\t\t\t\t\t\t\"box-sizing\" : \"border-box\",\r\n\t\t\t\t\t\t\t\"display\" : \"inline-block\",\r\n\t\t\t\t\t\t\t\"height\" : (this._data.core.li_height) + \"px\",\r\n\t\t\t\t\t\t\t\"lineHeight\" : (this._data.core.li_height) + \"px\",\r\n\t\t\t\t\t\t\t\"width\" : \"150px\" // will be set a bit further down\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"blur\" : $.proxy(function (e) {\r\n\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tvar i = s.children(\".jstree-rename-input\"),\r\n\t\t\t\t\t\t\t\tv = i.val(),\r\n\t\t\t\t\t\t\t\tf = this.settings.core.force_text,\r\n\t\t\t\t\t\t\t\tnv;\r\n\t\t\t\t\t\t\tif(v === \"\") { v = t; }\r\n\t\t\t\t\t\t\th1.remove();\r\n\t\t\t\t\t\t\ts.replaceWith(a);\r\n\t\t\t\t\t\t\ts.remove();\r\n\t\t\t\t\t\t\tt = f ? t : $('<div></div>').append($.parseHTML(t)).html();\r\n\t\t\t\t\t\t\tthis.set_text(obj, t);\r\n\t\t\t\t\t\t\tnv = !!this.rename_node(obj, f ? $('<div></div>').text(v).text() : $('<div></div>').append($.parseHTML(v)).html());\r\n\t\t\t\t\t\t\tif(!nv) {\r\n\t\t\t\t\t\t\t\tthis.set_text(obj, t); // move this up? and fix #483\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t\tsetTimeout($.proxy(function () {\r\n\t\t\t\t\t\t\t\tvar node = this.get_node(tmp.id, true);\r\n\t\t\t\t\t\t\t\tif(node.length) {\r\n\t\t\t\t\t\t\t\t\tthis._data.core.focused = tmp.id;\r\n\t\t\t\t\t\t\t\t\tnode.children('.jstree-anchor').focus();\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}, this), 0);\r\n\t\t\t\t\t\t\tif(callback) {\r\n\t\t\t\t\t\t\t\tcallback.call(this, tmp, nv, cancel);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\th2 = null;\r\n\t\t\t\t\t\t}, this),\r\n\t\t\t\t\t\t\"keydown\" : function (e) {\r\n\t\t\t\t\t\t\tvar key = e.which;\r\n\t\t\t\t\t\t\tif(key === 27) {\r\n\t\t\t\t\t\t\t\tcancel = true;\r\n\t\t\t\t\t\t\t\tthis.value = t;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\r\n\t\t\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(key === 27 || key === 13) {\r\n\t\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t\tthis.blur();\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"click\" : function (e) { e.stopImmediatePropagation(); },\r\n\t\t\t\t\t\t\"mousedown\" : function (e) { e.stopImmediatePropagation(); },\r\n\t\t\t\t\t\t\"keyup\" : function (e) {\r\n\t\t\t\t\t\t\th2.width(Math.min(h1.text(\"pW\" + this.value).width(),w));\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\"keypress\" : function(e) {\r\n\t\t\t\t\t\t\tif(e.which === 13) { return false; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\tfn = {\r\n\t\t\t\t\t\tfontFamily\t\t: a.css('fontFamily')\t\t|| '',\r\n\t\t\t\t\t\tfontSize\t\t: a.css('fontSize')\t\t\t|| '',\r\n\t\t\t\t\t\tfontWeight\t\t: a.css('fontWeight')\t\t|| '',\r\n\t\t\t\t\t\tfontStyle\t\t: a.css('fontStyle')\t\t|| '',\r\n\t\t\t\t\t\tfontStretch\t\t: a.css('fontStretch')\t\t|| '',\r\n\t\t\t\t\t\tfontVariant\t\t: a.css('fontVariant')\t\t|| '',\r\n\t\t\t\t\t\tletterSpacing\t: a.css('letterSpacing')\t|| '',\r\n\t\t\t\t\t\twordSpacing\t\t: a.css('wordSpacing')\t\t|| ''\r\n\t\t\t\t};\r\n\t\t\ts.attr('class', a.attr('class')).append(a.contents().clone()).append(h2);\r\n\t\t\ta.replaceWith(s);\r\n\t\t\th1.css(fn);\r\n\t\t\th2.css(fn).width(Math.min(h1.text(\"pW\" + h2[0].value).width(),w))[0].select();\r\n\t\t\t$(document).one('mousedown.jstree touchstart.jstree dnd_start.vakata', function (e) {\r\n\t\t\t\tif (h2 && e.target !== h2) {\r\n\t\t\t\t\t$(h2).blur();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t},\r\n\r\n\r\n\t\t/**\r\n\t\t * changes the theme\r\n\t\t * @name set_theme(theme_name [, theme_url])\r\n\t\t * @param {String} theme_name the name of the new theme to apply\r\n\t\t * @param {mixed} theme_url  the location of the CSS file for this theme. Omit or set to `false` if you manually included the file. Set to `true` to autoload from the `core.themes.dir` directory.\r\n\t\t * @trigger set_theme.jstree\r\n\t\t */\r\n\t\tset_theme : function (theme_name, theme_url) {\r\n\t\t\tif(!theme_name) { return false; }\r\n\t\t\tif(theme_url === true) {\r\n\t\t\t\tvar dir = this.settings.core.themes.dir;\r\n\t\t\t\tif(!dir) { dir = $.jstree.path + '/themes'; }\r\n\t\t\t\ttheme_url = dir + '/' + theme_name + '/style.css';\r\n\t\t\t}\r\n\t\t\tif(theme_url && $.inArray(theme_url, themes_loaded) === -1) {\r\n\t\t\t\t$('head').append('<'+'link rel=\"stylesheet\" href=\"' + theme_url + '\" type=\"text/css\" />');\r\n\t\t\t\tthemes_loaded.push(theme_url);\r\n\t\t\t}\r\n\t\t\tif(this._data.core.themes.name) {\r\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name);\r\n\t\t\t}\r\n\t\t\tthis._data.core.themes.name = theme_name;\r\n\t\t\tthis.element.addClass('jstree-' + theme_name);\r\n\t\t\tthis.element[this.settings.core.themes.responsive ? 'addClass' : 'removeClass' ]('jstree-' + theme_name + '-responsive');\r\n\t\t\t/**\r\n\t\t\t * triggered when a theme is set\r\n\t\t\t * @event\r\n\t\t\t * @name set_theme.jstree\r\n\t\t\t * @param {String} theme the new theme\r\n\t\t\t */\r\n\t\t\tthis.trigger('set_theme', { 'theme' : theme_name });\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the name of the currently applied theme name\r\n\t\t * @name get_theme()\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_theme : function () { return this._data.core.themes.name; },\r\n\t\t/**\r\n\t\t * changes the theme variant (if the theme has variants)\r\n\t\t * @name set_theme_variant(variant_name)\r\n\t\t * @param {String|Boolean} variant_name the variant to apply (if `false` is used the current variant is removed)\r\n\t\t */\r\n\t\tset_theme_variant : function (variant_name) {\r\n\t\t\tif(this._data.core.themes.variant) {\r\n\t\t\t\tthis.element.removeClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\r\n\t\t\t}\r\n\t\t\tthis._data.core.themes.variant = variant_name;\r\n\t\t\tif(variant_name) {\r\n\t\t\t\tthis.element.addClass('jstree-' + this._data.core.themes.name + '-' + this._data.core.themes.variant);\r\n\t\t\t}\r\n\t\t},\r\n\t\t/**\r\n\t\t * gets the name of the currently applied theme variant\r\n\t\t * @name get_theme()\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_theme_variant : function () { return this._data.core.themes.variant; },\r\n\t\t/**\r\n\t\t * shows a striped background on the container (if the theme supports it)\r\n\t\t * @name show_stripes()\r\n\t\t */\r\n\t\tshow_stripes : function () {\r\n\t\t\tthis._data.core.themes.stripes = true;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-striped\");\r\n\t\t\t/**\r\n\t\t\t * triggered when stripes are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_stripes.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_stripes');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides the striped background on the container\r\n\t\t * @name hide_stripes()\r\n\t\t */\r\n\t\thide_stripes : function () {\r\n\t\t\tthis._data.core.themes.stripes = false;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-striped\");\r\n\t\t\t/**\r\n\t\t\t * triggered when stripes are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_stripes.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_stripes');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles the striped background on the container\r\n\t\t * @name toggle_stripes()\r\n\t\t */\r\n\t\ttoggle_stripes : function () { if(this._data.core.themes.stripes) { this.hide_stripes(); } else { this.show_stripes(); } },\r\n\t\t/**\r\n\t\t * shows the connecting dots (if the theme supports it)\r\n\t\t * @name show_dots()\r\n\t\t */\r\n\t\tshow_dots : function () {\r\n\t\t\tthis._data.core.themes.dots = true;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-dots\");\r\n\t\t\t/**\r\n\t\t\t * triggered when dots are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_dots.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_dots');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hides the connecting dots\r\n\t\t * @name hide_dots()\r\n\t\t */\r\n\t\thide_dots : function () {\r\n\t\t\tthis._data.core.themes.dots = false;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-dots\");\r\n\t\t\t/**\r\n\t\t\t * triggered when dots are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_dots.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_dots');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggles the connecting dots\r\n\t\t * @name toggle_dots()\r\n\t\t */\r\n\t\ttoggle_dots : function () { if(this._data.core.themes.dots) { this.hide_dots(); } else { this.show_dots(); } },\r\n\t\t/**\r\n\t\t * show the node icons\r\n\t\t * @name show_icons()\r\n\t\t */\r\n\t\tshow_icons : function () {\r\n\t\t\tthis._data.core.themes.icons = true;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-no-icons\");\r\n\t\t\t/**\r\n\t\t\t * triggered when icons are shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_icons.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_icons');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the node icons\r\n\t\t * @name hide_icons()\r\n\t\t */\r\n\t\thide_icons : function () {\r\n\t\t\tthis._data.core.themes.icons = false;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-no-icons\");\r\n\t\t\t/**\r\n\t\t\t * triggered when icons are hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_icons.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_icons');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggle the node icons\r\n\t\t * @name toggle_icons()\r\n\t\t */\r\n\t\ttoggle_icons : function () { if(this._data.core.themes.icons) { this.hide_icons(); } else { this.show_icons(); } },\r\n\t\t/**\r\n\t\t * show the node ellipsis\r\n\t\t * @name show_icons()\r\n\t\t */\r\n\t\tshow_ellipsis : function () {\r\n\t\t\tthis._data.core.themes.ellipsis = true;\r\n\t\t\tthis.get_container_ul().addClass(\"jstree-ellipsis\");\r\n\t\t\t/**\r\n\t\t\t * triggered when ellisis is shown\r\n\t\t\t * @event\r\n\t\t\t * @name show_ellipsis.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('show_ellipsis');\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the node ellipsis\r\n\t\t * @name hide_ellipsis()\r\n\t\t */\r\n\t\thide_ellipsis : function () {\r\n\t\t\tthis._data.core.themes.ellipsis = false;\r\n\t\t\tthis.get_container_ul().removeClass(\"jstree-ellipsis\");\r\n\t\t\t/**\r\n\t\t\t * triggered when ellisis is hidden\r\n\t\t\t * @event\r\n\t\t\t * @name hide_ellipsis.jstree\r\n\t\t\t */\r\n\t\t\tthis.trigger('hide_ellipsis');\r\n\t\t},\r\n\t\t/**\r\n\t\t * toggle the node ellipsis\r\n\t\t * @name toggle_icons()\r\n\t\t */\r\n\t\ttoggle_ellipsis : function () { if(this._data.core.themes.ellipsis) { this.hide_ellipsis(); } else { this.show_ellipsis(); } },\r\n\t\t/**\r\n\t\t * set the node icon for a node\r\n\t\t * @name set_icon(obj, icon)\r\n\t\t * @param {mixed} obj\r\n\t\t * @param {String} icon the new icon - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class\r\n\t\t */\r\n\t\tset_icon : function (obj, icon) {\r\n\t\t\tvar t1, t2, dom, old;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_icon(obj[t1], icon);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\told = obj.icon;\r\n\t\t\tobj.icon = icon === true || icon === null || icon === undefined || icon === '' ? true : icon;\r\n\t\t\tdom = this.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\");\r\n\t\t\tif(icon === false) {\r\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\r\n\t\t\t\tthis.hide_icon(obj);\r\n\t\t\t}\r\n\t\t\telse if(icon === true || icon === null || icon === undefined || icon === '') {\r\n\t\t\t\tdom.removeClass('jstree-themeicon-custom ' + old).css(\"background\",\"\").removeAttr(\"rel\");\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\telse if(icon.indexOf(\"/\") === -1 && icon.indexOf(\".\") === -1) {\r\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\r\n\t\t\t\tdom.addClass(icon + ' jstree-themeicon-custom').attr(\"rel\",icon);\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tdom.removeClass(old).css(\"background\",\"\");\r\n\t\t\t\tdom.addClass('jstree-themeicon-custom').css(\"background\", \"url('\" + icon + \"') center center no-repeat\").attr(\"rel\",icon);\r\n\t\t\t\tif(old === false) { this.show_icon(obj); }\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * get the node icon for a node\r\n\t\t * @name get_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t * @return {String}\r\n\t\t */\r\n\t\tget_icon : function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj || obj.id === $.jstree.root) ? false : obj.icon;\r\n\t\t},\r\n\t\t/**\r\n\t\t * hide the icon on an individual node\r\n\t\t * @name hide_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t */\r\n\t\thide_icon : function (obj) {\r\n\t\t\tvar t1, t2;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.hide_icon(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\r\n\t\t\tobj.icon = false;\r\n\t\t\tthis.get_node(obj, true).children(\".jstree-anchor\").children(\".jstree-themeicon\").addClass('jstree-themeicon-hidden');\r\n\t\t\treturn true;\r\n\t\t},\r\n\t\t/**\r\n\t\t * show the icon on an individual node\r\n\t\t * @name show_icon(obj)\r\n\t\t * @param {mixed} obj\r\n\t\t */\r\n\t\tshow_icon : function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.show_icon(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj === $.jstree.root) { return false; }\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tobj.icon = dom.length ? dom.children(\".jstree-anchor\").children(\".jstree-themeicon\").attr('rel') : true;\r\n\t\t\tif(!obj.icon) { obj.icon = true; }\r\n\t\t\tdom.children(\".jstree-anchor\").children(\".jstree-themeicon\").removeClass('jstree-themeicon-hidden');\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\t// helpers\r\n\t$.vakata = {};\r\n\r\n\t$.vakata.search = function(pattern, txt, options) {\r\n\t\toptions = options || {};\r\n\t\tif(options.fuzzy !== false) {\r\n\t\t\toptions.fuzzy = true;\r\n\t\t}\r\n\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\r\n\t\tvar MATCH_LOCATION\t= options.location || 0,\r\n\t\t\tMATCH_DISTANCE\t= options.distance || 100,\r\n\t\t\tMATCH_THRESHOLD\t= options.threshold || 0.6,\r\n\t\t\tpatternLen = pattern.length;\r\n\t\tif(patternLen > 32) {\r\n\t\t\toptions.fuzzy = false;\r\n\t\t}\r\n\t\tif(options.fuzzy) {\r\n\t\t\tvar matchmask = 1 << (patternLen - 1);\r\n\t\t\tvar pattern_alphabet = (function () {\r\n\t\t\t\tvar mask = {},\r\n\t\t\t\t\ti = 0;\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tmask[pattern.charAt(i)] = 0;\r\n\t\t\t\t}\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\r\n\t\t\t\t}\r\n\t\t\t\treturn mask;\r\n\t\t\t})();\r\n\t\t\tvar match_bitapScore = function (e, x) {\r\n\t\t\t\tvar accuracy = e / patternLen,\r\n\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\r\n\t\t\t\tif(!MATCH_DISTANCE) {\r\n\t\t\t\t\treturn proximity ? 1.0 : accuracy;\r\n\t\t\t\t}\r\n\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\r\n\t\t\t};\r\n\t\t}\r\n\t\tvar search = function (text) {\r\n\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\r\n\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: true,\r\n\t\t\t\t\tscore: 0\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif(!options.fuzzy) {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: false,\r\n\t\t\t\t\tscore: 1\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tvar i, j,\r\n\t\t\t\ttextLen = text.length,\r\n\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\r\n\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\r\n\t\t\t\tbinMin, binMid,\r\n\t\t\t\tbinMax = patternLen + textLen,\r\n\t\t\t\tlastRd, start, finish, rd, charMatch,\r\n\t\t\t\tscore = 1,\r\n\t\t\t\tlocations = [];\r\n\t\t\tif (bestLoc != -1) {\r\n\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\r\n\t\t\t\tif (bestLoc != -1) {\r\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tbestLoc = -1;\r\n\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\tbinMin = 0;\r\n\t\t\t\tbinMid = binMax;\r\n\t\t\t\twhile (binMin < binMid) {\r\n\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\r\n\t\t\t\t\t\tbinMin = binMid;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\r\n\t\t\t\t}\r\n\t\t\t\tbinMax = binMid;\r\n\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\r\n\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\r\n\t\t\t\trd = Array(finish + 2);\r\n\t\t\t\trd[finish + 1] = (1 << i) - 1;\r\n\t\t\t\tfor (j = finish; j >= start; j--) {\r\n\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\r\n\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (rd[j] & matchmask) {\r\n\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\r\n\t\t\t\t\t\tif (score <= scoreThreshold) {\r\n\t\t\t\t\t\t\tscoreThreshold = score;\r\n\t\t\t\t\t\t\tbestLoc = j - 1;\r\n\t\t\t\t\t\t\tlocations.push(bestLoc);\r\n\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\r\n\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t\tlastRd = rd;\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tisMatch: bestLoc >= 0,\r\n\t\t\t\tscore: score\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn txt === true ? { 'search' : search } : search(txt);\r\n\t};\r\n\r\n\t// collect attributes\r\n\t$.vakata.attributes = function(node, with_values) {\r\n\t\tnode = $(node)[0];\r\n\t\tvar attr = with_values ? {} : [];\r\n\t\tif(node && node.attributes) {\r\n\t\t\t$.each(node.attributes, function (i, v) {\r\n\t\t\t\tif($.inArray(v.name.toLowerCase(),['style','contenteditable','hasfocus','tabindex']) !== -1) { return; }\r\n\t\t\t\tif(v.value !== null && $.trim(v.value) !== '') {\r\n\t\t\t\t\tif(with_values) { attr[v.name] = v.value; }\r\n\t\t\t\t\telse { attr.push(v.name); }\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn attr;\r\n\t};\r\n\t$.vakata.array_unique = function(array) {\r\n\t\tvar a = [], i, j, l, o = {};\r\n\t\tfor(i = 0, l = array.length; i < l; i++) {\r\n\t\t\tif(o[array[i]] === undefined) {\r\n\t\t\t\ta.push(array[i]);\r\n\t\t\t\to[array[i]] = true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn a;\r\n\t};\r\n\t// remove item from array\r\n\t$.vakata.array_remove = function(array, from) {\r\n\t\tarray.splice(from, 1);\r\n\t\treturn array;\r\n\t\t//var rest = array.slice((to || from) + 1 || array.length);\r\n\t\t//array.length = from < 0 ? array.length + from : from;\r\n\t\t//array.push.apply(array, rest);\r\n\t\t//return array;\r\n\t};\r\n\t// remove item from array\r\n\t$.vakata.array_remove_item = function(array, item) {\r\n\t\tvar tmp = $.inArray(item, array);\r\n\t\treturn tmp !== -1 ? $.vakata.array_remove(array, tmp) : array;\r\n\t};\r\n\t$.vakata.array_filter = function(c,a,b,d,e) {\r\n\t\tif (c.filter) {\r\n\t\t\treturn c.filter(a, b);\r\n\t\t}\r\n\t\td=[];\r\n\t\tfor (e in c) {\r\n\t\t\tif (~~e+''===e+'' && e>=0 && a.call(b,c[e],+e,c)) {\r\n\t\t\t\td.push(c[e]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn d;\r\n\t};\r\n\r\n\r\n\treturn Tree;\r\n\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/changed',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.changed) { return; }\r\n\r\n\t$.jstree.plugins.changed = function (options, parent) {\r\n\t\tvar last = [];\r\n\t\tthis.trigger = function (ev, data) {\r\n\t\t\tvar i, j;\r\n\t\t\tif(!data) {\r\n\t\t\t\tdata = {};\r\n\t\t\t}\r\n\t\t\tif(ev.replace('.jstree','') === 'changed') {\r\n\t\t\t\tdata.changed = { selected : [], deselected : [] };\r\n\t\t\t\tvar tmp = {};\r\n\t\t\t\tfor(i = 0, j = last.length; i < j; i++) {\r\n\t\t\t\t\ttmp[last[i]] = 1;\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\r\n\t\t\t\t\tif(!tmp[data.selected[i]]) {\r\n\t\t\t\t\t\tdata.changed.selected.push(data.selected[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\ttmp[data.selected[i]] = 2;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor(i = 0, j = last.length; i < j; i++) {\r\n\t\t\t\t\tif(tmp[last[i]] === 1) {\r\n\t\t\t\t\t\tdata.changed.deselected.push(last[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlast = data.selected.slice();\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered when selection changes (the \"changed\" plugin enhances the original event with more data)\r\n\t\t\t * @event\r\n\t\t\t * @name changed.jstree\r\n\t\t\t * @param {Object} node\r\n\t\t\t * @param {Object} action the action that caused the selection to change\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @param {Object} changed an object containing two properties `selected` and `deselected` - both arrays of node IDs, which were selected or deselected since the last changed event\r\n\t\t\t * @param {Object} event the event (if any) that triggered this changed event\r\n\t\t\t * @plugin changed\r\n\t\t\t */\r\n\t\t\tparent.trigger.call(this, ev, data);\r\n\t\t};\r\n\t\tthis.refresh = function (skip_loading, forget_state) {\r\n\t\t\tlast = [];\r\n\t\t\treturn parent.refresh.apply(this, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\treturn $;\r\n});\ndefine('skylark-widgets-hierarchy/addons/checkbox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.checkbox) { return; }\r\n\r\n\tvar _i = document.createElement('I');\r\n\t_i.className = 'jstree-icon jstree-checkbox';\r\n\t_i.setAttribute('role', 'presentation');\r\n\t/**\r\n\t * stores all defaults for the checkbox plugin\r\n\t * @name $.jstree.defaults.checkbox\r\n\t * @plugin checkbox\r\n\t */\r\n\t$.jstree.defaults.checkbox = {\r\n\t\t/**\r\n\t\t * a boolean indicating if checkboxes should be visible (can be changed at a later time using `show_checkboxes()` and `hide_checkboxes`). Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.visible\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tvisible\t\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if checkboxes should cascade down and have an undetermined state. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.three_state\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthree_state\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if clicking anywhere on the node should act as clicking on the checkbox. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.whole_node\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\twhole_node\t\t\t: true,\r\n\t\t/**\r\n\t\t * a boolean indicating if the selected style of a node should be kept, or removed. Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.checkbox.keep_selected_style\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tkeep_selected_style\t: true,\r\n\t\t/**\r\n\t\t * This setting controls how cascading and undetermined nodes are applied.\r\n\t\t * If 'up' is in the string - cascading up is enabled, if 'down' is in the string - cascading down is enabled, if 'undetermined' is in the string - undetermined nodes will be used.\r\n\t\t * If `three_state` is set to `true` this setting is automatically set to 'up+down+undetermined'. Defaults to ''.\r\n\t\t * @name $.jstree.defaults.checkbox.cascade\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade\t\t\t\t: '',\r\n\t\t/**\r\n\t\t * This setting controls if checkbox are bound to the general tree selection or to an internal array maintained by the checkbox plugin. Defaults to `true`, only set to `false` if you know exactly what you are doing.\r\n\t\t * @name $.jstree.defaults.checkbox.tie_selection\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\ttie_selection\t\t: true,\r\n\r\n\t\t/**\r\n\t\t * This setting controls if cascading down affects disabled checkboxes\r\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_disabled\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade_to_disabled : true,\r\n\r\n\t\t/**\r\n\t\t * This setting controls if cascading down affects hidden checkboxes\r\n\t\t * @name $.jstree.defaults.checkbox.cascade_to_hidden\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tcascade_to_hidden : true\r\n\t};\r\n\t$.jstree.plugins.checkbox = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\t\t\tthis._data.checkbox.uto = false;\r\n\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\tif(this.settings.checkbox.three_state) {\r\n\t\t\t\tthis.settings.checkbox.cascade = 'up+down+undetermined';\r\n\t\t\t}\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"init.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis._data.checkbox.visible = this.settings.checkbox.visible;\r\n\t\t\t\t\t\tif(!this.settings.checkbox.keep_selected_style) {\r\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-no-clicked');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.settings.checkbox.tie_selection) {\r\n\t\t\t\t\t\t\tthis.element.addClass('jstree-checkbox-selection');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"loading.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\tthis[ this._data.checkbox.visible ? 'show_checkboxes' : 'hide_checkboxes' ]();\r\n\t\t\t\t\t}, this));\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('changed.jstree uncheck_node.jstree check_node.jstree uncheck_all.jstree check_all.jstree move_node.jstree copy_node.jstree redraw.jstree open_node.jstree', $.proxy(function () {\r\n\t\t\t\t\t\t\t// only if undetermined is in setting\r\n\t\t\t\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\r\n\t\t\t\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\tp = m[data.parent],\r\n\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\ti, j;\r\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\tm[dpc[i]].state.checked = m[dpc[i]].state.checked || (m[dpc[i]].original && m[dpc[i]].original.state && m[dpc[i]].original.state.checked);\r\n\t\t\t\t\t\t\tif(m[dpc[i]].state.checked) {\r\n\t\t\t\t\t\t\t\tthis._data.checkbox.selected.push(dpc[i]);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1 || this.settings.checkbox.cascade.indexOf('down') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\t\tp = m[data.parent],\r\n\t\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\t\tchd = [],\r\n\t\t\t\t\t\t\t\tc, i, j, k, l, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection;\r\n\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tm[dpc[i]].state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(dpc);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tif(m[dpc[i]].state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\t\tfor(k = 0, l = m[dpc[i]].children_d.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tm[m[dpc[i]].children_d[k]].state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = this._data[ t ? 'core' : 'checkbox' ].selected.concat(m[dpc[i]].children_d);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\r\n\t\t\t\t\t\t\t\t// apply up\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tif(!m[p.children_d[i]].children.length) {\r\n\t\t\t\t\t\t\t\t\t\tchd.push(m[p.children_d[i]].parent);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tchd = $.vakata.array_unique(chd);\r\n\t\t\t\t\t\t\t\tfor(k = 0, l = chd.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\tp = m[chd[k]];\r\n\t\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass( t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected);\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'select_node.jstree' : 'check_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar self = this,\r\n\t\t\t\t\t\t\t\tobj = data.node,\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\tpar = this.get_node(obj.parent),\r\n\t\t\t\t\t\t\t\ti, j, c, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\r\n\t\t\t\t\t\t\t\tsel = {}, cur = this._data[ t ? 'core' : 'checkbox' ].selected;\r\n\r\n\t\t\t\t\t\t\tfor (i = 0, j = cur.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tsel[cur[i]] = true;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_unique(this._data[ t ? 'core' : 'checkbox' ].selected.concat(obj.children_d));\r\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, true);\r\n\t\t\t\t\t\t\t\tvar temp = obj.children_d.concat(obj.id);\r\n\t\t\t\t\t\t\t\tfor (i = 0, j = temp.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tif (selectedIds.indexOf(temp[i]) > -1) {\r\n\t\t\t\t\t\t\t\t\t\tsel[temp[i]] = true;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tdelete sel[temp[i]];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// apply up\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1) {\r\n\t\t\t\t\t\t\t\twhile(par && par.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tc += m[par.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\t\tpar.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tsel[par.id] = true;\r\n\t\t\t\t\t\t\t\t\t\t//this._data[ t ? 'core' : 'checkbox' ].selected.push(par.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(par, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tpar = this.get_node(par.parent);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcur = [];\r\n\t\t\t\t\t\t\tfor (i in sel) {\r\n\t\t\t\t\t\t\t\tif (sel.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\tcur.push(i);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_all.jstree' : 'uncheck_all.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar obj = this.get_node($.jstree.root),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\ti, j, tmp;\r\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\ttmp = m[obj.children_d[i]];\r\n\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\r\n\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on(this.settings.checkbox.tie_selection ? 'deselect_node.jstree' : 'uncheck_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\tvar self = this,\r\n\t\t\t\t\t\t\t\tobj = data.node,\r\n\t\t\t\t\t\t\t\tdom = this.get_node(obj, true),\r\n\t\t\t\t\t\t\t\ti, j, tmp, s = this.settings.checkbox.cascade, t = this.settings.checkbox.tie_selection,\r\n\t\t\t\t\t\t\t\tcur = this._data[ t ? 'core' : 'checkbox' ].selected, sel = {},\r\n\t\t\t\t\t\t\t\tstillSelectedIds = [],\r\n\t\t\t\t\t\t\t\tallIds = obj.children_d.concat(obj.id);\r\n\r\n\t\t\t\t\t\t\t// apply down\r\n\t\t\t\t\t\t\tif(s.indexOf('down') !== -1) {\r\n\t\t\t\t\t\t\t\tvar selectedIds = this._cascade_new_checked_state(obj.id, false);\r\n\r\n\t\t\t\t\t\t\t\tcur = cur.filter(function(id) {\r\n\t\t\t\t\t\t\t\t\treturn allIds.indexOf(id) === -1 || selectedIds.indexOf(id) > -1;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// only apply up if cascade up is enabled and if this node is not selected\r\n\t\t\t\t\t\t\t// (if all child nodes are disabled and cascade_to_disabled === false then this node will till be selected).\r\n\t\t\t\t\t\t\tif(s.indexOf('up') !== -1 && cur.indexOf(obj.id) === -1) {\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = obj.parents.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\ttmp = this._model.data[obj.parents[i]];\r\n\t\t\t\t\t\t\t\t\ttmp.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.original && tmp.original.state && tmp.original.state.undetermined) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.original.state.undetermined = false;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(obj.parents[i], true);\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\tcur = cur.filter(function(id) {\r\n\t\t\t\t\t\t\t\t\treturn obj.parents.indexOf(id) === -1;\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = cur;\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.cascade.indexOf('up') !== -1) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('delete_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\t// apply up (whole handler)\r\n\t\t\t\t\t\t\tvar p = this.get_node(data.parent),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\ti, j, c, tmp, t = this.settings.checkbox.tie_selection;\r\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\r\n\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t.on('move_node.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\t\t// apply up (whole handler)\r\n\t\t\t\t\t\t\tvar is_multi = data.is_multi,\r\n\t\t\t\t\t\t\t\told_par = data.old_parent,\r\n\t\t\t\t\t\t\t\tnew_par = this.get_node(data.parent),\r\n\t\t\t\t\t\t\t\tm = this._model.data,\r\n\t\t\t\t\t\t\t\tp, c, i, j, tmp, t = this.settings.checkbox.tie_selection;\r\n\t\t\t\t\t\t\tif(!is_multi) {\r\n\t\t\t\t\t\t\t\tp = this.get_node(old_par);\r\n\t\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root && !p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif(j > 0 && c === j) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tp = new_par;\r\n\t\t\t\t\t\t\twhile(p && p.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\tc = 0;\r\n\t\t\t\t\t\t\t\tfor(i = 0, j = p.children.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\tc += m[p.children[i]].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(c === j) {\r\n\t\t\t\t\t\t\t\t\tif(!p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = true;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected.push(p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\tif(p.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\t\t\t\t\t\tp.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\t\t\t\t\t\tthis._data[ t ? 'core' : 'checkbox' ].selected = $.vakata.array_remove_item(this._data[ t ? 'core' : 'checkbox' ].selected, p.id);\r\n\t\t\t\t\t\t\t\t\t\ttmp = this.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\t\t\t\ttmp.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tp = this.get_node(p.parent);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all nodes whose state is \"undetermined\"\r\n\t\t * @name get_undetermined([full])\r\n\t\t * @param  {boolean} full: if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_undetermined = function (full) {\r\n\t\t\tif (this.settings.checkbox.cascade.indexOf('undetermined') === -1) {\r\n\t\t\t\treturn [];\r\n\t\t\t}\r\n\t\t\tvar i, j, k, l, o = {}, m = this._model.data, t = this.settings.checkbox.tie_selection, s = this._data[ t ? 'core' : 'checkbox' ].selected, p = [], tt = this, r = [];\r\n\t\t\tfor(i = 0, j = s.length; i < j; i++) {\r\n\t\t\t\tif(m[s[i]] && m[s[i]].parents) {\r\n\t\t\t\t\tfor(k = 0, l = m[s[i]].parents.length; k < l; k++) {\r\n\t\t\t\t\t\tif(o[m[s[i]].parents[k]] !== undefined) {\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(m[s[i]].parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\to[m[s[i]].parents[k]] = true;\r\n\t\t\t\t\t\t\tp.push(m[s[i]].parents[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// attempt for server side undetermined state\r\n\t\t\tthis.element.find('.jstree-closed').not(':has(.jstree-children)')\r\n\t\t\t\t.each(function () {\r\n\t\t\t\t\tvar tmp = tt.get_node(this), tmp2;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!tmp) { return; }\r\n\t\t\t\t\t\r\n\t\t\t\t\tif(!tmp.state.loaded) {\r\n\t\t\t\t\t\tif(tmp.original && tmp.original.state && tmp.original.state.undetermined && tmp.original.state.undetermined === true) {\r\n\t\t\t\t\t\t\tif(o[tmp.id] === undefined && tmp.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\to[tmp.id] = true;\r\n\t\t\t\t\t\t\t\tp.push(tmp.id);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor(k = 0, l = tmp.parents.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\tif(o[tmp.parents[k]] === undefined && tmp.parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\to[tmp.parents[k]] = true;\r\n\t\t\t\t\t\t\t\t\tp.push(tmp.parents[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\tfor(i = 0, j = tmp.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp2 = m[tmp.children_d[i]];\r\n\t\t\t\t\t\t\tif(!tmp2.state.loaded && tmp2.original && tmp2.original.state && tmp2.original.state.undetermined && tmp2.original.state.undetermined === true) {\r\n\t\t\t\t\t\t\t\tif(o[tmp2.id] === undefined && tmp2.id !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\to[tmp2.id] = true;\r\n\t\t\t\t\t\t\t\t\tp.push(tmp2.id);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfor(k = 0, l = tmp2.parents.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\tif(o[tmp2.parents[k]] === undefined && tmp2.parents[k] !== $.jstree.root) {\r\n\t\t\t\t\t\t\t\t\t\to[tmp2.parents[k]] = true;\r\n\t\t\t\t\t\t\t\t\t\tp.push(tmp2.parents[k]);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\tif(!m[p[i]].state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\tr.push(full ? m[p[i]] : p[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn r;\r\n\t\t};\r\n\t\t/**\r\n\t\t * set the undetermined state where and if necessary. Used internally.\r\n\t\t * @private\r\n\t\t * @name _undetermined()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis._undetermined = function () {\r\n\t\t\tif(this.element === null) { return; }\r\n\t\t\tvar p = this.get_undetermined(false), i, j, s;\r\n\r\n\t\t\tthis.element.find('.jstree-undetermined').removeClass('jstree-undetermined');\r\n\t\t\tfor (i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\ts = this.get_node(p[i], true);\r\n\t\t\t\tif(s && s.length) {\r\n\t\t\t\t\ts.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-undetermined');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.redraw_node = function(obj, deep, is_callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tvar i, j, tmp = null, icon = null;\r\n\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(tmp) {\r\n\t\t\t\t\tif(!this.settings.checkbox.tie_selection && this._model.data[obj.id].state.checked) { tmp.className += ' jstree-checked'; }\r\n\t\t\t\t\ticon = _i.cloneNode(false);\r\n\t\t\t\t\tif(this._model.data[obj.id].state.checkbox_disabled) { icon.className += ' jstree-checkbox-disabled'; }\r\n\t\t\t\t\ttmp.insertBefore(icon, tmp.childNodes[0]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!is_callback && this.settings.checkbox.cascade.indexOf('undetermined') !== -1) {\r\n\t\t\t\tif(this._data.checkbox.uto) { clearTimeout(this._data.checkbox.uto); }\r\n\t\t\t\tthis._data.checkbox.uto = setTimeout($.proxy(this._undetermined, this), 50);\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t\t/**\r\n\t\t * show the node checkbox icons\r\n\t\t * @name show_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.show_checkboxes = function () { this._data.core.themes.checkboxes = true; this.get_container_ul().removeClass(\"jstree-no-checkboxes\"); };\r\n\t\t/**\r\n\t\t * hide the node checkbox icons\r\n\t\t * @name hide_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.hide_checkboxes = function () { this._data.core.themes.checkboxes = false; this.get_container_ul().addClass(\"jstree-no-checkboxes\"); };\r\n\t\t/**\r\n\t\t * toggle the node icons\r\n\t\t * @name toggle_checkboxes()\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.toggle_checkboxes = function () { if(this._data.core.themes.checkboxes) { this.hide_checkboxes(); } else { this.show_checkboxes(); } };\r\n\t\t/**\r\n\t\t * checks if a node is in an undetermined state\r\n\t\t * @name is_undetermined(obj)\r\n\t\t * @param  {mixed} obj\r\n\t\t * @return {Boolean}\r\n\t\t */\r\n\t\tthis.is_undetermined = function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tvar s = this.settings.checkbox.cascade, i, j, t = this.settings.checkbox.tie_selection, d = this._data[ t ? 'core' : 'checkbox' ].selected, m = this._model.data;\r\n\t\t\tif(!obj || obj.state[ t ? 'selected' : 'checked' ] === true || s.indexOf('undetermined') === -1 || (s.indexOf('down') === -1 && s.indexOf('up') === -1)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(!obj.state.loaded && obj.original.state.undetermined === true) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\tif($.inArray(obj.children_d[i], d) !== -1 || (!m[obj.children_d[i]].state.loaded && m[obj.children_d[i]].original.state.undetermined)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\t/**\r\n\t\t * disable a node's checkbox\r\n\t\t * @name disable_checkbox(obj)\r\n\t\t * @param {mixed} obj an array can be used too\r\n\t\t * @trigger disable_checkbox.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.disable_checkbox = function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.disable_checkbox(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.checkbox_disabled) {\r\n\t\t\t\tobj.state.checkbox_disabled = true;\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').addClass('jstree-checkbox-disabled');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node's checkbox is disabled\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name disable_checkbox.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('disable_checkbox', { 'node' : obj });\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * enable a node's checkbox\r\n\t\t * @name disable_checkbox(obj)\r\n\t\t * @param {mixed} obj an array can be used too\r\n\t\t * @trigger enable_checkbox.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.enable_checkbox = function (obj) {\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.enable_checkbox(obj[t1]);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.checkbox_disabled) {\r\n\t\t\t\tobj.state.checkbox_disabled = false;\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').children('.jstree-checkbox').removeClass('jstree-checkbox-disabled');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node's checkbox is enabled\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name enable_checkbox.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('enable_checkbox', { 'node' : obj });\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.activate_node = function (obj, e) {\r\n\t\t\tif($(e.target).hasClass('jstree-checkbox-disabled')) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.tie_selection && (this.settings.checkbox.whole_node || $(e.target).hasClass('jstree-checkbox'))) {\r\n\t\t\t\te.ctrlKey = true;\r\n\t\t\t}\r\n\t\t\tif(this.settings.checkbox.tie_selection || (!this.settings.checkbox.whole_node && !$(e.target).hasClass('jstree-checkbox'))) {\r\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\r\n\t\t\t}\r\n\t\t\tif(this.is_disabled(obj)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tif(this.is_checked(obj)) {\r\n\t\t\t\tthis.uncheck_node(obj, e);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis.check_node(obj, e);\r\n\t\t\t}\r\n\t\t\tthis.trigger('activate_node', { 'node' : this.get_node(obj) });\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Cascades checked state to a node and all its descendants. This function does NOT affect hidden and disabled nodes (or their descendants).\r\n\t\t * However if these unaffected nodes are already selected their ids will be included in the returned array.\r\n\t\t * @private\r\n\t\t * @param {string} id the node ID\r\n\t\t * @param {bool} checkedState should the nodes be checked or not\r\n\t\t * @returns {Array} Array of all node id's (in this tree branch) that are checked.\r\n\t\t */\r\n\t\tthis._cascade_new_checked_state = function (id, checkedState) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar t = this.settings.checkbox.tie_selection;\r\n\t\t\tvar node = this._model.data[id];\r\n\t\t\tvar selectedNodeIds = [];\r\n\t\t\tvar selectedChildrenIds = [], i, j, selectedChildIds;\r\n\r\n\t\t\tif (\r\n\t\t\t\t(this.settings.checkbox.cascade_to_disabled || !node.state.disabled) &&\r\n\t\t\t\t(this.settings.checkbox.cascade_to_hidden || !node.state.hidden)\r\n\t\t\t) {\r\n\t\t\t\t//First try and check/uncheck the children\r\n\t\t\t\tif (node.children) {\r\n\t\t\t\t\tfor (i = 0, j = node.children.length; i < j; i++) {\r\n\t\t\t\t\t\tvar childId = node.children[i];\r\n\t\t\t\t\t\tselectedChildIds = self._cascade_new_checked_state(childId, checkedState);\r\n\t\t\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\r\n\t\t\t\t\t\tif (selectedChildIds.indexOf(childId) > -1) {\r\n\t\t\t\t\t\t\tselectedChildrenIds.push(childId);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar dom = self.get_node(node, true);\r\n\r\n\t\t\t\t//A node's state is undetermined if some but not all of it's children are checked/selected .\r\n\t\t\t\tvar undetermined = selectedChildrenIds.length > 0 && selectedChildrenIds.length < node.children.length;\r\n\r\n\t\t\t\tif(node.original && node.original.state && node.original.state.undetermined) {\r\n\t\t\t\t\tnode.original.state.undetermined = undetermined;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//If a node is undetermined then remove selected class\r\n\t\t\t\tif (undetermined) {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t//Otherwise, if the checkedState === true (i.e. the node is being checked now) and all of the node's children are checked (if it has any children),\r\n\t\t\t\t//check the node and style it correctly.\r\n\t\t\t\telse if (checkedState && selectedChildrenIds.length === node.children.length) {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = checkedState;\r\n\t\t\t\t\tselectedNodeIds.push(node.id);\r\n\r\n\t\t\t\t\tdom.attr('aria-selected', true).children('.jstree-anchor').addClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnode.state[ t ? 'selected' : 'checked' ] = false;\r\n\t\t\t\t\tdom.attr('aria-selected', false).children('.jstree-anchor').removeClass(t ? 'jstree-clicked' : 'jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tselectedChildIds = this.get_checked_descendants(id);\r\n\r\n\t\t\t\tif (node.state[ t ? 'selected' : 'checked' ]) {\r\n\t\t\t\t\tselectedChildIds.push(node.id);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tselectedNodeIds = selectedNodeIds.concat(selectedChildIds);\r\n\t\t\t}\r\n\r\n\t\t\treturn selectedNodeIds;\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * Gets ids of nodes selected in branch (of tree) specified by id (does not include the node specified by id)\r\n\t\t * @name get_checked_descendants(obj)\r\n\t\t * @param {string} id the node ID\r\n\t\t * @return {Array} array of IDs\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_checked_descendants = function (id) {\r\n\t\t\tvar self = this;\r\n\t\t\tvar t = self.settings.checkbox.tie_selection;\r\n\t\t\tvar node = self._model.data[id];\r\n\r\n\t\t\treturn node.children_d.filter(function(_id) {\r\n\t\t\t\treturn self._model.data[_id].state[ t ? 'selected' : 'checked' ];\r\n\t\t\t});\r\n\t\t};\r\n\r\n\t\t/**\r\n\t\t * check a node (only if tie_selection in checkbox settings is false, otherwise select_node will be called internally)\r\n\t\t * @name check_node(obj)\r\n\t\t * @param {mixed} obj an array can be used to check multiple nodes\r\n\t\t * @trigger check_node.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.check_node = function (obj, e) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_node(obj, false, true, e); }\r\n\t\t\tvar dom, t1, t2, th;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.check_node(obj[t1], e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(!obj.state.checked) {\r\n\t\t\t\tobj.state.checked = true;\r\n\t\t\t\tthis._data.checkbox.selected.push(obj.id);\r\n\t\t\t\tif(dom && dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').addClass('jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is checked (only if tie_selection in checkbox settings is false)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name check_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this check_node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('check_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\r\n\t\t\t}\r\n\t\t};\r\n\t\t/**\r\n\t\t * uncheck a node (only if tie_selection in checkbox settings is false, otherwise deselect_node will be called internally)\r\n\t\t * @name uncheck_node(obj)\r\n\t\t * @param {mixed} obj an array can be used to uncheck multiple nodes\r\n\t\t * @trigger uncheck_node.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.uncheck_node = function (obj, e) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_node(obj, false, e); }\r\n\t\t\tvar t1, t2, dom;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.uncheck_node(obj[t1], e);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tdom = this.get_node(obj, true);\r\n\t\t\tif(obj.state.checked) {\r\n\t\t\t\tobj.state.checked = false;\r\n\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, obj.id);\r\n\t\t\t\tif(dom.length) {\r\n\t\t\t\t\tdom.children('.jstree-anchor').removeClass('jstree-checked');\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when an node is unchecked (only if tie_selection in checkbox settings is false)\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name uncheck_node.jstree\r\n\t\t\t\t * @param {Object} node\r\n\t\t\t\t * @param {Array} selected the current selection\r\n\t\t\t\t * @param {Object} event the event (if any) that triggered this uncheck_node\r\n\t\t\t\t * @plugin checkbox\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('uncheck_node', { 'node' : obj, 'selected' : this._data.checkbox.selected, 'event' : e });\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\t/**\r\n\t\t * checks all nodes in the tree (only if tie_selection in checkbox settings is false, otherwise select_all will be called internally)\r\n\t\t * @name check_all()\r\n\t\t * @trigger check_all.jstree, changed.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.check_all = function () {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.select_all(); }\r\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\r\n\t\t\tthis._data.checkbox.selected = this._model.data[$.jstree.root].children_d.concat();\r\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.redraw(true);\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are checked (only if tie_selection in checkbox settings is false)\r\n\t\t\t * @event\r\n\t\t\t * @name check_all.jstree\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @plugin checkbox\r\n\t\t\t */\r\n\t\t\tthis.trigger('check_all', { 'selected' : this._data.checkbox.selected });\r\n\t\t};\r\n\t\t/**\r\n\t\t * uncheck all checked nodes (only if tie_selection in checkbox settings is false, otherwise deselect_all will be called internally)\r\n\t\t * @name uncheck_all()\r\n\t\t * @trigger uncheck_all.jstree\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.uncheck_all = function () {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.deselect_all(); }\r\n\t\t\tvar tmp = this._data.checkbox.selected.concat([]), i, j;\r\n\t\t\tfor(i = 0, j = this._data.checkbox.selected.length; i < j; i++) {\r\n\t\t\t\tif(this._model.data[this._data.checkbox.selected[i]]) {\r\n\t\t\t\t\tthis._model.data[this._data.checkbox.selected[i]].state.checked = false;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\tthis.element.find('.jstree-checked').removeClass('jstree-checked');\r\n\t\t\t/**\r\n\t\t\t * triggered when all nodes are unchecked (only if tie_selection in checkbox settings is false)\r\n\t\t\t * @event\r\n\t\t\t * @name uncheck_all.jstree\r\n\t\t\t * @param {Object} node the previous selection\r\n\t\t\t * @param {Array} selected the current selection\r\n\t\t\t * @plugin checkbox\r\n\t\t\t */\r\n\t\t\tthis.trigger('uncheck_all', { 'selected' : this._data.checkbox.selected, 'node' : tmp });\r\n\t\t};\r\n\t\t/**\r\n\t\t * checks if a node is checked (if tie_selection is on in the settings this function will return the same as is_selected)\r\n\t\t * @name is_checked(obj)\r\n\t\t * @param  {mixed}  obj\r\n\t\t * @return {Boolean}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.is_checked = function (obj) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.is_selected(obj); }\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj || obj.id === $.jstree.root) { return false; }\r\n\t\t\treturn obj.state.checked;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all checked nodes (if tie_selection is on in the settings this function will return the same as get_selected)\r\n\t\t * @name get_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_selected(full); }\r\n\t\t\treturn full ? $.map(this._data.checkbox.selected, $.proxy(function (i) { return this.get_node(i); }, this)) : this._data.checkbox.selected;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all top level checked nodes (ignoring children of checked nodes) (if tie_selection is on in the settings this function will return the same as get_top_selected)\r\n\t\t * @name get_top_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_top_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_top_selected(full); }\r\n\t\t\tvar tmp = this.get_checked(true),\r\n\t\t\t\tobj = {}, i, j, k, l;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tobj[tmp[i].id] = tmp[i];\r\n\t\t\t}\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tfor(k = 0, l = tmp[i].children_d.length; k < l; k++) {\r\n\t\t\t\t\tif(obj[tmp[i].children_d[k]]) {\r\n\t\t\t\t\t\tdelete obj[tmp[i].children_d[k]];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\ttmp = [];\r\n\t\t\tfor(i in obj) {\r\n\t\t\t\tif(obj.hasOwnProperty(i)) {\r\n\t\t\t\t\ttmp.push(i);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(tmp, $.proxy(function (i) { return this.get_node(i); }, this)) : tmp;\r\n\t\t};\r\n\t\t/**\r\n\t\t * get an array of all bottom level checked nodes (ignoring selected parents) (if tie_selection is on in the settings this function will return the same as get_bottom_selected)\r\n\t\t * @name get_bottom_checked([full])\r\n\t\t * @param  {mixed}  full if set to `true` the returned array will consist of the full node objects, otherwise - only IDs will be returned\r\n\t\t * @return {Array}\r\n\t\t * @plugin checkbox\r\n\t\t */\r\n\t\tthis.get_bottom_checked = function (full) {\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return this.get_bottom_selected(full); }\r\n\t\t\tvar tmp = this.get_checked(true),\r\n\t\t\t\tobj = [], i, j;\r\n\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\tif(!tmp[i].children.length) {\r\n\t\t\t\t\tobj.push(tmp[i].id);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn full ? $.map(obj, $.proxy(function (i) { return this.get_node(i); }, this)) : obj;\r\n\t\t};\r\n\t\tthis.load_node = function (obj, callback) {\r\n\t\t\tvar k, l, i, j, c, tmp;\r\n\t\t\tif(!$.isArray(obj) && !this.settings.checkbox.tie_selection) {\r\n\t\t\t\ttmp = this.get_node(obj);\r\n\t\t\t\tif(tmp && tmp.state.loaded) {\r\n\t\t\t\t\tfor(k = 0, l = tmp.children_d.length; k < l; k++) {\r\n\t\t\t\t\t\tif(this._model.data[tmp.children_d[k]].state.checked) {\r\n\t\t\t\t\t\t\tc = true;\r\n\t\t\t\t\t\t\tthis._data.checkbox.selected = $.vakata.array_remove_item(this._data.checkbox.selected, tmp.children_d[k]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn parent.load_node.apply(this, arguments);\r\n\t\t};\r\n\t\tthis.get_state = function () {\r\n\t\t\tvar state = parent.get_state.apply(this, arguments);\r\n\t\t\tif(this.settings.checkbox.tie_selection) { return state; }\r\n\t\t\tstate.checkbox = this._data.checkbox.selected.slice();\r\n\t\t\treturn state;\r\n\t\t};\r\n\t\tthis.set_state = function (state, callback) {\r\n\t\t\tvar res = parent.set_state.apply(this, arguments);\r\n\t\t\tif(res && state.checkbox) {\r\n\t\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\t\tthis.uncheck_all();\r\n\t\t\t\t\tvar _this = this;\r\n\t\t\t\t\t$.each(state.checkbox, function (i, v) {\r\n\t\t\t\t\t\t_this.check_node(v);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\tdelete state.checkbox;\r\n\t\t\t\tthis.set_state(state, callback);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t};\r\n\t\tthis.refresh = function (skip_loading, forget_state) {\r\n\t\t\tif(!this.settings.checkbox.tie_selection) {\r\n\t\t\t\tthis._data.checkbox.selected = [];\r\n\t\t\t}\r\n\t\t\treturn parent.refresh.apply(this, arguments);\r\n\t\t};\r\n\t};\r\n\r\n\t// include the checkbox plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"checkbox\");\r\n\r\n\treturn $;\r\n});\r\n\ndefine('skylark-utils-dom/browser',[\r\n    \"./dom\",\r\n    \"skylark-domx-browser\"\r\n], function(dom,browser) {\r\n    \"use strict\";\r\n\r\n    return dom.browser = browser;\r\n});\r\n\ndefine('skylark-utils-dom/eventer',[\r\n    \"./dom\",\r\n    \"skylark-domx-eventer\"\r\n], function(dom, eventer) {\r\n \r\n    return dom.eventer = eventer;\r\n});\ndefine('skylark-utils-dom/noder',[\r\n    \"./dom\",\r\n    \"skylark-domx-noder\"\r\n], function(dom, noder) {\r\n\r\n    return dom.noder = noder;\r\n});\ndefine('skylark-utils-dom/geom',[\r\n    \"./dom\",\r\n    \"skylark-domx-geom\"\r\n], function(dom, geom) {\r\n\r\n    return dom.geom = geom;\r\n});\ndefine('skylark-widgets-hierarchy/addons/conditionalselect',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-utils-dom/browser\",\r\n  \"skylark-utils-dom/eventer\",\r\n  \"skylark-utils-dom/noder\",\r\n  \"skylark-utils-dom/geom\",\r\n  \"skylark-utils-dom/query\",\r\n  \"Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.conditionalselect) { return; }\r\n\r\n\t/**\r\n\t * a callback (function) which is invoked in the instance's scope and receives two arguments - the node and the event that triggered the `activate_node` call. Returning false prevents working with the node, returning true allows invoking activate_node. Defaults to returning `true`.\r\n\t * @name $.jstree.defaults.checkbox.visible\r\n\t * @plugin checkbox\r\n\t */\r\n\t$.jstree.defaults.conditionalselect = function () { return true; };\r\n\t$.jstree.plugins.conditionalselect = function (options, parent) {\r\n\t\t// own function\r\n\t\tthis.activate_node = function (obj, e) {\r\n\t\t\tif(this.settings.conditionalselect.call(this, this.get_node(obj), e)) {\r\n\t\t\t\treturn parent.activate_node.call(this, obj, e);\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\treturn $;\r\n});\ndefine([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    define([\n        'skylark-langx/langx',\n        'skylark-domx-browser',\n        'skylark-domx-eventer',\n        'skylark-domx-noder',\n        'skylark-domx-geom',\n        'skylark-domx-query',\n        './menu',\n        'Hierarchy'\n    ], function (langx, browser, eventer, noder, geom, $, menu, jstree) {\n        if ($.jstree.plugins.contextmenu) {\n            return;\n        }\n        $.jstree.defaults.contextmenu = {\n            select_node: true,\n            show_at_node: true,\n            items: function (o, cb) {\n                return {\n                    'create': {\n                        'separator_before': false,\n                        'separator_after': true,\n                        '_disabled': false,\n                        'label': 'Create',\n                        'action': function (data) {\n                            var inst = $.jstree.reference(data.reference), obj = inst.get_node(data.reference);\n                            inst.create_node(obj, {}, 'last', function (new_node) {\n                                try {\n                                    inst.edit(new_node);\n                                } catch (ex) {\n                                    setTimeout(function () {\n                                        inst.edit(new_node);\n                                    }, 0);\n                                }\n                            });\n                        }\n                    },\n                    'rename': {\n                        'separator_before': false,\n                        'separator_after': false,\n                        '_disabled': false,\n                        'label': 'Rename',\n                        'action': function (data) {\n                            var inst = $.jstree.reference(data.reference), obj = inst.get_node(data.reference);\n                            inst.edit(obj);\n                        }\n                    },\n                    'remove': {\n                        'separator_before': false,\n                        'icon': false,\n                        'separator_after': false,\n                        '_disabled': false,\n                        'label': 'Delete',\n                        'action': function (data) {\n                            var inst = $.jstree.reference(data.reference), obj = inst.get_node(data.reference);\n                            if (inst.is_selected(obj)) {\n                                inst.delete_node(inst.get_selected());\n                            } else {\n                                inst.delete_node(obj);\n                            }\n                        }\n                    },\n                    'ccp': {\n                        'separator_before': true,\n                        'icon': false,\n                        'separator_after': false,\n                        'label': 'Edit',\n                        'action': false,\n                        'submenu': {\n                            'cut': {\n                                'separator_before': false,\n                                'separator_after': false,\n                                'label': 'Cut',\n                                'action': function (data) {\n                                    var inst = $.jstree.reference(data.reference), obj = inst.get_node(data.reference);\n                                    if (inst.is_selected(obj)) {\n                                        inst.cut(inst.get_top_selected());\n                                    } else {\n                                        inst.cut(obj);\n                                    }\n                                }\n                            },\n                            'copy': {\n                                'separator_before': false,\n                                'icon': false,\n                                'separator_after': false,\n                                'label': 'Copy',\n                                'action': function (data) {\n                                    var inst = $.jstree.reference(data.reference), obj = inst.get_node(data.reference);\n                                    if (inst.is_selected(obj)) {\n                                        inst.copy(inst.get_top_selected());\n                                    } else {\n                                        inst.copy(obj);\n                                    }\n                                }\n                            },\n                            'paste': {\n                                'separator_before': false,\n                                'icon': false,\n                                '_disabled': function (data) {\n                                    return !$.jstree.reference(data.reference).can_paste();\n                                },\n                                'separator_after': false,\n                                'label': 'Paste',\n                                'action': function (data) {\n                                    var inst = $.jstree.reference(data.reference), obj = inst.get_node(data.reference);\n                                    inst.paste(obj);\n                                }\n                            }\n                        }\n                    }\n                };\n            }\n        };\n        $.jstree.plugins.contextmenu = function (options, parent) {\n            this.bind = function () {\n                parent.bind.call(this);\n                var last_ts = 0, cto = null, ex, ey;\n                this.element.on('init.jstree loading.jstree ready.jstree', $.proxy(function () {\n                    this.get_container_ul().addClass('jstree-contextmenu');\n                }, this)).on('contextmenu.jstree', '.jstree-anchor', $.proxy(function (e, data) {\n                    if (e.target.tagName.toLowerCase() === 'input') {\n                        return;\n                    }\n                    e.preventDefault();\n                    last_ts = e.ctrlKey ? +new Date() : 0;\n                    if (data || cto) {\n                        last_ts = +new Date() + 10000;\n                    }\n                    if (cto) {\n                        clearTimeout(cto);\n                    }\n                    if (!this.is_loading(e.currentTarget)) {\n                        this.show_contextmenu(e.currentTarget, e.pageX, e.pageY, e);\n                    }\n                }, this)).on('click.jstree', '.jstree-anchor', $.proxy(function (e) {\n                    if (this._data.contextmenu.visible && (!last_ts || +new Date() - last_ts > 250)) {\n                        menu.hide();\n                    }\n                    last_ts = 0;\n                }, this)).on('touchstart.jstree', '.jstree-anchor', function (e) {\n                    if (!e.originalEvent || !e.originalEvent.changedTouches || !e.originalEvent.changedTouches[0]) {\n                        return;\n                    }\n                    ex = e.originalEvent.changedTouches[0].clientX;\n                    ey = e.originalEvent.changedTouches[0].clientY;\n                    cto = setTimeout(function () {\n                        $(e.currentTarget).trigger('contextmenu', true);\n                    }, 750);\n                }).on('touchmove.vakata.jstree', function (e) {\n                    if (cto && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0] && (Math.abs(ex - e.originalEvent.changedTouches[0].clientX) > 10 || Math.abs(ey - e.originalEvent.changedTouches[0].clientY) > 10)) {\n                        clearTimeout(cto);\n                        menu.hide();\n                    }\n                }).on('touchend.vakata.jstree', function (e) {\n                    if (cto) {\n                        clearTimeout(cto);\n                    }\n                });\n                $(document).on('context_hide.sbswt.popup', $.proxy(function (e, data) {\n                    this._data.contextmenu.visible = false;\n                    $(data.reference).removeClass('jstree-context');\n                }, this));\n            };\n            this.teardown = function () {\n                if (this._data.contextmenu.visible) {\n                    menu.hide();\n                }\n                parent.teardown.call(this);\n            };\n            this.show_contextmenu = function (obj, x, y, e) {\n                obj = this.get_node(obj);\n                if (!obj || obj.id === $.jstree.root) {\n                    return false;\n                }\n                var s = this.settings.contextmenu, d = this.get_node(obj, true), a = d.children('.jstree-anchor'), o = false, i = false;\n                if (s.show_at_node || x === undefined || y === undefined) {\n                    o = a.offset();\n                    x = o.left;\n                    y = o.top + this._data.core.li_height;\n                }\n                if (this.settings.contextmenu.select_node && !this.is_selected(obj)) {\n                    this.activate_node(obj, e);\n                }\n                i = s.items;\n                if ($.isFunction(i)) {\n                    i = i.call(this, obj, $.proxy(function (i) {\n                        this._show_contextmenu(obj, x, y, i);\n                    }, this));\n                }\n                if ($.isPlainObject(i)) {\n                    this._show_contextmenu(obj, x, y, i);\n                }\n            };\n            this._show_contextmenu = function (obj, x, y, i) {\n                var d = this.get_node(obj, true), a = d.children('.jstree-anchor');\n                $(document).one('context_show.sbswt.popup', $.proxy(function (e, data) {\n                    var cls = 'jstree-contextmenu jstree-' + this.get_theme() + '-contextmenu';\n                    $(data.element).addClass(cls);\n                    a.addClass('jstree-context');\n                }, this));\n                this._data.contextmenu.visible = true;\n                menu.popup(a, {\n                    'x': x,\n                    'y': y\n                }, i);\n                this.trigger('show_contextmenu', {\n                    'node': obj,\n                    'x': x,\n                    'y': y\n                });\n            };\n        };\n        return $;\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine(\"skylark-widgets-hierarchy/addons/contextmenu\", function(){});\n\ndefine('skylark-widgets-hierarchy/addons/dnd',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.dnd) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the drag'n'drop plugin\r\n\t * @name $.jstree.defaults.dnd\r\n\t * @plugin dnd\r\n\t */\r\n\t$.jstree.defaults.dnd = {\r\n\t\t/**\r\n\t\t * a boolean indicating if a copy should be possible while dragging (by pressint the meta key or Ctrl). Defaults to `true`.\r\n\t\t * @name $.jstree.defaults.dnd.copy\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tcopy : true,\r\n\t\t/**\r\n\t\t * a number indicating how long a node should remain hovered while dragging to be opened. Defaults to `500`.\r\n\t\t * @name $.jstree.defaults.dnd.open_timeout\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\topen_timeout : 500,\r\n\t\t/**\r\n\t\t * a function invoked each time a node is about to be dragged, invoked in the tree's scope and receives the nodes about to be dragged as an argument (array) and the event that started the drag - return `false` to prevent dragging\r\n\t\t * @name $.jstree.defaults.dnd.is_draggable\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tis_draggable : true,\r\n\t\t/**\r\n\t\t * a boolean indicating if checks should constantly be made while the user is dragging the node (as opposed to checking only on drop), default is `true`\r\n\t\t * @name $.jstree.defaults.dnd.check_while_dragging\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tcheck_while_dragging : true,\r\n\t\t/**\r\n\t\t * a boolean indicating if nodes from this tree should only be copied with dnd (as opposed to moved), default is `false`\r\n\t\t * @name $.jstree.defaults.dnd.always_copy\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\talways_copy : false,\r\n\t\t/**\r\n\t\t * when dropping a node \"inside\", this setting indicates the position the node should go to - it can be an integer or a string: \"first\" (same as 0) or \"last\", default is `0`\r\n\t\t * @name $.jstree.defaults.dnd.inside_pos\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tinside_pos : 0,\r\n\t\t/**\r\n\t\t * when starting the drag on a node that is selected this setting controls if all selected nodes are dragged or only the single node, default is `true`, which means all selected nodes are dragged when the drag is started on a selected node\r\n\t\t * @name $.jstree.defaults.dnd.drag_selection\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tdrag_selection : true,\r\n\t\t/**\r\n\t\t * controls whether dnd works on touch devices. If left as boolean true dnd will work the same as in desktop browsers, which in some cases may impair scrolling. If set to boolean false dnd will not work on touch devices. There is a special third option - string \"selected\" which means only selected nodes can be dragged on touch devices.\r\n\t\t * @name $.jstree.defaults.dnd.touch\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\ttouch : true,\r\n\t\t/**\r\n\t\t * controls whether items can be dropped anywhere on the node, not just on the anchor, by default only the node anchor is a valid drop target. Works best with the wholerow plugin. If enabled on mobile depending on the interface it might be hard for the user to cancel the drop, since the whole tree container will be a valid drop target.\r\n\t\t * @name $.jstree.defaults.dnd.large_drop_target\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tlarge_drop_target : false,\r\n\t\t/**\r\n\t\t * controls whether a drag can be initiated from any part of the node and not just the text/icon part, works best with the wholerow plugin. Keep in mind it can cause problems with tree scrolling on mobile depending on the interface - in that case set the touch option to \"selected\".\r\n\t\t * @name $.jstree.defaults.dnd.large_drag_target\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tlarge_drag_target : false,\r\n\t\t/**\r\n\t\t * controls whether use HTML5 dnd api instead of classical. That will allow better integration of dnd events with other HTML5 controls.\r\n\t\t * @reference http://caniuse.com/#feat=dragndrop\r\n\t\t * @name $.jstree.defaults.dnd.use_html5\r\n\t\t * @plugin dnd\r\n\t\t */\r\n\t\tuse_html5: false\r\n\t};\r\n\tvar drg, elm;\r\n\t// TODO: now check works by checking for each node individually, how about max_children, unique, etc?\r\n\t$.jstree.plugins.dnd = function (options, parent) {\r\n\t\tthis.init = function (el, options) {\r\n\t\t\tparent.init.call(this, el, options);\r\n\t\t\tthis.settings.dnd.use_html5 = this.settings.dnd.use_html5 && ('draggable' in document.createElement('span'));\r\n\t\t};\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tthis.element\r\n\t\t\t\t.on(this.settings.dnd.use_html5 ? 'dragstart.jstree' : 'mousedown.jstree touchstart.jstree', this.settings.dnd.large_drag_target ? '.jstree-node' : '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t\tif(this.settings.dnd.large_drag_target && $(e.target).closest('.jstree-node')[0] !== e.currentTarget) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(e.type === \"touchstart\" && (!this.settings.dnd.touch || (this.settings.dnd.touch === 'selected' && !$(e.currentTarget).closest('.jstree-node').children('.jstree-anchor').hasClass('jstree-clicked')))) {\r\n\t\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar obj = this.get_node(e.target),\r\n\t\t\t\t\t\t\tmlt = this.is_selected(obj) && this.settings.dnd.drag_selection ? this.get_top_selected().length : 1,\r\n\t\t\t\t\t\t\ttxt = (mlt > 1 ? mlt + ' ' + this.get_string('nodes') : this.get_text(e.currentTarget));\r\n\t\t\t\t\t\tif(this.settings.core.force_text) {\r\n\t\t\t\t\t\t\ttxt = $.vakata.html.escape(txt);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(obj && obj.id && obj.id !== $.jstree.root && (e.which === 1 || e.type === \"touchstart\" || e.type === \"dragstart\") &&\r\n\t\t\t\t\t\t\t(this.settings.dnd.is_draggable === true || ($.isFunction(this.settings.dnd.is_draggable) && this.settings.dnd.is_draggable.call(this, (mlt > 1 ? this.get_top_selected(true) : [obj]), e)))\r\n\t\t\t\t\t\t) {\r\n\t\t\t\t\t\t\tdrg = { 'jstree' : true, 'origin' : this, 'obj' : this.get_node(obj,true), 'nodes' : mlt > 1 ? this.get_top_selected() : [obj.id] };\r\n\t\t\t\t\t\t\telm = e.currentTarget;\r\n\t\t\t\t\t\t\tif (this.settings.dnd.use_html5) {\r\n\t\t\t\t\t\t\t\t$.vakata.dnd._trigger('start', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tthis.element.trigger('mousedown.jstree');\r\n\t\t\t\t\t\t\t\treturn $.vakata.dnd.start(e, drg, '<div id=\"jstree-dnd\" class=\"jstree-' + this.get_theme() + ' jstree-' + this.get_theme() + '-' + this.get_theme_variant() + ' ' + ( this.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ) + '\"><i class=\"jstree-icon jstree-er\"></i>' + txt + '<ins class=\"jstree-copy\" style=\"display:none;\">+</ins></div>');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t\tif (this.settings.dnd.use_html5) {\r\n\t\t\t\tthis.element\r\n\t\t\t\t\t.on('dragover.jstree', function (e) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('move', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t//.on('dragenter.jstree', this.settings.dnd.large_drop_target ? '.jstree-node' : '.jstree-anchor', $.proxy(function (e) {\r\n\t\t\t\t\t//\t\te.preventDefault();\r\n\t\t\t\t\t//\t\t$.vakata.dnd._trigger('move', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t//\t\treturn false;\r\n\t\t\t\t\t//\t}, this))\r\n\t\t\t\t\t.on('drop.jstree', $.proxy(function (e) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('stop', e, { 'helper': $(), 'element': elm, 'data': drg });\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t}\r\n\t\t};\r\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif (obj && this.settings.dnd.use_html5) {\r\n\t\t\t\tif (this.settings.dnd.large_drag_target) {\r\n\t\t\t\t\tobj.setAttribute('draggable', true);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar i, j, tmp = null;\r\n\t\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\ttmp.setAttribute('draggable', true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t};\r\n\r\n\t$(function() {\r\n\t\t// bind only once for all instances\r\n\t\tvar lastmv = false,\r\n\t\t\tlaster = false,\r\n\t\t\tlastev = false,\r\n\t\t\topento = false,\r\n\t\t\tmarker = $('<div id=\"jstree-marker\">&#160;</div>').hide(); //.appendTo('body');\r\n\r\n\t\t$(document)\r\n\t\t\t.on('dnd_start.vakata.jstree', function (e, data) {\r\n\t\t\t\tlastmv = false;\r\n\t\t\t\tlastev = false;\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\t\t\t\tmarker.appendTo(document.body); //.show();\r\n\t\t\t})\r\n\t\t\t.on('dnd_move.vakata.jstree', function (e, data) {\r\n\t\t\t\tvar isDifferentNode = data.event.target !== lastev.target;\r\n\t\t\t\tif(opento) {\r\n\t\t\t\t\tif (!data.event || data.event.type !== 'dragover' || isDifferentNode) {\r\n\t\t\t\t\t\tclearTimeout(opento);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\r\n\t\t\t\t// if we are hovering the marker image do nothing (can happen on \"inside\" drags)\r\n\t\t\t\tif(data.event.target.id && data.event.target.id === 'jstree-marker') {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tlastev = data.event;\r\n\r\n\t\t\t\tvar ins = $.jstree.reference(data.event.target),\r\n\t\t\t\t\tref = false,\r\n\t\t\t\t\toff = false,\r\n\t\t\t\t\trel = false,\r\n\t\t\t\t\ttmp, l, t, h, p, i, o, ok, t1, t2, op, ps, pr, ip, tm, is_copy, pn;\r\n\t\t\t\t// if we are over an instance\r\n\t\t\t\tif(ins && ins._data && ins._data.dnd) {\r\n\t\t\t\t\tmarker.attr('class', 'jstree-' + ins.get_theme() + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ));\r\n\t\t\t\t\tis_copy = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)));\r\n\t\t\t\t\tdata.helper\r\n\t\t\t\t\t\t.children().attr('class', 'jstree-' + ins.get_theme() + ' jstree-' + ins.get_theme() + '-' + ins.get_theme_variant() + ' ' + ( ins.settings.core.themes.responsive ? ' jstree-dnd-responsive' : '' ))\r\n\t\t\t\t\t\t.find('.jstree-copy').first()[ is_copy ? 'show' : 'hide' ]();\r\n\r\n\t\t\t\t\t// if are hovering the container itself add a new root node\r\n\t\t\t\t\t//console.log(data.event);\r\n\t\t\t\t\tif( (data.event.target === ins.element[0] || data.event.target === ins.get_container_ul()[0]) && ins.get_container_ul().children().length === 0) {\r\n\t\t\t\t\t\tok = true;\r\n\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\t\tok = ok && ins.check( (data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey)) ) ? \"copy_node\" : \"move_node\"), (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), $.jstree.root, 'last', { 'dnd' : true, 'ref' : ins.get_node($.jstree.root), 'pos' : 'i', 'origin' : data.data.origin, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) });\r\n\t\t\t\t\t\t\tif(!ok) { break; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(ok) {\r\n\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : $.jstree.root, 'pos' : 'last' };\r\n\t\t\t\t\t\t\tmarker.hide();\r\n\t\t\t\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-er').addClass('jstree-ok');\r\n\t\t\t\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\r\n\t\t\t\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = is_copy ? 'copy' : 'move';\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse {\r\n\t\t\t\t\t\t// if we are hovering a tree node\r\n\t\t\t\t\t\tref = ins.settings.dnd.large_drop_target ? $(data.event.target).closest('.jstree-node').children('.jstree-anchor') : $(data.event.target).closest('.jstree-anchor');\r\n\t\t\t\t\t\tif(ref && ref.length && ref.parent().is('.jstree-closed, .jstree-open, .jstree-leaf')) {\r\n\t\t\t\t\t\t\toff = ref.offset();\r\n\t\t\t\t\t\t\trel = (data.event.pageY !== undefined ? data.event.pageY : data.event.originalEvent.pageY) - off.top;\r\n\t\t\t\t\t\t\th = ref.outerHeight();\r\n\t\t\t\t\t\t\tif(rel < h / 3) {\r\n\t\t\t\t\t\t\t\to = ['b', 'i', 'a'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse if(rel > h - h / 3) {\r\n\t\t\t\t\t\t\t\to = ['a', 'i', 'b'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\to = rel > h / 2 ? ['i', 'a', 'b'] : ['i', 'b', 'a'];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t$.each(o, function (j, v) {\r\n\t\t\t\t\t\t\t\tswitch(v) {\r\n\t\t\t\t\t\t\t\t\tcase 'b':\r\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\r\n\t\t\t\t\t\t\t\t\t\tt = off.top;\r\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\r\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index();\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'i':\r\n\t\t\t\t\t\t\t\t\t\tip = ins.settings.dnd.inside_pos;\r\n\t\t\t\t\t\t\t\t\t\ttm = ins.get_node(ref.parent());\r\n\t\t\t\t\t\t\t\t\t\tl = off.left - 2;\r\n\t\t\t\t\t\t\t\t\t\tt = off.top + h / 2 + 1;\r\n\t\t\t\t\t\t\t\t\t\tp = tm.id;\r\n\t\t\t\t\t\t\t\t\t\ti = ip === 'first' ? 0 : (ip === 'last' ? tm.children.length : Math.min(ip, tm.children.length));\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\tcase 'a':\r\n\t\t\t\t\t\t\t\t\t\tl = off.left - 6;\r\n\t\t\t\t\t\t\t\t\t\tt = off.top + h;\r\n\t\t\t\t\t\t\t\t\t\tp = ins.get_parent(ref);\r\n\t\t\t\t\t\t\t\t\t\ti = ref.parent().index() + 1;\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tok = true;\r\n\t\t\t\t\t\t\t\tfor(t1 = 0, t2 = data.data.nodes.length; t1 < t2; t1++) {\r\n\t\t\t\t\t\t\t\t\top = data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? \"copy_node\" : \"move_node\";\r\n\t\t\t\t\t\t\t\t\tps = i;\r\n\t\t\t\t\t\t\t\t\tif(op === \"move_node\" && v === 'a' && (data.data.origin && data.data.origin === ins) && p === ins.get_parent(data.data.nodes[t1])) {\r\n\t\t\t\t\t\t\t\t\t\tpr = ins.get_node(p);\r\n\t\t\t\t\t\t\t\t\t\tif(ps > $.inArray(data.data.nodes[t1], pr.children)) {\r\n\t\t\t\t\t\t\t\t\t\t\tps -= 1;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tok = ok && ( (ins && ins.settings && ins.settings.dnd && ins.settings.dnd.check_while_dragging === false) || ins.check(op, (data.data.origin && data.data.origin !== ins ? data.data.origin.get_node(data.data.nodes[t1]) : data.data.nodes[t1]), p, ps, { 'dnd' : true, 'ref' : ins.get_node(ref.parent()), 'pos' : v, 'origin' : data.data.origin, 'is_multi' : (data.data.origin && data.data.origin !== ins), 'is_foreign' : (!data.data.origin) }) );\r\n\t\t\t\t\t\t\t\t\tif(!ok) {\r\n\t\t\t\t\t\t\t\t\t\tif(ins && ins.last_error) { laster = ins.last_error(); }\r\n\t\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(v === 'i' && ref.parent().is('.jstree-closed') && ins.settings.dnd.open_timeout) {\r\n\t\t\t\t\t\t\t\t\tif (!data.event || data.event.type !== 'dragover' || isDifferentNode) {\r\n\t\t\t\t\t\t\t\t\t\tif (opento) { clearTimeout(opento); }\r\n\t\t\t\t\t\t\t\t\t\topento = setTimeout((function (x, z) { return function () { x.open_node(z); }; }(ins, ref)), ins.settings.dnd.open_timeout);\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(ok) {\r\n\t\t\t\t\t\t\t\t\tpn = ins.get_node(p, true);\r\n\t\t\t\t\t\t\t\t\tif (!pn.hasClass('.jstree-dnd-parent')) {\r\n\t\t\t\t\t\t\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\r\n\t\t\t\t\t\t\t\t\t\tpn.addClass('jstree-dnd-parent');\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlastmv = { 'ins' : ins, 'par' : p, 'pos' : v === 'i' && ip === 'last' && i === 0 && !ins.is_loaded(tm) ? 'last' : i };\r\n\t\t\t\t\t\t\t\t\tmarker.css({ 'left' : l + 'px', 'top' : t + 'px' }).show();\r\n\t\t\t\t\t\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-er').addClass('jstree-ok');\r\n\t\t\t\t\t\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\r\n\t\t\t\t\t\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = is_copy ? 'copy' : 'move';\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tlaster = {};\r\n\t\t\t\t\t\t\t\t\to = true;\r\n\t\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\tif(o === true) { return; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\r\n\t\t\t\tlastmv = false;\r\n\t\t\t\tdata.helper.find('.jstree-icon').removeClass('jstree-ok').addClass('jstree-er');\r\n\t\t\t\tif (data.event.originalEvent && data.event.originalEvent.dataTransfer) {\r\n\t\t\t\t\tdata.event.originalEvent.dataTransfer.dropEffect = 'none';\r\n\t\t\t\t}\r\n\t\t\t\tmarker.hide();\r\n\t\t\t})\r\n\t\t\t.on('dnd_scroll.vakata.jstree', function (e, data) {\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\t\t\t\tmarker.hide();\r\n\t\t\t\tlastmv = false;\r\n\t\t\t\tlastev = false;\r\n\t\t\t\tdata.helper.find('.jstree-icon').first().removeClass('jstree-ok').addClass('jstree-er');\r\n\t\t\t})\r\n\t\t\t.on('dnd_stop.vakata.jstree', function (e, data) {\r\n\t\t\t\t$('.jstree-dnd-parent').removeClass('jstree-dnd-parent');\r\n\t\t\t\tif(opento) { clearTimeout(opento); }\r\n\t\t\t\tif(!data || !data.data || !data.data.jstree) { return; }\r\n\t\t\t\tmarker.hide().detach();\r\n\t\t\t\tvar i, j, nodes = [];\r\n\t\t\t\tif(lastmv) {\r\n\t\t\t\t\tfor(i = 0, j = data.data.nodes.length; i < j; i++) {\r\n\t\t\t\t\t\tnodes[i] = data.data.origin ? data.data.origin.get_node(data.data.nodes[i]) : data.data.nodes[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastmv.ins[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (data.event.metaKey || data.event.ctrlKey))) ? 'copy_node' : 'move_node' ](nodes, lastmv.par, lastmv.pos, false, false, false, data.data.origin);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ti = $(data.event.target).closest('.jstree');\r\n\t\t\t\t\tif(i.length && laster && laster.error && laster.error === 'check') {\r\n\t\t\t\t\t\ti = i.jstree(true);\r\n\t\t\t\t\t\tif(i) {\r\n\t\t\t\t\t\t\ti.settings.core.error.call(this, laster);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tlastev = false;\r\n\t\t\t\tlastmv = false;\r\n\t\t\t})\r\n\t\t\t.on('keyup.jstree keydown.jstree', function (e, data) {\r\n\t\t\t\tdata = $.vakata.dnd._get();\r\n\t\t\t\tif(data && data.data && data.data.jstree) {\r\n\t\t\t\t\tif (e.type === \"keyup\" && e.which === 27) {\r\n\t\t\t\t\t\tif (opento) { clearTimeout(opento); }\r\n\t\t\t\t\t\tlastmv = false;\r\n\t\t\t\t\t\tlaster = false;\r\n\t\t\t\t\t\tlastev = false;\r\n\t\t\t\t\t\topento = false;\r\n\t\t\t\t\t\tmarker.hide().detach();\r\n\t\t\t\t\t\t$.vakata.dnd._clean();\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdata.helper.find('.jstree-copy').first()[ data.data.origin && (data.data.origin.settings.dnd.always_copy || (data.data.origin.settings.dnd.copy && (e.metaKey || e.ctrlKey))) ? 'show' : 'hide' ]();\r\n\t\t\t\t\t\tif(lastev) {\r\n\t\t\t\t\t\t\tlastev.metaKey = e.metaKey;\r\n\t\t\t\t\t\t\tlastev.ctrlKey = e.ctrlKey;\r\n\t\t\t\t\t\t\t$.vakata.dnd._trigger('move', lastev);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t});\r\n\r\n\t// helpers\r\n\t(function ($) {\r\n\t\t$.vakata.html = {\r\n\t\t\tdiv : $('<div />'),\r\n\t\t\tescape : function (str) {\r\n\t\t\t\treturn $.vakata.html.div.text(str).html();\r\n\t\t\t},\r\n\t\t\tstrip : function (str) {\r\n\t\t\t\treturn $.vakata.html.div.empty().append($.parseHTML(str)).text();\r\n\t\t\t}\r\n\t\t};\r\n\t\t// private variable\r\n\t\tvar vakata_dnd = {\r\n\t\t\telement\t: false,\r\n\t\t\ttarget\t: false,\r\n\t\t\tis_down\t: false,\r\n\t\t\tis_drag\t: false,\r\n\t\t\thelper\t: false,\r\n\t\t\thelper_w: 0,\r\n\t\t\tdata\t: false,\r\n\t\t\tinit_x\t: 0,\r\n\t\t\tinit_y\t: 0,\r\n\t\t\tscroll_l: 0,\r\n\t\t\tscroll_t: 0,\r\n\t\t\tscroll_e: false,\r\n\t\t\tscroll_i: false,\r\n\t\t\tis_touch: false\r\n\t\t};\r\n\t\t$.vakata.dnd = {\r\n\t\t\tsettings : {\r\n\t\t\t\tscroll_speed\t\t: 10,\r\n\t\t\t\tscroll_proximity\t: 20,\r\n\t\t\t\thelper_left\t\t\t: 5,\r\n\t\t\t\thelper_top\t\t\t: 10,\r\n\t\t\t\tthreshold\t\t\t: 5,\r\n\t\t\t\tthreshold_touch\t\t: 10\r\n\t\t\t},\r\n\t\t\t_trigger : function (event_name, e, data) {\r\n\t\t\t\tif (data === undefined) {\r\n\t\t\t\t\tdata = $.vakata.dnd._get();\r\n\t\t\t\t}\r\n\t\t\t\tdata.event = e;\r\n\t\t\t\t$(document).trigger(\"dnd_\" + event_name + \".vakata\", data);\r\n\t\t\t},\r\n\t\t\t_get : function () {\r\n\t\t\t\treturn {\r\n\t\t\t\t\t\"data\"\t\t: vakata_dnd.data,\r\n\t\t\t\t\t\"element\"\t: vakata_dnd.element,\r\n\t\t\t\t\t\"helper\"\t: vakata_dnd.helper\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\t_clean : function () {\r\n\t\t\t\tif(vakata_dnd.helper) { vakata_dnd.helper.remove(); }\r\n\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\r\n\t\t\t\tvakata_dnd = {\r\n\t\t\t\t\telement\t: false,\r\n\t\t\t\t\ttarget\t: false,\r\n\t\t\t\t\tis_down\t: false,\r\n\t\t\t\t\tis_drag\t: false,\r\n\t\t\t\t\thelper\t: false,\r\n\t\t\t\t\thelper_w: 0,\r\n\t\t\t\t\tdata\t: false,\r\n\t\t\t\t\tinit_x\t: 0,\r\n\t\t\t\t\tinit_y\t: 0,\r\n\t\t\t\t\tscroll_l: 0,\r\n\t\t\t\t\tscroll_t: 0,\r\n\t\t\t\t\tscroll_e: false,\r\n\t\t\t\t\tscroll_i: false,\r\n\t\t\t\t\tis_touch: false\r\n\t\t\t\t};\r\n\t\t\t\t$(document).off(\"mousemove.vakata.jstree touchmove.vakata.jstree\", $.vakata.dnd.drag);\r\n\t\t\t\t$(document).off(\"mouseup.vakata.jstree touchend.vakata.jstree\", $.vakata.dnd.stop);\r\n\t\t\t},\r\n\t\t\t_scroll : function (init_only) {\r\n\t\t\t\tif(!vakata_dnd.scroll_e || (!vakata_dnd.scroll_l && !vakata_dnd.scroll_t)) {\r\n\t\t\t\t\tif(vakata_dnd.scroll_i) { clearInterval(vakata_dnd.scroll_i); vakata_dnd.scroll_i = false; }\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(!vakata_dnd.scroll_i) {\r\n\t\t\t\t\tvakata_dnd.scroll_i = setInterval($.vakata.dnd._scroll, 100);\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t\tif(init_only === true) { return false; }\r\n\r\n\t\t\t\tvar i = vakata_dnd.scroll_e.scrollTop(),\r\n\t\t\t\t\tj = vakata_dnd.scroll_e.scrollLeft();\r\n\t\t\t\tvakata_dnd.scroll_e.scrollTop(i + vakata_dnd.scroll_t * $.vakata.dnd.settings.scroll_speed);\r\n\t\t\t\tvakata_dnd.scroll_e.scrollLeft(j + vakata_dnd.scroll_l * $.vakata.dnd.settings.scroll_speed);\r\n\t\t\t\tif(i !== vakata_dnd.scroll_e.scrollTop() || j !== vakata_dnd.scroll_e.scrollLeft()) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered on the document when a drag causes an element to scroll\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @plugin dnd\r\n\t\t\t\t\t * @name dnd_scroll.vakata\r\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t\t * @param {jQuery} event the element that is scrolling\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$.vakata.dnd._trigger(\"scroll\", vakata_dnd.scroll_e);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tstart : function (e, data, html) {\r\n\t\t\t\tif(e.type === \"touchstart\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\r\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\r\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t}\r\n\t\t\t\tif(vakata_dnd.is_drag) { $.vakata.dnd.stop({}); }\r\n\t\t\t\ttry {\r\n\t\t\t\t\te.currentTarget.unselectable = \"on\";\r\n\t\t\t\t\te.currentTarget.onselectstart = function() { return false; };\r\n\t\t\t\t\tif(e.currentTarget.style) {\r\n\t\t\t\t\t\te.currentTarget.style.touchAction = \"none\";\r\n\t\t\t\t\t\te.currentTarget.style.msTouchAction = \"none\";\r\n\t\t\t\t\t\te.currentTarget.style.MozUserSelect = \"none\";\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch(ignore) { }\r\n\t\t\t\tvakata_dnd.init_x\t= e.pageX;\r\n\t\t\t\tvakata_dnd.init_y\t= e.pageY;\r\n\t\t\t\tvakata_dnd.data\t\t= data;\r\n\t\t\t\tvakata_dnd.is_down\t= true;\r\n\t\t\t\tvakata_dnd.element\t= e.currentTarget;\r\n\t\t\t\tvakata_dnd.target\t= e.target;\r\n\t\t\t\tvakata_dnd.is_touch\t= e.type === \"touchstart\";\r\n\t\t\t\tif(html !== false) {\r\n\t\t\t\t\tvakata_dnd.helper = $(\"<div id='vakata-dnd'></div>\").html(html).css({\r\n\t\t\t\t\t\t\"display\"\t\t: \"block\",\r\n\t\t\t\t\t\t\"margin\"\t\t: \"0\",\r\n\t\t\t\t\t\t\"padding\"\t\t: \"0\",\r\n\t\t\t\t\t\t\"position\"\t\t: \"absolute\",\r\n\t\t\t\t\t\t\"top\"\t\t\t: \"-2000px\",\r\n\t\t\t\t\t\t\"lineHeight\"\t: \"16px\",\r\n\t\t\t\t\t\t\"zIndex\"\t\t: \"10000\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t$(document).on(\"mousemove.vakata.jstree touchmove.vakata.jstree\", $.vakata.dnd.drag);\r\n\t\t\t\t$(document).on(\"mouseup.vakata.jstree touchend.vakata.jstree\", $.vakata.dnd.stop);\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tdrag : function (e) {\r\n\t\t\t\tif(e.type === \"touchmove\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\r\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\r\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t}\r\n\t\t\t\tif(!vakata_dnd.is_down) { return; }\r\n\t\t\t\tif(!vakata_dnd.is_drag) {\r\n\t\t\t\t\tif(\r\n\t\t\t\t\t\tMath.abs(e.pageX - vakata_dnd.init_x) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold) ||\r\n\t\t\t\t\t\tMath.abs(e.pageY - vakata_dnd.init_y) > (vakata_dnd.is_touch ? $.vakata.dnd.settings.threshold_touch : $.vakata.dnd.settings.threshold)\r\n\t\t\t\t\t) {\r\n\t\t\t\t\t\tif(vakata_dnd.helper) {\r\n\t\t\t\t\t\t\tvakata_dnd.helper.appendTo(document.body);\r\n\t\t\t\t\t\t\tvakata_dnd.helper_w = vakata_dnd.helper.outerWidth();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvakata_dnd.is_drag = true;\r\n\t\t\t\t\t\t$(vakata_dnd.target).one('click.vakata', false);\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * triggered on the document when a drag starts\r\n\t\t\t\t\t\t * @event\r\n\t\t\t\t\t\t * @plugin dnd\r\n\t\t\t\t\t\t * @name dnd_start.vakata\r\n\t\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t\t\t * @param {Object} event the event that caused the start (probably mousemove)\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\t$.vakata.dnd._trigger(\"start\", e);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse { return; }\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar d  = false, w  = false,\r\n\t\t\t\t\tdh = false, wh = false,\r\n\t\t\t\t\tdw = false, ww = false,\r\n\t\t\t\t\tdt = false, dl = false,\r\n\t\t\t\t\tht = false, hl = false;\r\n\r\n\t\t\t\tvakata_dnd.scroll_t = 0;\r\n\t\t\t\tvakata_dnd.scroll_l = 0;\r\n\t\t\t\tvakata_dnd.scroll_e = false;\r\n\t\t\t\t$($(e.target).parentsUntil(\"body\").addBack().get().reverse())\r\n\t\t\t\t\t.filter(function () {\r\n\t\t\t\t\t\treturn\t(/^auto|scroll$/).test($(this).css(\"overflow\")) &&\r\n\t\t\t\t\t\t\t\t(this.scrollHeight > this.offsetHeight || this.scrollWidth > this.offsetWidth);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.each(function () {\r\n\t\t\t\t\t\tvar t = $(this), o = t.offset();\r\n\t\t\t\t\t\tif(this.scrollHeight > this.offsetHeight) {\r\n\t\t\t\t\t\t\tif(o.top + t.height() - e.pageY < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\r\n\t\t\t\t\t\t\tif(e.pageY - o.top < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_t = -1; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(this.scrollWidth > this.offsetWidth) {\r\n\t\t\t\t\t\t\tif(o.left + t.width() - e.pageX < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\r\n\t\t\t\t\t\t\tif(e.pageX - o.left < $.vakata.dnd.settings.scroll_proximity)\t\t\t\t{ vakata_dnd.scroll_l = -1; }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\r\n\t\t\t\t\t\t\tvakata_dnd.scroll_e = $(this);\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tif(!vakata_dnd.scroll_e) {\r\n\t\t\t\t\td  = $(document); w = $(window);\r\n\t\t\t\t\tdh = d.height(); wh = w.height();\r\n\t\t\t\t\tdw = d.width(); ww = w.width();\r\n\t\t\t\t\tdt = d.scrollTop(); dl = d.scrollLeft();\r\n\t\t\t\t\tif(dh > wh && e.pageY - dt < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_t = -1;  }\r\n\t\t\t\t\tif(dh > wh && wh - (e.pageY - dt) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_t = 1; }\r\n\t\t\t\t\tif(dw > ww && e.pageX - dl < $.vakata.dnd.settings.scroll_proximity)\t\t{ vakata_dnd.scroll_l = -1; }\r\n\t\t\t\t\tif(dw > ww && ww - (e.pageX - dl) < $.vakata.dnd.settings.scroll_proximity)\t{ vakata_dnd.scroll_l = 1; }\r\n\t\t\t\t\tif(vakata_dnd.scroll_t || vakata_dnd.scroll_l) {\r\n\t\t\t\t\t\tvakata_dnd.scroll_e = d;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(vakata_dnd.scroll_e) { $.vakata.dnd._scroll(true); }\r\n\r\n\t\t\t\tif(vakata_dnd.helper) {\r\n\t\t\t\t\tht = parseInt(e.pageY + $.vakata.dnd.settings.helper_top, 10);\r\n\t\t\t\t\thl = parseInt(e.pageX + $.vakata.dnd.settings.helper_left, 10);\r\n\t\t\t\t\tif(dh && ht + 25 > dh) { ht = dh - 50; }\r\n\t\t\t\t\tif(dw && hl + vakata_dnd.helper_w > dw) { hl = dw - (vakata_dnd.helper_w + 2); }\r\n\t\t\t\t\tvakata_dnd.helper.css({\r\n\t\t\t\t\t\tleft\t: hl + \"px\",\r\n\t\t\t\t\t\ttop\t\t: ht + \"px\"\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered on the document when a drag is in progress\r\n\t\t\t\t * @event\r\n\t\t\t\t * @plugin dnd\r\n\t\t\t\t * @name dnd_move.vakata\r\n\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t * @param {Object} event the event that caused this to trigger (most likely mousemove)\r\n\t\t\t\t */\r\n\t\t\t\t$.vakata.dnd._trigger(\"move\", e);\r\n\t\t\t\treturn false;\r\n\t\t\t},\r\n\t\t\tstop : function (e) {\r\n\t\t\t\tif(e.type === \"touchend\" && e.originalEvent && e.originalEvent.changedTouches && e.originalEvent.changedTouches[0]) {\r\n\t\t\t\t\te.pageX = e.originalEvent.changedTouches[0].pageX;\r\n\t\t\t\t\te.pageY = e.originalEvent.changedTouches[0].pageY;\r\n\t\t\t\t\te.target = document.elementFromPoint(e.originalEvent.changedTouches[0].pageX - window.pageXOffset, e.originalEvent.changedTouches[0].pageY - window.pageYOffset);\r\n\t\t\t\t}\r\n\t\t\t\tif(vakata_dnd.is_drag) {\r\n\t\t\t\t\t/**\r\n\t\t\t\t\t * triggered on the document when a drag stops (the dragged element is dropped)\r\n\t\t\t\t\t * @event\r\n\t\t\t\t\t * @plugin dnd\r\n\t\t\t\t\t * @name dnd_stop.vakata\r\n\t\t\t\t\t * @param {Mixed} data any data supplied with the call to $.vakata.dnd.start\r\n\t\t\t\t\t * @param {DOM} element the DOM element being dragged\r\n\t\t\t\t\t * @param {jQuery} helper the helper shown next to the mouse\r\n\t\t\t\t\t * @param {Object} event the event that caused the stop\r\n\t\t\t\t\t */\r\n\t\t\t\t\tif (e.target !== vakata_dnd.target) {\r\n\t\t\t\t\t\t$(vakata_dnd.target).off('click.vakata');\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$.vakata.dnd._trigger(\"stop\", e);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tif(e.type === \"touchend\" && e.target === vakata_dnd.target) {\r\n\t\t\t\t\t\tvar to = setTimeout(function () { $(e.target).click(); }, 100);\r\n\t\t\t\t\t\t$(e.target).one('click', function() { if(to) { clearTimeout(to); } });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t$.vakata.dnd._clean();\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t}($));\r\n\r\n\t// include the dnd plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"dnd\");\r\n\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/massload',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.massload) { return; }\r\n\r\n\t/**\r\n\t * massload configuration\r\n\t *\r\n\t * It is possible to set this to a standard jQuery-like AJAX config.\r\n\t * In addition to the standard jQuery ajax options here you can supply functions for `data` and `url`, the functions will be run in the current instance's scope and a param will be passed indicating which node IDs need to be loaded, the return value of those functions will be used.\r\n\t *\r\n\t * You can also set this to a function, that function will receive the node IDs being loaded as argument and a second param which is a function (callback) which should be called with the result.\r\n\t *\r\n\t * Both the AJAX and the function approach rely on the same return value - an object where the keys are the node IDs, and the value is the children of that node as an array.\r\n\t *\r\n\t *\t{\r\n\t *\t\t\"id1\" : [{ \"text\" : \"Child of ID1\", \"id\" : \"c1\" }, { \"text\" : \"Another child of ID1\", \"id\" : \"c2\" }],\r\n\t *\t\t\"id2\" : [{ \"text\" : \"Child of ID2\", \"id\" : \"c3\" }]\r\n\t *\t}\r\n\t * \r\n\t * @name $.jstree.defaults.massload\r\n\t * @plugin massload\r\n\t */\r\n\t$.jstree.defaults.massload = null;\r\n\t$.jstree.plugins.massload = function (options, parent) {\r\n\t\tthis.init = function (el, options) {\r\n\t\t\tthis._data.massload = {};\r\n\t\t\tparent.init.call(this, el, options);\r\n\t\t};\r\n\t\tthis._load_nodes = function (nodes, callback, is_callback, force_reload) {\r\n\t\t\tvar s = this.settings.massload,\r\n\t\t\t\tnodesString = JSON.stringify(nodes),\r\n\t\t\t\ttoLoad = [],\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\ti, j, dom;\r\n\t\t\tif (!is_callback) {\r\n\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\tif(!m[nodes[i]] || ( (!m[nodes[i]].state.loaded && !m[nodes[i]].state.failed) || force_reload) ) {\r\n\t\t\t\t\t\ttoLoad.push(nodes[i]);\r\n\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\r\n\t\t\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\t\t\tdom.addClass(\"jstree-loading\").attr('aria-busy',true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.massload = {};\r\n\t\t\t\tif (toLoad.length) {\r\n\t\t\t\t\tif($.isFunction(s)) {\r\n\t\t\t\t\t\treturn s.call(this, toLoad, $.proxy(function (data) {\r\n\t\t\t\t\t\t\tvar i, j;\r\n\t\t\t\t\t\t\tif(data) {\r\n\t\t\t\t\t\t\t\tfor(i in data) {\r\n\t\t\t\t\t\t\t\t\tif(data.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\tthis._data.massload[i] = data[i];\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\r\n\t\t\t\t\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(typeof s === 'object' && s && s.url) {\r\n\t\t\t\t\t\ts = $.extend(true, {}, s);\r\n\t\t\t\t\t\tif($.isFunction(s.url)) {\r\n\t\t\t\t\t\t\ts.url = s.url.call(this, toLoad);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif($.isFunction(s.data)) {\r\n\t\t\t\t\t\t\ts.data = s.data.call(this, toLoad);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn $.ajax(s)\r\n\t\t\t\t\t\t\t.done($.proxy(function (data,t,x) {\r\n\t\t\t\t\t\t\t\t\tvar i, j;\r\n\t\t\t\t\t\t\t\t\tif(data) {\r\n\t\t\t\t\t\t\t\t\t\tfor(i in data) {\r\n\t\t\t\t\t\t\t\t\t\t\tif(data.hasOwnProperty(i)) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tthis._data.massload[i] = data[i];\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tfor(i = 0, j = nodes.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\t\t\tdom = this.get_node(nodes[i], true);\r\n\t\t\t\t\t\t\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\t\t\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t\t.fail($.proxy(function (f) {\r\n\t\t\t\t\t\t\t\t\tparent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t\t\t\t\t\t\t}, this));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn parent._load_nodes.call(this, nodes, callback, is_callback, force_reload);\r\n\t\t};\r\n\t\tthis._load_node = function (obj, callback) {\r\n\t\t\tvar data = this._data.massload[obj.id],\r\n\t\t\t\trslt = null, dom;\r\n\t\t\tif(data) {\r\n\t\t\t\trslt = this[typeof data === 'string' ? '_append_html_data' : '_append_json_data'](\r\n\t\t\t\t\tobj,\r\n\t\t\t\t\ttypeof data === 'string' ? $($.parseHTML(data)).filter(function () { return this.nodeType !== 3; }) : data,\r\n\t\t\t\t\tfunction (status) { callback.call(this, status); }\r\n\t\t\t\t);\r\n\t\t\t\tdom = this.get_node(obj.id, true);\r\n\t\t\t\tif (dom && dom.length) {\r\n\t\t\t\t\tdom.removeClass(\"jstree-loading\").attr('aria-busy',false);\r\n\t\t\t\t}\r\n\t\t\t\tdelete this._data.massload[obj.id];\r\n\t\t\t\treturn rslt;\r\n\t\t\t}\r\n\t\t\treturn parent._load_node.call(this, obj, callback);\r\n\t\t};\r\n\t};\r\n\r\n\treturn $;\r\n\t\r\n});\ndefine('skylark-widgets-hierarchy/addons/search',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.search) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the search plugin\r\n\t * @name $.jstree.defaults.search\r\n\t * @plugin search\r\n\t */\r\n\t$.jstree.defaults.search = {\r\n\t\t/**\r\n\t\t * a jQuery-like AJAX config, which jstree uses if a server should be queried for results.\r\n\t\t *\r\n\t\t * A `str` (which is the search string) parameter will be added with the request, an optional `inside` parameter will be added if the search is limited to a node id. The expected result is a JSON array with nodes that need to be opened so that matching nodes will be revealed.\r\n\t\t * Leave this setting as `false` to not query the server. You can also set this to a function, which will be invoked in the instance's scope and receive 3 parameters - the search string, the callback to call with the array of nodes to load, and the optional node ID to limit the search to\r\n\t\t * @name $.jstree.defaults.search.ajax\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tajax : false,\r\n\t\t/**\r\n\t\t * Indicates if the search should be fuzzy or not (should `chnd3` match `child node 3`). Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.fuzzy\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tfuzzy : false,\r\n\t\t/**\r\n\t\t * Indicates if the search should be case sensitive. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.case_sensitive\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tcase_sensitive : false,\r\n\t\t/**\r\n\t\t * Indicates if the tree should be filtered (by default) to show only matching nodes (keep in mind this can be a heavy on large trees in old browsers).\r\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.show_only_matches\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tshow_only_matches : false,\r\n\t\t/**\r\n\t\t * Indicates if the children of matched element are shown (when show_only_matches is true)\r\n\t\t * This setting can be changed at runtime when calling the search method. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.show_only_matches_children\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tshow_only_matches_children : false,\r\n\t\t/**\r\n\t\t * Indicates if all nodes opened to reveal the search result, should be closed when the search is cleared or a new search is performed. Default is `true`.\r\n\t\t * @name $.jstree.defaults.search.close_opened_onclear\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tclose_opened_onclear : true,\r\n\t\t/**\r\n\t\t * Indicates if only leaf nodes should be included in search results. Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.search_leaves_only\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tsearch_leaves_only : false,\r\n\t\t/**\r\n\t\t * If set to a function it wil be called in the instance's scope with two arguments - search string and node (where node will be every node in the structure, so use with caution).\r\n\t\t * If the function returns a truthy value the node will be considered a match (it might not be displayed if search_only_leaves is set to true and the node is not a leaf). Default is `false`.\r\n\t\t * @name $.jstree.defaults.search.search_callback\r\n\t\t * @plugin search\r\n\t\t */\r\n\t\tsearch_callback : false\r\n\t};\r\n\r\n\t$.jstree.plugins.search = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tthis._data.search.str = \"\";\r\n\t\t\tthis._data.search.dom = $();\r\n\t\t\tthis._data.search.res = [];\r\n\t\t\tthis._data.search.opn = [];\r\n\t\t\tthis._data.search.som = false;\r\n\t\t\tthis._data.search.smc = false;\r\n\t\t\tthis._data.search.hdn = [];\r\n\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"search.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\r\n\t\t\t\t\t\t\tvar m = this._model.data, i, j, p = [], k, l;\r\n\t\t\t\t\t\t\tfor(i = 0, j = data.res.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\tif(m[data.res[i]] && !m[data.res[i]].state.hidden) {\r\n\t\t\t\t\t\t\t\t\tp.push(data.res[i]);\r\n\t\t\t\t\t\t\t\t\tp = p.concat(m[data.res[i]].parents);\r\n\t\t\t\t\t\t\t\t\tif(this._data.search.smc) {\r\n\t\t\t\t\t\t\t\t\t\tfor (k = 0, l = m[data.res[i]].children_d.length; k < l; k++) {\r\n\t\t\t\t\t\t\t\t\t\t\tif (m[m[data.res[i]].children_d[k]] && !m[m[data.res[i]].children_d[k]].state.hidden) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tp.push(m[data.res[i]].children_d[k]);\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tp = $.vakata.array_remove_item($.vakata.array_unique(p), $.jstree.root);\r\n\t\t\t\t\t\t\tthis._data.search.hdn = this.hide_all(true);\r\n\t\t\t\t\t\t\tthis.show_node(p, true);\r\n\t\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"clear_search.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(this._data.search.som && data.res.length) {\r\n\t\t\t\t\t\t\tthis.show_node(this._data.search.hdn, true);\r\n\t\t\t\t\t\t\tthis.redraw(true);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to search the tree nodes for a given string\r\n\t\t * @name search(str [, skip_async])\r\n\t\t * @param {String} str the search string\r\n\t\t * @param {Boolean} skip_async if set to true server will not be queried even if configured\r\n\t\t * @param {Boolean} show_only_matches if set to true only matching nodes will be shown (keep in mind this can be very slow on large trees or old browsers)\r\n\t\t * @param {mixed} inside an optional node to whose children to limit the search\r\n\t\t * @param {Boolean} append if set to true the results of this search are appended to the previous search\r\n\t\t * @plugin search\r\n\t\t * @trigger search.jstree\r\n\t\t */\r\n\t\tthis.search = function (str, skip_async, show_only_matches, inside, append, show_only_matches_children) {\r\n\t\t\tif(str === false || $.trim(str.toString()) === \"\") {\r\n\t\t\t\treturn this.clear_search();\r\n\t\t\t}\r\n\t\t\tinside = this.get_node(inside);\r\n\t\t\tinside = inside && inside.id ? inside.id : null;\r\n\t\t\tstr = str.toString();\r\n\t\t\tvar s = this.settings.search,\r\n\t\t\t\ta = s.ajax ? s.ajax : false,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\tf = null,\r\n\t\t\t\tr = [],\r\n\t\t\t\tp = [], i, j;\r\n\t\t\tif(this._data.search.res.length && !append) {\r\n\t\t\t\tthis.clear_search();\r\n\t\t\t}\r\n\t\t\tif(show_only_matches === undefined) {\r\n\t\t\t\tshow_only_matches = s.show_only_matches;\r\n\t\t\t}\r\n\t\t\tif(show_only_matches_children === undefined) {\r\n\t\t\t\tshow_only_matches_children = s.show_only_matches_children;\r\n\t\t\t}\r\n\t\t\tif(!skip_async && a !== false) {\r\n\t\t\t\tif($.isFunction(a)) {\r\n\t\t\t\t\treturn a.call(this, str, $.proxy(function (d) {\r\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\r\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\r\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, this), inside);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ta = $.extend({}, a);\r\n\t\t\t\t\tif(!a.data) { a.data = {}; }\r\n\t\t\t\t\ta.data.str = str;\r\n\t\t\t\t\tif(inside) {\r\n\t\t\t\t\t\ta.data.inside = inside;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this._data.search.lastRequest) {\r\n\t\t\t\t\t\tthis._data.search.lastRequest.abort();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._data.search.lastRequest = $.ajax(a)\r\n\t\t\t\t\t\t.fail($.proxy(function () {\r\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'ajax', 'plugin' : 'search', 'id' : 'search_01', 'reason' : 'Could not load search parents', 'data' : JSON.stringify(a) };\r\n\t\t\t\t\t\t\tthis.settings.core.error.call(this, this._data.core.last_error);\r\n\t\t\t\t\t\t}, this))\r\n\t\t\t\t\t\t.done($.proxy(function (d) {\r\n\t\t\t\t\t\t\tif(d && d.d) { d = d.d; }\r\n\t\t\t\t\t\t\tthis._load_nodes(!$.isArray(d) ? [] : $.vakata.array_unique(d), function () {\r\n\t\t\t\t\t\t\t\tthis.search(str, true, show_only_matches, inside, append, show_only_matches_children);\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}, this));\r\n\t\t\t\t\treturn this._data.search.lastRequest;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(!append) {\r\n\t\t\t\tthis._data.search.str = str;\r\n\t\t\t\tthis._data.search.dom = $();\r\n\t\t\t\tthis._data.search.res = [];\r\n\t\t\t\tthis._data.search.opn = [];\r\n\t\t\t\tthis._data.search.som = show_only_matches;\r\n\t\t\t\tthis._data.search.smc = show_only_matches_children;\r\n\t\t\t}\r\n\r\n\t\t\tf = new $.vakata.search(str, true, { caseSensitive : s.case_sensitive, fuzzy : s.fuzzy });\r\n\t\t\t$.each(m[inside ? inside : $.jstree.root].children_d, function (ii, i) {\r\n\t\t\t\tvar v = m[i];\r\n\t\t\t\tif(v.text && !v.state.hidden && (!s.search_leaves_only || (v.state.loaded && v.children.length === 0)) && ( (s.search_callback && s.search_callback.call(this, str, v)) || (!s.search_callback && f.search(v.text).isMatch) ) ) {\r\n\t\t\t\t\tr.push(i);\r\n\t\t\t\t\tp = p.concat(v.parents);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif(r.length) {\r\n\t\t\t\tp = $.vakata.array_unique(p);\r\n\t\t\t\tfor(i = 0, j = p.length; i < j; i++) {\r\n\t\t\t\t\tif(p[i] !== $.jstree.root && m[p[i]] && this.open_node(p[i], null, 0) === true) {\r\n\t\t\t\t\t\tthis._data.search.opn.push(p[i]);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(!append) {\r\n\t\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #')));\r\n\t\t\t\t\tthis._data.search.res = r;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tthis._data.search.dom = this._data.search.dom.add($(this.element[0].querySelectorAll('#' + $.map(r, function (v) { return \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&'); }).join(', #'))));\r\n\t\t\t\t\tthis._data.search.res = $.vakata.array_unique(this._data.search.res.concat(r));\r\n\t\t\t\t}\r\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").addClass('jstree-search');\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered after search is complete\r\n\t\t\t * @event\r\n\t\t\t * @name search.jstree\r\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes\r\n\t\t\t * @param {String} str the search string\r\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes\r\n\t\t\t * @plugin search\r\n\t\t\t */\r\n\t\t\tthis.trigger('search', { nodes : this._data.search.dom, str : str, res : this._data.search.res, show_only_matches : show_only_matches });\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to clear the last search (removes classes and shows all nodes if filtering is on)\r\n\t\t * @name clear_search()\r\n\t\t * @plugin search\r\n\t\t * @trigger clear_search.jstree\r\n\t\t */\r\n\t\tthis.clear_search = function () {\r\n\t\t\tif(this.settings.search.close_opened_onclear) {\r\n\t\t\t\tthis.close_node(this._data.search.opn, 0);\r\n\t\t\t}\r\n\t\t\t/**\r\n\t\t\t * triggered after search is complete\r\n\t\t\t * @event\r\n\t\t\t * @name clear_search.jstree\r\n\t\t\t * @param {jQuery} nodes a jQuery collection of matching nodes (the result from the last search)\r\n\t\t\t * @param {String} str the search string (the last search string)\r\n\t\t\t * @param {Array} res a collection of objects represeing the matching nodes (the result from the last search)\r\n\t\t\t * @plugin search\r\n\t\t\t */\r\n\t\t\tthis.trigger('clear_search', { 'nodes' : this._data.search.dom, str : this._data.search.str, res : this._data.search.res });\r\n\t\t\tif(this._data.search.res.length) {\r\n\t\t\t\tthis._data.search.dom = $(this.element[0].querySelectorAll('#' + $.map(this._data.search.res, function (v) {\r\n\t\t\t\t\treturn \"0123456789\".indexOf(v[0]) !== -1 ? '\\\\3' + v[0] + ' ' + v.substr(1).replace($.jstree.idregex,'\\\\$&') : v.replace($.jstree.idregex,'\\\\$&');\r\n\t\t\t\t}).join(', #')));\r\n\t\t\t\tthis._data.search.dom.children(\".jstree-anchor\").removeClass(\"jstree-search\");\r\n\t\t\t}\r\n\t\t\tthis._data.search.str = \"\";\r\n\t\t\tthis._data.search.res = [];\r\n\t\t\tthis._data.search.opn = [];\r\n\t\t\tthis._data.search.dom = $();\r\n\t\t};\r\n\r\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tif($.inArray(obj.id, this._data.search.res) !== -1) {\r\n\t\t\t\t\tvar i, j, tmp = null;\r\n\t\t\t\t\tfor(i = 0, j = obj.childNodes.length; i < j; i++) {\r\n\t\t\t\t\t\tif(obj.childNodes[i] && obj.childNodes[i].className && obj.childNodes[i].className.indexOf(\"jstree-anchor\") !== -1) {\r\n\t\t\t\t\t\t\ttmp = obj.childNodes[i];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(tmp) {\r\n\t\t\t\t\t\ttmp.className += ' jstree-search';\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t};\r\n\r\n\t// helpers\r\n\t(function ($) {\r\n\t\t// from http://kiro.me/projects/fuse.html\r\n\t\t$.vakata.search = function(pattern, txt, options) {\r\n\t\t\toptions = options || {};\r\n\t\t\toptions = $.extend({}, $.vakata.search.defaults, options);\r\n\t\t\tif(options.fuzzy !== false) {\r\n\t\t\t\toptions.fuzzy = true;\r\n\t\t\t}\r\n\t\t\tpattern = options.caseSensitive ? pattern : pattern.toLowerCase();\r\n\t\t\tvar MATCH_LOCATION\t= options.location,\r\n\t\t\t\tMATCH_DISTANCE\t= options.distance,\r\n\t\t\t\tMATCH_THRESHOLD\t= options.threshold,\r\n\t\t\t\tpatternLen = pattern.length,\r\n\t\t\t\tmatchmask, pattern_alphabet, match_bitapScore, search;\r\n\t\t\tif(patternLen > 32) {\r\n\t\t\t\toptions.fuzzy = false;\r\n\t\t\t}\r\n\t\t\tif(options.fuzzy) {\r\n\t\t\t\tmatchmask = 1 << (patternLen - 1);\r\n\t\t\t\tpattern_alphabet = (function () {\r\n\t\t\t\t\tvar mask = {},\r\n\t\t\t\t\t\ti = 0;\r\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\t\tmask[pattern.charAt(i)] = 0;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\t\tmask[pattern.charAt(i)] |= 1 << (patternLen - i - 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn mask;\r\n\t\t\t\t}());\r\n\t\t\t\tmatch_bitapScore = function (e, x) {\r\n\t\t\t\t\tvar accuracy = e / patternLen,\r\n\t\t\t\t\t\tproximity = Math.abs(MATCH_LOCATION - x);\r\n\t\t\t\t\tif(!MATCH_DISTANCE) {\r\n\t\t\t\t\t\treturn proximity ? 1.0 : accuracy;\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn accuracy + (proximity / MATCH_DISTANCE);\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tsearch = function (text) {\r\n\t\t\t\ttext = options.caseSensitive ? text : text.toLowerCase();\r\n\t\t\t\tif(pattern === text || text.indexOf(pattern) !== -1) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tisMatch: true,\r\n\t\t\t\t\t\tscore: 0\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tif(!options.fuzzy) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tisMatch: false,\r\n\t\t\t\t\t\tscore: 1\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tvar i, j,\r\n\t\t\t\t\ttextLen = text.length,\r\n\t\t\t\t\tscoreThreshold = MATCH_THRESHOLD,\r\n\t\t\t\t\tbestLoc = text.indexOf(pattern, MATCH_LOCATION),\r\n\t\t\t\t\tbinMin, binMid,\r\n\t\t\t\t\tbinMax = patternLen + textLen,\r\n\t\t\t\t\tlastRd, start, finish, rd, charMatch,\r\n\t\t\t\t\tscore = 1,\r\n\t\t\t\t\tlocations = [];\r\n\t\t\t\tif (bestLoc !== -1) {\r\n\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t\tbestLoc = text.lastIndexOf(pattern, MATCH_LOCATION + patternLen);\r\n\t\t\t\t\tif (bestLoc !== -1) {\r\n\t\t\t\t\t\tscoreThreshold = Math.min(match_bitapScore(0, bestLoc), scoreThreshold);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tbestLoc = -1;\r\n\t\t\t\tfor (i = 0; i < patternLen; i++) {\r\n\t\t\t\t\tbinMin = 0;\r\n\t\t\t\t\tbinMid = binMax;\r\n\t\t\t\t\twhile (binMin < binMid) {\r\n\t\t\t\t\t\tif (match_bitapScore(i, MATCH_LOCATION + binMid) <= scoreThreshold) {\r\n\t\t\t\t\t\t\tbinMin = binMid;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tbinMid = Math.floor((binMax - binMin) / 2 + binMin);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbinMax = binMid;\r\n\t\t\t\t\tstart = Math.max(1, MATCH_LOCATION - binMid + 1);\r\n\t\t\t\t\tfinish = Math.min(MATCH_LOCATION + binMid, textLen) + patternLen;\r\n\t\t\t\t\trd = new Array(finish + 2);\r\n\t\t\t\t\trd[finish + 1] = (1 << i) - 1;\r\n\t\t\t\t\tfor (j = finish; j >= start; j--) {\r\n\t\t\t\t\t\tcharMatch = pattern_alphabet[text.charAt(j - 1)];\r\n\t\t\t\t\t\tif (i === 0) {\r\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch;\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trd[j] = ((rd[j + 1] << 1) | 1) & charMatch | (((lastRd[j + 1] | lastRd[j]) << 1) | 1) | lastRd[j + 1];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (rd[j] & matchmask) {\r\n\t\t\t\t\t\t\tscore = match_bitapScore(i, j - 1);\r\n\t\t\t\t\t\t\tif (score <= scoreThreshold) {\r\n\t\t\t\t\t\t\t\tscoreThreshold = score;\r\n\t\t\t\t\t\t\t\tbestLoc = j - 1;\r\n\t\t\t\t\t\t\t\tlocations.push(bestLoc);\r\n\t\t\t\t\t\t\t\tif (bestLoc > MATCH_LOCATION) {\r\n\t\t\t\t\t\t\t\t\tstart = Math.max(1, 2 * MATCH_LOCATION - bestLoc);\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (match_bitapScore(i + 1, MATCH_LOCATION) > scoreThreshold) {\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastRd = rd;\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tisMatch: bestLoc >= 0,\r\n\t\t\t\t\tscore: score\r\n\t\t\t\t};\r\n\t\t\t};\r\n\t\t\treturn txt === true ? { 'search' : search } : search(txt);\r\n\t\t};\r\n\t\t$.vakata.search.defaults = {\r\n\t\t\tlocation : 0,\r\n\t\t\tdistance : 100,\r\n\t\t\tthreshold : 0.6,\r\n\t\t\tfuzzy : false,\r\n\t\t\tcaseSensitive : false\r\n\t\t};\r\n\t}($));\r\n\r\n\t// include the search plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"search\");\r\n\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/sort',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.sort) { return; }\r\n\r\n\t/**\r\n\t * the settings function used to sort the nodes.\r\n\t * It is executed in the tree's context, accepts two nodes as arguments and should return `1` or `-1`.\r\n\t * @name $.jstree.defaults.sort\r\n\t * @plugin sort\r\n\t */\r\n\t$.jstree.defaults.sort = function (a, b) {\r\n\t\t//return this.get_type(a) === this.get_type(b) ? (this.get_text(a) > this.get_text(b) ? 1 : -1) : this.get_type(a) >= this.get_type(b);\r\n\t\treturn this.get_text(a) > this.get_text(b) ? 1 : -1;\r\n\t};\r\n\t$.jstree.plugins.sort = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"model.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.sort(data.parent, true);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"rename_node.jstree create_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.sort(data.parent || data.node.parent, false);\r\n\t\t\t\t\t\tthis.redraw_node(data.parent || data.node.parent, true);\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"move_node.jstree copy_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.sort(data.parent, false);\r\n\t\t\t\t\t\tthis.redraw_node(data.parent, true);\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to sort a node's children\r\n\t\t * @private\r\n\t\t * @name sort(obj [, deep])\r\n\t\t * @param  {mixed} obj the node\r\n\t\t * @param {Boolean} deep if set to `true` nodes are sorted recursively.\r\n\t\t * @plugin sort\r\n\t\t * @trigger search.jstree\r\n\t\t */\r\n\t\tthis.sort = function (obj, deep) {\r\n\t\t\tvar i, j;\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(obj && obj.children && obj.children.length) {\r\n\t\t\t\tobj.children.sort($.proxy(this.settings.sort, this));\r\n\t\t\t\tif(deep) {\r\n\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\tthis.sort(obj.children_d[i], false);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t};\r\n\r\n\t// include the sort plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"sort\");\r\n\r\n\treturn $;\r\n\t\r\n});\ndefine('skylark-widgets-hierarchy/addons/state',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.state) { return; }\r\n\r\n\tvar to = false;\r\n\t/**\r\n\t * stores all defaults for the state plugin\r\n\t * @name $.jstree.defaults.state\r\n\t * @plugin state\r\n\t */\r\n\t$.jstree.defaults.state = {\r\n\t\t/**\r\n\t\t * A string for the key to use when saving the current tree (change if using multiple trees in your project). Defaults to `jstree`.\r\n\t\t * @name $.jstree.defaults.state.key\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tkey\t\t: 'jstree',\r\n\t\t/**\r\n\t\t * A space separated list of events that trigger a state save. Defaults to `changed.jstree open_node.jstree close_node.jstree`.\r\n\t\t * @name $.jstree.defaults.state.events\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tevents\t: 'changed.jstree open_node.jstree close_node.jstree check_node.jstree uncheck_node.jstree',\r\n\t\t/**\r\n\t\t * Time in milliseconds after which the state will expire. Defaults to 'false' meaning - no expire.\r\n\t\t * @name $.jstree.defaults.state.ttl\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tttl\t\t: false,\r\n\t\t/**\r\n\t\t * A function that will be executed prior to restoring state with one argument - the state object. Can be used to clear unwanted parts of the state.\r\n\t\t * @name $.jstree.defaults.state.filter\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tfilter\t: false,\r\n\t\t/**\r\n\t\t * Should loaded nodes be restored (setting this to true means that it is possible that the whole tree will be loaded for some users - use with caution). Defaults to `false`\r\n\t\t * @name $.jstree.defaults.state.preserve_loaded\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tpreserve_loaded : false\r\n\t};\r\n\t$.jstree.plugins.state = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\t\t\tvar bind = $.proxy(function () {\r\n\t\t\t\tthis.element.on(this.settings.state.events, $.proxy(function () {\r\n\t\t\t\t\tif(to) { clearTimeout(to); }\r\n\t\t\t\t\tto = setTimeout($.proxy(function () { this.save_state(); }, this), 100);\r\n\t\t\t\t}, this));\r\n\t\t\t\t/**\r\n\t\t\t\t * triggered when the state plugin is finished restoring the state (and immediately after ready if there is no state to restore).\r\n\t\t\t\t * @event\r\n\t\t\t\t * @name state_ready.jstree\r\n\t\t\t\t * @plugin state\r\n\t\t\t\t */\r\n\t\t\t\tthis.trigger('state_ready');\r\n\t\t\t}, this);\r\n\t\t\tthis.element\r\n\t\t\t\t.on(\"ready.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.element.one(\"restore_state.jstree\", bind);\r\n\t\t\t\t\t\tif(!this.restore_state()) { bind(); }\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\t/**\r\n\t\t * save the state\r\n\t\t * @name save_state()\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tthis.save_state = function () {\r\n\t\t\tvar tm = this.get_state();\r\n\t\t\tif (!this.settings.state.preserve_loaded) {\r\n\t\t\t\tdelete tm.core.loaded;\r\n\t\t\t}\r\n\t\t\tvar st = { 'state' : tm, 'ttl' : this.settings.state.ttl, 'sec' : +(new Date()) };\r\n\t\t\t$.vakata.storage.set(this.settings.state.key, JSON.stringify(st));\r\n\t\t};\r\n\t\t/**\r\n\t\t * restore the state from the user's computer\r\n\t\t * @name restore_state()\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tthis.restore_state = function () {\r\n\t\t\tvar k = $.vakata.storage.get(this.settings.state.key);\r\n\t\t\tif(!!k) { try { k = JSON.parse(k); } catch(ex) { return false; } }\r\n\t\t\tif(!!k && k.ttl && k.sec && +(new Date()) - k.sec > k.ttl) { return false; }\r\n\t\t\tif(!!k && k.state) { k = k.state; }\r\n\t\t\tif(!!k && $.isFunction(this.settings.state.filter)) { k = this.settings.state.filter.call(this, k); }\r\n\t\t\tif(!!k) {\r\n\t\t\t\tif (!this.settings.state.preserve_loaded) {\r\n\t\t\t\t\tdelete k.core.loaded;\r\n\t\t\t\t}\r\n\t\t\t\tthis.element.one(\"set_state.jstree\", function (e, data) { data.instance.trigger('restore_state', { 'state' : $.extend(true, {}, k) }); });\r\n\t\t\t\tthis.set_state(k);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t};\r\n\t\t/**\r\n\t\t * clear the state on the user's computer\r\n\t\t * @name clear_state()\r\n\t\t * @plugin state\r\n\t\t */\r\n\t\tthis.clear_state = function () {\r\n\t\t\treturn $.vakata.storage.del(this.settings.state.key);\r\n\t\t};\r\n\t};\r\n\r\n\t(function ($, undefined) {\r\n\t\t$.vakata.storage = {\r\n\t\t\t// simply specifying the functions in FF throws an error\r\n\t\t\tset : function (key, val) { return window.localStorage.setItem(key, val); },\r\n\t\t\tget : function (key) { return window.localStorage.getItem(key); },\r\n\t\t\tdel : function (key) { return window.localStorage.removeItem(key); }\r\n\t\t};\r\n\t}($));\r\n\r\n\t// include the state plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"state\");\r\n\r\n\treturn $;\r\n\t\r\n});\ndefine([], function () {\n    'use strict';\n    var exports = {};\n    var module = { exports: {} };\n    define([\n        'skylark-langx/langx',\n        'skylark-domx-browser',\n        'skylark-domx-eventer',\n        'skylark-domx-noder',\n        'skylark-domx-geom',\n        'skylark-domx-query',\n        './menu',\n        'Hierarchy'\n    ], function (langx, browser, eventer, noder, geom, $, menu, jstree) {\n        var BLANKRE = /^\\s*$/g, IDREGEX = /[\\\\:&!^|()\\[\\]<>@*'+~#\";,= \\/${}%]/g, escapeId = function (id) {\n                return (id || '').replace(IDREGEX, '\\\\$&');\n            }, NODE_DATA_ATTR = 'data-jstreegrid', COL_DATA_ATTR = 'data-jstreegrid-column', SEARCHCLASS = 'jstree-search', SPECIAL_TITLE = '_DATA_', LEVELINDENT = 24, styled = false, MINCOLWIDTH = 10, generateCellId = function (tree, id) {\n                return 'jstree_' + tree + '_grid_' + escapeId(id) + '_col';\n            }, getIds = function (nodes) {\n                return $.makeArray(nodes.map(function () {\n                    return this.id;\n                }));\n            }, findDataCell = function (uniq, ids, col, scope) {\n                if (scope == undefined) {\n                    scope = $();\n                }\n                ;\n                if (ids === null || ids === undefined || ids.length === 0) {\n                    return scope;\n                }\n                var ret = $(), columns = [].concat(col), cellId;\n                if (typeof ids === 'string') {\n                    cellId = generateCellId(uniq, ids);\n                    ret = columns.map(function (col) {\n                        return '#' + cellId + col;\n                    }).join(', ');\n                } else {\n                    ret = [];\n                    ids.forEach(function (elm, i) {\n                        var cellId = generateCellId(uniq, elm);\n                        ret = ret.concat(columns.map(function (col) {\n                            return '#' + cellId + col;\n                        }));\n                    });\n                    ret = ret.join(', ');\n                }\n                return columns.length == 1 ? scope.find(ret) : $(ret);\n            }, isClickedSep = false, toResize = null, oldMouseX = 0, newMouseX = 0, htmlstripre = /<\\/?[^>]+>/gi, getIndent = function (node, tree) {\n                var div, i, li, width;\n                tree._gridSettings = tree._gridSettings || {};\n                if (tree._gridSettings.indent > 0) {\n                    width = tree._gridSettings.indent;\n                } else {\n                    div = $('<div></div>');\n                    i = node.prev('i');\n                    li = i.parent();\n                    div.addClass(tree.get_node('#', true).attr('class'));\n                    li.appendTo(div);\n                    div.appendTo($('body'));\n                    width = i.width() || LEVELINDENT;\n                    li.detach();\n                    div.remove();\n                    tree._gridSettings.indent = width;\n                }\n                return width;\n            }, copyData = function (fromtree, from, totree, to, recurse) {\n                var i, j;\n                to.data = $.extend(true, {}, from.data);\n                if (from && from.children_d && recurse) {\n                    for (i = 0, j = from.children_d.length; i < j; i++) {\n                        copyData(fromtree, fromtree.get_node(from.children_d[i]), totree, totree.get_node(to.children_d[i]), recurse);\n                    }\n                }\n            }, findLastClosedNode = function (tree, id) {\n                var ret, node = tree.get_node(id), children = node.children;\n                if (!children || children.length <= 0 || !node.state.opened) {\n                    ret = id;\n                } else {\n                    ret = findLastClosedNode(tree, children[children.length - 1]);\n                }\n                return ret;\n            }, renderAWidth = function (node, tree) {\n                var depth, width, fullWidth = parseInt(tree.settings.grid.columns[0].width, 10) + parseInt(tree._gridSettings.treeWidthDiff, 10);\n                depth = tree.get_node(node).parents.length;\n                width = fullWidth - depth * getIndent(node, tree);\n                return fullWidth;\n            }, renderATitle = function (node, t, tree) {\n                var a = node.hasClass('jstree-anchor') ? node : node.children(\"[class~='jstree-anchor']\"), title, col = tree.settings.grid.columns[0];\n                title = '';\n                if (col.title) {\n                    if (col.title === SPECIAL_TITLE) {\n                        title = tree.get_text(t);\n                    } else if (t.attr(col.title)) {\n                        title = t.attr(col.title);\n                    }\n                }\n                title = title.replace(htmlstripre, '');\n                if (title) {\n                    a.attr('title', title);\n                }\n            }, getCellData = function (value, data) {\n                var val;\n                if (value !== undefined && value !== null) {\n                    if (typeof value === 'function') {\n                        val = value(data);\n                    } else if (data.data !== null && data.data !== undefined && data.data[value] !== undefined) {\n                        val = data.data[value];\n                    } else {\n                        val = '';\n                    }\n                } else {\n                    val = '';\n                }\n                return val;\n            };\n        $.jstree.defaults.grid = { width: 'auto' };\n        $.jstree.plugins.grid = function (options, parent) {\n            this._initialize = function () {\n                if (!this._initialized) {\n                    var s = this.settings.grid || {}, styles, container = this.element, i, gs = this._gridSettings = {\n                            columns: s.columns || [],\n                            treeClass: 'jstree-grid-col-0',\n                            context: s.contextmenu || false,\n                            columnWidth: s.columnWidth,\n                            defaultConf: {\n                                '*display': 'inline',\n                                '*+display': 'inline'\n                            },\n                            isThemeroller: !!this._data.themeroller,\n                            treeWidthDiff: 0,\n                            resizable: s.resizable,\n                            draggable: s.draggable,\n                            stateful: s.stateful,\n                            indent: 0,\n                            sortOrder: 'text',\n                            sortAsc: true,\n                            caseInsensitive: s.caseInsensitive,\n                            fixedHeader: s.fixedHeader !== false,\n                            width: s.width,\n                            height: s.height,\n                            gridcontextmenu: s.gridcontextmenu,\n                            treecol: 0,\n                            gridcols: []\n                        }, cols = gs.columns, treecol = 0, columnSearch = false;\n                    if (gs.gridcontextmenu === true) {\n                        gs.gridcontextmenu = function (grid, tree, node, val, col, t, target) {\n                            return {\n                                'edit': {\n                                    label: 'Edit',\n                                    'action': function (data) {\n                                        var obj = t.get_node(node);\n                                        grid._edit(obj, col, target);\n                                    }\n                                }\n                            };\n                        };\n                    } else if (gs.gridcontextmenu === false) {\n                        gs.gridcontextmenu = false;\n                    }\n                    for (var i = 0, len = s.columns.length; i < len; i++) {\n                        if (s.columns[i].tree) {\n                            treecol = i;\n                            gs.treecol = treecol;\n                        } else {\n                            gs.gridcols.push(i);\n                        }\n                    }\n                    this.uniq = Math.ceil(Math.random() * 1000);\n                    this.rootid = container.attr('id');\n                    var msie = /msie/.test(navigator.userAgent.toLowerCase());\n                    if (msie) {\n                        var version = parseFloat(navigator.appVersion.split('MSIE')[1]);\n                        if (version < 8) {\n                            gs.defaultConf.display = 'inline';\n                            gs.defaultConf.zoom = '1';\n                        }\n                    }\n                    if (!styled) {\n                        styled = true;\n                        styles = [\n                            '.jstree-grid-cell {vertical-align: top; overflow:hidden;margin-left:0;position:relative;width: 100%;padding-left:7px;white-space: nowrap;}',\n                            '.jstree-grid-cell span {margin-right:0px;margin-right:0px;*display:inline;*+display:inline;white-space: nowrap;}',\n                            '.jstree-grid-separator {position:absolute; top:0; right:0; height:24px; margin-left: -2px; border-width: 0 2px 0 0; *display:inline; *+display:inline; margin-right:0px;width:0px;}',\n                            '.jstree-grid-header-cell {overflow: hidden; white-space: nowrap;padding: 1px 3px 2px 5px; cursor: default;}',\n                            '.jstree-grid-header-themeroller {border: 0; padding: 1px 3px;}',\n                            '.jstree-grid-header-regular {position:relative; background-color: #EBF3FD; z-index: 1;}',\n                            '.jstree-grid-hidden {display: none;}',\n                            '.jstree-grid-resizable-separator {cursor: col-resize; width: 2px;}',\n                            '.jstree-grid-separator-regular {border-color: #d0d0d0; border-style: solid;}',\n                            '.jstree-grid-cell-themeroller {border: none !important; background: transparent !important;}',\n                            '.jstree-grid-wrapper {table-layout: fixed; width: 100%; overflow: auto; position: relative;}',\n                            '.jstree-grid-midwrapper {display: table-row;}',\n                            '.jstree-grid-width-auto {width:auto;display:block;}',\n                            '.jstree-grid-column {display: table-cell; overflow: hidden;}',\n                            '.jstree-grid-ellipsis {text-overflow: ellipsis;}',\n                            '.jstree-grid-col-0 {width: 100%;}'\n                        ];\n                        $('<style type=\"text/css\">' + styles.join('\\n') + '</style>').appendTo('head');\n                    }\n                    this.gridWrapper = $('<div></div>').addClass('jstree-grid-wrapper').insertAfter(container);\n                    this.midWrapper = $('<div></div>').addClass('jstree-grid-midwrapper').appendTo(this.gridWrapper);\n                    if (s.width) {\n                        this.gridWrapper.width(s.width);\n                    }\n                    if (s.height) {\n                        this.gridWrapper.height(s.height);\n                    }\n                    for (var i = 0, len = cols.length; i < len; i++) {\n                        $('<div></div>').addClass('jstree-default jstree-grid-column jstree-grid-column-' + i + ' jstree-grid-column-root-' + this.rootid).appendTo(this.midWrapper);\n                    }\n                    this.midWrapper.children('div:eq(' + treecol + ')').append(container);\n                    container.addClass('jstree-grid-cell');\n                    if (gs.fixedHeader) {\n                        this.gridWrapper.scroll(function () {\n                            $(this).find('.jstree-grid-header').css('top', $(this).scrollTop());\n                        });\n                    }\n                    var defaultSort = $.proxy(this.settings.sort, this);\n                    this.settings.sort = function (a, b) {\n                        var bigger, colrefs = this.colrefs;\n                        if (gs.sortOrder === 'text') {\n                            var caseInsensitiveSort = this.get_text(a).toLowerCase().localeCompare(this.get_text(b).toLowerCase());\n                            bigger = gs.caseInsensitive ? caseInsensitiveSort === 1 : defaultSort(a, b) === 1;\n                        } else {\n                            var nodeA = this.get_node(a), nodeB = this.get_node(b), value = colrefs[gs.sortOrder].value, valueA = typeof value === 'function' ? value(nodeA) : nodeA.data[value], valueB = typeof value === 'function' ? value(nodeB) : nodeB.data[value];\n                            if (typeof valueA && typeof valueB !== 'undefined') {\n                                bigger = gs.caseInsensitive ? valueA.toLowerCase() > valueB.toLowerCase() : valueA > valueB;\n                            }\n                        }\n                        if (!gs.sortAsc)\n                            bigger = !bigger;\n                        return bigger ? 1 : -1;\n                    };\n                    if (gs.draggable) {\n                        if (!$.ui || !$.ui.sortable) {\n                            console.warn('[jstree-grid] draggable option requires jQuery UI');\n                        } else {\n                            var from, to;\n                            $(this.midWrapper).sortable({\n                                axis: 'x',\n                                handle: '.jstree-grid-header',\n                                cancel: '.jstree-grid-separator',\n                                start: function (event, ui) {\n                                    from = ui.item.index();\n                                },\n                                stop: function (event, ui) {\n                                    to = ui.item.index();\n                                    gs.columns.splice(to, 0, gs.columns.splice(from, 1)[0]);\n                                }\n                            });\n                        }\n                    }\n                    this.searchColumn = function (searchObj) {\n                        var validatedSearchObj = {};\n                        if (typeof searchObj == 'object') {\n                            for (var columnIndex in searchObj) {\n                                if (searchObj.hasOwnProperty(columnIndex)) {\n                                    if (columnIndex % 1 === 0 && columnIndex < cols.length && columnIndex >= 0) {\n                                        validatedSearchObj[columnIndex] = searchObj[columnIndex];\n                                    }\n                                }\n                            }\n                        }\n                        columnSearch = validatedSearchObj;\n                        if (Object.keys(validatedSearchObj).length !== 0) {\n                            this.search('someValue');\n                        } else {\n                            this.search('');\n                        }\n                        columnSearch = false;\n                    };\n                    for (var i = 0, len = cols.length; i < len; i++) {\n                        var column = cols[i];\n                        if (typeof column.search_callback !== 'function') {\n                            column.search_callback = function (str, columnValue, node, column) {\n                                var f = new $.vakata.search(str, true, {\n                                    caseSensitive: searchSettings.case_sensitive,\n                                    fuzzy: searchSettings.fuzzy\n                                });\n                                return f.search(columnValue).isMatch;\n                            };\n                        }\n                    }\n                    var searchSettings = this.settings.search;\n                    var omniSearchCallback = searchSettings.search_callback;\n                    if (!omniSearchCallback) {\n                        omniSearchCallback = function (str, node) {\n                            var i, f = new $.vakata.search(str, true, {\n                                    caseSensitive: searchSettings.case_sensitive,\n                                    fuzzy: searchSettings.fuzzy\n                                }), matched = f.search(node.text).isMatch, col;\n                            if (!matched) {\n                                for (var i = 0, len = cols.length; i < len; i++) {\n                                    if (treecol === i) {\n                                        continue;\n                                    }\n                                    col = cols[i];\n                                    matched = f.search(getCellData(col.value, node)).isMatch;\n                                    if (matched) {\n                                        break;\n                                    }\n                                }\n                            }\n                            return matched;\n                        };\n                    }\n                    searchSettings.search_callback = function (str, node) {\n                        var matched = false;\n                        if (columnSearch) {\n                            for (var columnIndex in columnSearch) {\n                                if (columnSearch.hasOwnProperty(columnIndex)) {\n                                    var searchValue = columnSearch[columnIndex];\n                                    if (searchValue == '') {\n                                        continue;\n                                    }\n                                    var col = cols[columnIndex];\n                                    if (treecol == columnIndex) {\n                                        matched = col.search_callback(searchValue, node.text, node, col);\n                                    } else {\n                                        matched = col.search_callback(searchValue, getCellData(col.value, node), node, col);\n                                    }\n                                    if (!matched) {\n                                        break;\n                                    }\n                                }\n                            }\n                            container.trigger('columnSearch_grid.jstree');\n                        } else {\n                            matched = omniSearchCallback(str, node);\n                            container.trigger('omniSearch_grid.jstree');\n                        }\n                        return matched;\n                    };\n                    this._initialized = true;\n                }\n            };\n            this.init = function (el, options) {\n                parent.init.call(this, el, options);\n                this._initialize();\n            };\n            this.bind = function () {\n                parent.bind.call(this);\n                this._initialize();\n                this.element.on('move_node.jstree create_node.jstree clean_node.jstree change_node.jstree', $.proxy(function (e, data) {\n                    var target = this.get_node(data || '#', true);\n                    var id = _guid();\n                    this._detachColumns(id);\n                    this._prepare_grid(target);\n                    this._reattachColumns(id);\n                }, this)).on('delete_node.jstree', $.proxy(function (e, data) {\n                    if (data.node.id !== undefined) {\n                        var grid = this.gridWrapper, removeNodes = [data.node.id], i;\n                        if (data.node && data.node.children_d) {\n                            removeNodes = removeNodes.concat(data.node.children_d);\n                        }\n                        findDataCell(this.uniq, removeNodes, this._gridSettings.gridcols).remove();\n                    }\n                }, this)).on('show_node.jstree', $.proxy(function (e, data) {\n                    this._hideOrShowTree(data.node, false);\n                }, this)).on('hide_node.jstree', $.proxy(function (e, data) {\n                    this._hideOrShowTree(data.node, true);\n                }, this)).on('close_node.jstree', $.proxy(function (e, data) {\n                    this._hide_grid(data.node);\n                }, this)).on('open_node.jstree', $.proxy(function (e, data) {\n                }, this)).on('load_node.jstree', $.proxy(function (e, data) {\n                }, this)).on('loaded.jstree', $.proxy(function (e) {\n                    this._prepare_headers();\n                    this.element.trigger('loaded_grid.jstree');\n                }, this)).on('ready.jstree', $.proxy(function (e, data) {\n                    var anchorHeight = this.element.find(\"[class~='jstree-anchor']:first\").outerHeight(), q, cls = this.element.attr('class') || '';\n                    $('<style type=\"text/css\">div.jstree-grid-cell-root-' + this.rootid + ' {line-height: ' + anchorHeight + 'px; height: ' + anchorHeight + 'px;}</style>').appendTo('head');\n                    q = cls.split(/\\s+/).map(function (i) {\n                        var match = i.match(/^jstree(-|$)/);\n                        return match ? '' : i;\n                    });\n                    this.gridWrapper.addClass(q.join(' '));\n                }, this)).on('move_node.jstree', $.proxy(function (e, data) {\n                    var node = data.new_instance.element;\n                    node.find('li > a').each($.proxy(function (i, elm) {\n                    }, this));\n                }, this)).on('hover_node.jstree', $.proxy(function (node, selected, event) {\n                    var id = selected.node.id;\n                    if (this._hover_node !== null && this._hover_node !== undefined) {\n                        findDataCell(this.uniq, this._hover_node, this._gridSettings.gridcols).removeClass('jstree-hovered');\n                    }\n                    this._hover_node = id;\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).addClass('jstree-hovered');\n                }, this)).on('dehover_node.jstree', $.proxy(function (node, selected, event) {\n                    var id = selected.node.id;\n                    this._hover_node = null;\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).removeClass('jstree-hovered');\n                }, this)).on('select_node.jstree', $.proxy(function (node, selected, event) {\n                    var id = selected.node.id;\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).addClass('jstree-clicked');\n                    this.get_node(selected.node.id, true).children('div.jstree-grid-cell').addClass('jstree-clicked');\n                }, this)).on('deselect_node.jstree', $.proxy(function (node, selected, event) {\n                    var id = selected.node.id;\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).removeClass('jstree-clicked');\n                }, this)).on('deselect_all.jstree', $.proxy(function (node, selected, event) {\n                    var ids = selected.node || [], i;\n                    findDataCell(this.uniq, ids, this._gridSettings.gridcols).removeClass('jstree-clicked');\n                }, this)).on('search.jstree', $.proxy(function (e, data) {\n                    var grid = this.gridWrapper, that = this, nodesToShow, startTime = new Date().getTime(), ids = getIds(data.nodes.filter('.jstree-node')), endTime;\n                    this.holdingCells = {};\n                    if (data.nodes.length) {\n                        var id = _guid();\n                        var cells = grid.find('div.jstree-grid-cell-regular');\n                        this._detachColumns(id);\n                        if (this._data.search.som) {\n                            if (this._data.search.smc) {\n                                nodesToShow = data.nodes.add(data.nodes.find('.jstree-node'));\n                            }\n                            nodesToShow = (nodesToShow || data.nodes).add(data.nodes.parentsUntil('.jstree'));\n                            cells.hide();\n                            nodesToShow.filter('.jstree-node').each(function (i, node) {\n                                var id = node.id;\n                                if (id) {\n                                    that._prepare_grid(node);\n                                    for (var i = 0, len = that._gridSettings.gridcols.length; i < len; i++) {\n                                        if (i === that._gridSettings.treecol) {\n                                            continue;\n                                        }\n                                        findDataCell(that.uniq, id, that._gridSettings.gridcols[i], $(that._domManipulation.columns[i])).show();\n                                    }\n                                }\n                            });\n                        }\n                        for (var i = 0, len = this._gridSettings.gridcols.length; i < len; i++) {\n                            if (i === this._gridSettings.treecol) {\n                                continue;\n                            }\n                            findDataCell(that.uniq, ids, this._gridSettings.gridcols[i], $(this._domManipulation.columns[i])).addClass(SEARCHCLASS);\n                        }\n                        this._reattachColumns(id);\n                        endTime = new Date().getTime();\n                        this.element.trigger('search-complete.jstree-grid', [{ time: endTime - startTime }]);\n                    }\n                    return true;\n                }, this)).on('clear_search.jstree', $.proxy(function (e, data) {\n                    var grid = this.gridWrapper, ids = getIds(data.nodes.filter('.jstree-node'));\n                    grid.find('div.jstree-grid-cell').show();\n                    findDataCell(this.uniq, ids, this._gridSettings.gridcols).removeClass(SEARCHCLASS);\n                    return true;\n                }, this)).on('copy_node.jstree', function (e, data) {\n                    var newtree = data.new_instance, oldtree = data.old_instance, obj = newtree.get_node(data.node, true);\n                    copyData(oldtree, data.original, newtree, data.node, true);\n                    newtree._detachColumns(obj.id);\n                    newtree._prepare_grid(obj);\n                    newtree._reattachColumns(obj.id);\n                    return true;\n                }).on('show_ellipsis.jstree', $.proxy(function (e, data) {\n                    this.gridWrapper.find('.jstree-grid-cell').add('.jstree-grid-header', this.gridWrapper).addClass('jstree-grid-ellipsis');\n                    return true;\n                }, this)).on('hide_ellipsis.jstree', $.proxy(function (e, data) {\n                    this.gridWrapper.find('.jstree-grid-cell').add('.jstree-grid-header', this.gridWrapper).removeClass('jstree-grid-ellipsis');\n                    return true;\n                }, this));\n                if (this._gridSettings.isThemeroller) {\n                    this.element.on('select_node.jstree', $.proxy(function (e, data) {\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll('div').addClass('ui-state-active');\n                    }, this)).on('deselect_node.jstree deselect_all.jstree', $.proxy(function (e, data) {\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll('div').removeClass('ui-state-active');\n                    }, this)).on('hover_node.jstree', $.proxy(function (e, data) {\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll('div').addClass('ui-state-hover');\n                    }, this)).on('dehover_node.jstree', $.proxy(function (e, data) {\n                        data.rslt.obj.children(\"[class~='jstree-anchor']\").nextAll('div').removeClass('ui-state-hover');\n                    }, this));\n                }\n                if (this._gridSettings.stateful) {\n                    this.element.on('resize_column.jstree-grid', $.proxy(function (e, col, width) {\n                        localStorage['jstree-root-' + this.rootid + '-column-' + col] = width;\n                    }, this));\n                }\n            };\n            this.teardown = function () {\n                var gw = this.gridWrapper, container = this.element, gridparent = gw.parent();\n                container.detach();\n                gw.remove();\n                gridparent.append(container);\n                parent.teardown.call(this);\n            };\n            this._clean_grid = function (target, id) {\n                var grid = this.gridWrapper;\n                if (target) {\n                    findDataCell(this.uniq, id, this._gridSettings.gridcols).remove();\n                } else {\n                    grid.find('div.jstree-grid-cell-regular').remove();\n                }\n            };\n            this._prepare_headers = function () {\n                var header, i, col, _this = this, gs = this._gridSettings, cols = gs.columns || [], width, defaultWidth = gs.columnWidth, resizable = gs.resizable || false, cl, ccl, val, name, last, tr = gs.isThemeroller, classAdd = tr ? 'themeroller' : 'regular', puller, hasHeaders = false, gridparent = this.gridparent, rootid = this.rootid, conf = gs.defaultConf, coluuid, borPadWidth = 0, totalWidth = 0;\n                this.parent = gridparent;\n                this.colrefs = {};\n                for (var i = 0, len = cols.length; i < len; i++) {\n                    cl = cols[i].headerClass || '';\n                    ccl = cols[i].columnClass || '';\n                    val = cols[i].header || '';\n                    do {\n                        coluuid = String(Math.floor(Math.random() * 10000));\n                    } while (this.colrefs[coluuid] !== undefined);\n                    name = cols[i].value ? coluuid : 'text';\n                    this.colrefs[name] = cols[i];\n                    if (val) {\n                        hasHeaders = true;\n                    }\n                    if (gs.stateful && localStorage['jstree-root-' + rootid + '-column-' + i])\n                        width = localStorage['jstree-root-' + rootid + '-column-' + i];\n                    else\n                        width = cols[i].width || defaultWidth;\n                    var minWidth = cols[i].minWidth || width;\n                    var maxWidth = cols[i].maxWidth || width;\n                    borPadWidth = tr ? 1 + 6 : 2 + 8;\n                    if (width !== 'auto' && typeof width !== 'string') {\n                        width -= borPadWidth;\n                    }\n                    col = this.midWrapper.children('div.jstree-grid-column-' + i);\n                    last = $('<div></div>').css(conf).addClass('jstree-grid-div-' + this.uniq + '-' + i + ' ' + (tr ? 'ui-widget-header ' : '') + ' jstree-grid-header jstree-grid-header-cell jstree-grid-header-' + classAdd + ' ' + cl + ' ' + ccl).html(val);\n                    last.addClass((tr ? 'ui-widget-header ' : '') + 'jstree-grid-header jstree-grid-header-' + classAdd);\n                    if (this.settings.core.themes.ellipsis === true) {\n                        last.addClass('jstree-grid-ellipsis');\n                    }\n                    last.prependTo(col);\n                    last.attr(COL_DATA_ATTR, name);\n                    totalWidth += last.outerWidth();\n                    puller = $(\"<div class='jstree-grid-separator jstree-grid-separator-\" + classAdd + (tr ? ' ui-widget-header' : '') + (resizable ? ' jstree-grid-resizable-separator' : '') + \"'>&nbsp;</div>\").appendTo(last);\n                    col.width(width);\n                    col.css('min-width', minWidth);\n                    col.css('max-width', maxWidth);\n                }\n                last.addClass((tr ? 'ui-widget-header ' : '') + 'jstree-grid-header jstree-grid-header-last jstree-grid-header-' + classAdd);\n                if (cols[cols.length - 1].width === undefined) {\n                    totalWidth -= width;\n                    col.css({ width: 'auto' });\n                    last.addClass('jstree-grid-width-auto').next('.jstree-grid-separator').remove();\n                }\n                if (hasHeaders) {\n                    gs.header = header;\n                } else {\n                    $('div.jstree-grid-header').hide();\n                }\n                if (!this.bound && resizable) {\n                    this.bound = true;\n                    $(document).mouseup(function () {\n                        var ref, cols, width, headers, currentTree, colNum;\n                        if (isClickedSep) {\n                            colNum = toResize.prevAll('.jstree-grid-column').length;\n                            currentTree = toResize.closest('.jstree-grid-wrapper').find('.jstree');\n                            ref = $.jstree.reference(currentTree);\n                            cols = ref.settings.grid.columns;\n                            headers = toResize.parent().children('div.jstree-grid-column');\n                            if (isNaN(colNum) || colNum < 0) {\n                                ref._gridSettings.treeWidthDiff = currentTree.find('ins:eq(0)').width() + currentTree.find(\"[class~='jstree-anchor']:eq(0)\").width() - ref._gridSettings.columns[0].width;\n                            }\n                            width = ref._gridSettings.columns[colNum].width = parseFloat(toResize.css('width'));\n                            isClickedSep = false;\n                            toResize = null;\n                            currentTree.trigger('resize_column.jstree-grid', [\n                                colNum,\n                                width\n                            ]);\n                        }\n                    }).mousemove(function (e) {\n                        if (isClickedSep) {\n                            newMouseX = e.pageX;\n                            var diff = newMouseX - oldMouseX, oldPrevHeaderInner, oldPrevColWidth, newPrevColWidth;\n                            if (diff !== 0) {\n                                oldPrevHeaderInner = toResize.width();\n                                oldPrevColWidth = parseFloat(toResize.css('width'));\n                                if (!oldPrevColWidth) {\n                                    oldPrevColWidth = toResize.innerWidth();\n                                }\n                                diff = diff < 0 ? Math.max(diff, -oldPrevHeaderInner) : diff;\n                                newPrevColWidth = oldPrevColWidth + diff;\n                                if ((diff > 0 || oldPrevHeaderInner > 0) && newPrevColWidth > MINCOLWIDTH) {\n                                    toResize.width(newPrevColWidth + 'px');\n                                    toResize.css('min-width', newPrevColWidth + 'px');\n                                    toResize.css('max-width', newPrevColWidth + 'px');\n                                    oldMouseX = newMouseX;\n                                }\n                            }\n                        }\n                    });\n                    this.gridWrapper.on('selectstart', '.jstree-grid-resizable-separator', function () {\n                        return false;\n                    }).on('mousedown', '.jstree-grid-resizable-separator', function (e) {\n                        isClickedSep = true;\n                        oldMouseX = e.pageX;\n                        toResize = $(this).closest('div.jstree-grid-column');\n                        return false;\n                    }).on('dblclick', '.jstree-grid-resizable-separator', function (e) {\n                        var clickedSep = $(this), col = clickedSep.closest('div.jstree-grid-column'), oldPrevColWidth = parseFloat(col.css('width')), newWidth = 0, diff, colNum = col.prevAll('.jstree-grid-column').length, oldPrevHeaderInner = col.width(), newPrevColWidth;\n                        col.find('.jstree-grid-cell').each(function () {\n                            var item = $(this), width;\n                            item.css('position', 'absolute');\n                            item.css('width', 'auto');\n                            width = item.outerWidth();\n                            item.css('position', 'relative');\n                            if (width > newWidth) {\n                                newWidth = width;\n                            }\n                        });\n                        diff = newWidth - oldPrevColWidth;\n                        diff = diff < 0 ? Math.max(diff, -oldPrevHeaderInner) : diff;\n                        newPrevColWidth = oldPrevColWidth + diff + 'px';\n                        col.width(newPrevColWidth);\n                        col.css('min-width', newPrevColWidth);\n                        col.css('max-width', newPrevColWidth);\n                        $(this).closest('.jstree-grid-wrapper').find('.jstree').trigger('resize_column.jstree-grid', [\n                            colNum,\n                            newPrevColWidth\n                        ]);\n                    }).on('click', '.jstree-grid-separator', function (e) {\n                        e.stopPropagation();\n                    });\n                }\n                this.gridWrapper.on('click', '.jstree-grid-header-cell', function (e) {\n                    if (!_this.sort) {\n                        return;\n                    }\n                    var name = $(this).attr(COL_DATA_ATTR);\n                    var symbol;\n                    if (gs.sortOrder === name && gs.sortAsc === true) {\n                        gs.sortAsc = false;\n                        symbol = '&darr;';\n                    } else {\n                        gs.sortOrder = name;\n                        gs.sortAsc = true;\n                        symbol = '&uarr;';\n                    }\n                    $(this.closest('.jstree-grid-wrapper')).find('.jstree-grid-sort-icon').remove();\n                    $('<span></span>').addClass('jstree-grid-sort-icon').appendTo($(this)).html(symbol);\n                    var rootNode = _this.get_node('#');\n                    _this.sort(rootNode, true);\n                    _this.redraw_node(rootNode, true);\n                });\n            };\n            this._domManipulation = null;\n            function _guid() {\n                function s4() {\n                    return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);\n                }\n                return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n            }\n            this._detachColumns = function (id) {\n                if (this._domManipulation == null) {\n                    var cols = this._gridSettings.columns || [], treecol = this._gridSettings.treecol, mw = this.midWrapper;\n                    this._domManipulation = {\n                        id: id,\n                        columns: {}\n                    };\n                    for (var i = 0, len = cols.length; i < len; i++) {\n                        this._domManipulation.columns[i] = mw.children('.jstree-grid-column-' + i)[0];\n                        this._domManipulation.columns[i].parentNode.removeChild(this._domManipulation.columns[i]);\n                    }\n                }\n                return this._domManipulation;\n            };\n            this._reattachColumns = function (id) {\n                if (this._domManipulation == null) {\n                    return false;\n                }\n                if (this._domManipulation.id === id) {\n                    var cols = this._gridSettings.columns || [], treecol = this._gridSettings.treecol, mw = this.midWrapper;\n                    for (var i = 0, len = cols.length; i < len; i++) {\n                        mw[0].appendChild(this._domManipulation.columns[i]);\n                    }\n                    this._domManipulation = null;\n                }\n                return true;\n            };\n            this.open_node = function (obj, callback, animation) {\n                var isArray = $.isArray(obj);\n                var node = null;\n                if (!isArray) {\n                    node = this.get_node(obj);\n                    if (node.id === '#') {\n                        return;\n                    }\n                }\n                var id = isArray ? _guid() : node.id;\n                this._detachColumns(id);\n                var ret = parent.open_node.call(this, obj, callback, animation);\n                this._reattachColumns(id);\n                return ret;\n            };\n            this.redraw_node = function (obj, deep, is_callback, force_render) {\n                var id = $.isArray(obj) ? _guid() : this.get_node(obj).id;\n                this._detachColumns(id);\n                obj = parent.redraw_node.call(this, obj, deep, is_callback, force_render);\n                if (obj) {\n                    this._prepare_grid(obj);\n                }\n                this._reattachColumns(id);\n                return obj;\n            };\n            this.refresh = function () {\n                this._clean_grid();\n                return parent.refresh.apply(this, arguments);\n            };\n            this.set_id = function (obj, id) {\n                var old, uniq = this.uniq;\n                if (obj) {\n                    old = obj.id;\n                }\n                var result = parent.set_id.apply(this, arguments);\n                if (result) {\n                    if (old !== undefined) {\n                        var grid = this.gridWrapper, oldNodes = [old], i;\n                        if (obj && obj.children_d) {\n                            oldNodes = oldNodes.concat(obj.children_d);\n                        }\n                        findDataCell(uniq, oldNodes, this._gridSettings.gridcols).attr(NODE_DATA_ATTR, obj.id).removeClass(generateCellId(uniq, old)).addClass(generateCellId(uniq, obj.id)).each(function (i, node) {\n                            $(node).attr('id', generateCellId(uniq, obj.id) + (i + 1));\n                        });\n                    }\n                }\n                return result;\n            };\n            this._hideOrShowTree = function (node, hide) {\n                this._detachColumns(node.id);\n                this._hideOrShowNode(node, hide, this._gridSettings.columns || [], this._gridSettings.treecol);\n                this._reattachColumns(node.id);\n            };\n            this._hideOrShowNode = function (node, hide, cols, treecol) {\n                for (var i = 0, len = cols.length; i < len; i++) {\n                    if (i === treecol) {\n                        continue;\n                    }\n                    var cells = findDataCell(this.uniq, node.id, i, $(this._domManipulation.columns[i]));\n                    if (hide) {\n                        cells.addClass('jstree-grid-hidden');\n                    } else {\n                        cells.removeClass('jstree-grid-hidden');\n                    }\n                }\n                if (node.state.opened && node.children) {\n                    for (var i = 0, len = node.children.length; i < len; i++) {\n                        this._hideOrShowNode(this.get_node(node.children[i]), hide, cols, treecol);\n                    }\n                }\n            };\n            this._hide_grid = function (node) {\n                if (!node) {\n                    return true;\n                }\n                this._detachColumns(node.id);\n                var children = node.children ? node.children : [], cols = this._gridSettings.columns || [], treecol = this._gridSettings.treecol;\n                for (var i = 0, len = children.length; i < len; i++) {\n                    var child = this.get_node(children[i]);\n                    for (var j = 0, lenj = cols.length; j < lenj; j++) {\n                        if (j === treecol) {\n                            continue;\n                        }\n                        findDataCell(this.uniq, child.id, j, $(this._domManipulation.columns[j])).remove();\n                    }\n                    if (child.state.opened) {\n                        this._hide_grid(child);\n                    }\n                }\n                this._reattachColumns(node.id);\n            };\n            this.holdingCells = {};\n            this.getHoldingCells = function (obj, col, hc) {\n                if (obj.state.hidden || !obj.state.opened) {\n                    return $();\n                }\n                var ret = $(), children = obj.children || [], child, i, uniq = this.uniq;\n                for (i = 0; i < children.length; i++) {\n                    child = generateCellId(uniq, children[i]) + col;\n                    if (hc[child]) {\n                        ret = ret.add(hc[child]).add(this.getHoldingCells(this.get_node(children[i]), col, hc));\n                    }\n                }\n                return ret;\n            };\n            this._edit = function (obj, col, element) {\n                if (!obj) {\n                    return false;\n                }\n                if (!obj.data) {\n                    obj.data = {};\n                }\n                if (element) {\n                    element = $(element);\n                    if (element.prop('tagName').toLowerCase() === 'div') {\n                        element = element.children('span:first');\n                    }\n                } else {\n                    return false;\n                }\n                var rtl = this._data.core.rtl, w = this.element.width(), t = obj.data[col.value], h1 = $('<' + 'div />', {\n                        css: {\n                            'position': 'absolute',\n                            'top': '-200px',\n                            'left': rtl ? '0px' : '-1000px',\n                            'visibility': 'hidden'\n                        }\n                    }).appendTo('body'), h2 = $('<' + 'input />', {\n                        'value': t,\n                        'class': 'jstree-rename-input',\n                        'css': {\n                            'padding': '0',\n                            'border': '1px solid silver',\n                            'box-sizing': 'border-box',\n                            'display': 'inline-block',\n                            'height': this._data.core.li_height + 'px',\n                            'lineHeight': this._data.core.li_height + 'px',\n                            'width': '150px'\n                        },\n                        'blur': $.proxy(function () {\n                            var v = h2.val();\n                            if (v === '' || v === t) {\n                                v = t;\n                            } else {\n                                obj.data[col.value] = v;\n                                this.element.trigger('update_cell.jstree-grid', {\n                                    node: obj,\n                                    col: col.value,\n                                    value: v,\n                                    old: t\n                                });\n                                var id = _guid();\n                                this._detachColumns(id);\n                                this._prepare_grid(this.get_node(obj, true));\n                                this._reattachColumns(id);\n                            }\n                            h2.remove();\n                            element.show();\n                        }, this),\n                        'keydown': function (event) {\n                            var key = event.which;\n                            if (key === 27) {\n                                this.value = t;\n                            }\n                            if (key === 27 || key === 13 || key === 37 || key === 38 || key === 39 || key === 40 || key === 32) {\n                                event.stopImmediatePropagation();\n                            }\n                            if (key === 27 || key === 13) {\n                                event.preventDefault();\n                                this.blur();\n                            }\n                        },\n                        'click': function (e) {\n                            e.stopImmediatePropagation();\n                        },\n                        'mousedown': function (e) {\n                            e.stopImmediatePropagation();\n                        },\n                        'keyup': function (event) {\n                            h2.width(Math.min(h1.text('pW' + this.value).width(), w));\n                        },\n                        'keypress': function (event) {\n                            if (event.which === 13) {\n                                return false;\n                            }\n                        }\n                    }), fn = {\n                        fontFamily: element.css('fontFamily') || '',\n                        fontSize: element.css('fontSize') || '',\n                        fontWeight: element.css('fontWeight') || '',\n                        fontStyle: element.css('fontStyle') || '',\n                        fontStretch: element.css('fontStretch') || '',\n                        fontVariant: element.css('fontVariant') || '',\n                        letterSpacing: element.css('letterSpacing') || '',\n                        wordSpacing: element.css('wordSpacing') || ''\n                    };\n                element.hide();\n                element.parent().append(h2);\n                h2.css(fn).width(Math.min(h1.text('pW' + h2[0].value).width(), w))[0].select();\n            };\n            this.grid_hide_column = function (col) {\n                this.midWrapper.find('.jstree-grid-column-' + col).hide();\n            };\n            this.grid_show_column = function (col) {\n                this.midWrapper.find('.jstree-grid-column-' + col).show();\n            };\n            this._prepare_grid = function (obj) {\n                var gs = this._gridSettings, c = gs.treeClass, _this = this, t, cols = gs.columns || [], width, tr = gs.isThemeroller, uniq = this.uniq, treecol = gs.treecol, tree = this.element, rootid = this.rootid, classAdd = tr ? 'themeroller' : 'regular', img, objData = this.get_node(obj), defaultWidth = gs.columnWidth, conf = gs.defaultConf, cellClickHandler = function (tree, node, val, col, t) {\n                        return function (e) {\n                            var event = eventer.create('select_cell.jstree-grid');\n                            tree.trigger(event, [{\n                                    value: val,\n                                    column: col.header,\n                                    node: node,\n                                    grid: $(this),\n                                    sourceName: col.value\n                                }]);\n                            if (!event.isDefaultPrevented()) {\n                                node.children('.jstree-anchor').trigger('click.jstree', e);\n                            }\n                        };\n                    }, cellRightClickHandler = function (tree, node, val, col, t) {\n                        return function (e) {\n                            if (gs.gridcontextmenu) {\n                                e.preventDefault();\n                                menu.popup(this, {\n                                    'x': e.pageX,\n                                    'y': e.pageY\n                                }, gs.gridcontextmenu(_this, tree, node, val, col, t, e.target));\n                            }\n                        };\n                    }, hoverInHandler = function (node, jsTreeInstance) {\n                        return function () {\n                            jsTreeInstance.hover_node(node);\n                        };\n                    }, hoverOutHandler = function (node, jsTreeInstance) {\n                        return function () {\n                            jsTreeInstance.dehover_node(node);\n                        };\n                    }, i, val, cl, wcl, ccl, a, last, valClass, wideValClass, span, paddingleft, title, gridCellName, gridCellParentId, gridCellParent, gridCellPrev, gridCellPrevId, gridCellNext, gridCellNextId, gridCellChild, gridCellChildId, col, content, tmpWidth, mw = this.midWrapper, column, lid = objData.id, highlightSearch, isClicked, peers = this.get_node(objData.parent).children, pos = $.inArray(lid, peers), hc = this.holdingCells, rendered = false, closed;\n                t = $(obj);\n                a = t.children(\"[class~='jstree-anchor']\");\n                highlightSearch = a.hasClass(SEARCHCLASS);\n                isClicked = a.hasClass('jstree-clicked');\n                if (a.length === 1) {\n                    closed = !objData.state.opened;\n                    gridCellName = generateCellId(uniq, lid);\n                    gridCellParentId = objData.parent === '#' ? null : objData.parent;\n                    a.addClass(c);\n                    renderATitle(a, t, _this);\n                    last = a;\n                    gridCellPrevId = pos <= 0 ? objData.parent : findLastClosedNode(this, peers[pos - 1]);\n                    gridCellNextId = pos >= peers.length - 1 ? 'NULL' : peers[pos + 1];\n                    gridCellChildId = objData.children && objData.children.length > 0 ? objData.children[0] : 'NULL';\n                    var s = this.settings.grid;\n                    for (var i = 0, len = cols.length; i < len; i++) {\n                        if (treecol === i) {\n                            continue;\n                        }\n                        col = cols[i];\n                        column = this._domManipulation == null ? mw.children('div:eq(' + i + ')') : $(this._domManipulation.columns[i]);\n                        cl = col.cellClass || '';\n                        wcl = col.wideCellClass || '';\n                        ccl = col.columnClass || '';\n                        column.addClass(ccl);\n                        val = getCellData(col.value, objData);\n                        if (typeof col.format === 'function') {\n                            val = col.format(val);\n                        }\n                        if (col.images) {\n                            img = col.images[val] || col.images['default'];\n                            if (img) {\n                                content = img[0] === '*' ? '<span class=\"' + img.substr(1) + '\"></span>' : '<img src=\"' + img + '\">';\n                            }\n                        } else {\n                            content = val;\n                        }\n                        if (content === undefined || content === null || BLANKRE.test(content)) {\n                            content = '&nbsp;';\n                        }\n                        valClass = col.valueClass && objData.data !== null && objData.data !== undefined ? objData.data[col.valueClass] || '' : '';\n                        if (valClass && col.valueClassPrefix && col.valueClassPrefix !== '') {\n                            valClass = col.valueClassPrefix + valClass;\n                        }\n                        wideValClass = col.wideValueClass && objData.data !== null && objData.data !== undefined ? objData.data[col.wideValueClass] || '' : '';\n                        if (wideValClass && col.wideValueClassPrefix && col.wideValueClassPrefix !== '') {\n                            wideValClass = col.wideValueClassPrefix + wideValClass;\n                        }\n                        title = col.title && objData.data !== null && objData.data !== undefined ? objData.data[col.title] || '' : '';\n                        title = title.replace(htmlstripre, '');\n                        paddingleft = 7;\n                        width = col.width || defaultWidth;\n                        if (width !== 'auto') {\n                            width = tmpWidth || width - paddingleft;\n                        }\n                        last = findDataCell(uniq, lid, i, column);\n                        if (!last || last.length < 1) {\n                            last = $('<div></div>');\n                            $('<span></span>').appendTo(last);\n                            last.attr('id', gridCellName + i);\n                            last.addClass(gridCellName);\n                            last.attr(NODE_DATA_ATTR, lid);\n                            if (highlightSearch) {\n                                last.addClass(SEARCHCLASS);\n                            } else {\n                                last.removeClass(SEARCHCLASS);\n                            }\n                            if (isClicked) {\n                                last.addClass('jstree-clicked');\n                            } else {\n                                last.removeClass('jstree-clicked');\n                            }\n                            if (this.settings.core.themes.ellipsis === true && i !== treecol) {\n                                last.addClass('jstree-grid-ellipsis');\n                            }\n                        }\n                        if (objData.state.hidden) {\n                            last.addClass('jstree-grid-hidden');\n                        } else {\n                            last.removeClass('jstree-grid-hidden');\n                        }\n                        gridCellPrev = findDataCell(uniq, gridCellPrevId, i, column);\n                        gridCellNext = findDataCell(uniq, gridCellNextId, i, column);\n                        gridCellChild = findDataCell(uniq, gridCellChildId, i, column);\n                        gridCellParent = findDataCell(uniq, gridCellParentId, i, column);\n                        if (gridCellParentId) {\n                            if (gridCellParent && gridCellParent.length > 0) {\n                                if (gridCellPrev && gridCellPrev.length > 0) {\n                                    last.insertAfter(gridCellPrev);\n                                } else if (gridCellChild && gridCellChild.length > 0) {\n                                    last.insertBefore(gridCellChild);\n                                } else if (gridCellNext && gridCellNext.length > 0) {\n                                    last.insertBefore(gridCellNext);\n                                } else {\n                                    last.insertAfter(gridCellParent);\n                                }\n                                rendered = true;\n                            } else {\n                                rendered = false;\n                            }\n                            hc[gridCellName + i] = last;\n                        } else {\n                            if (gridCellPrev && gridCellPrev.length > 0) {\n                                last.insertAfter(gridCellPrev);\n                            } else if (gridCellChild && gridCellChild.length > 0) {\n                                last.insertBefore(gridCellChild);\n                            } else if (gridCellNext && gridCellNext.length > 0) {\n                                last.insertBefore(gridCellNext);\n                            } else {\n                                last.appendTo(column);\n                            }\n                            rendered = true;\n                        }\n                        if (rendered) {\n                            var toRen = this.getHoldingCells(objData, i, hc);\n                            last.after(toRen);\n                        }\n                        span = last.children('span');\n                        span.addClass(cl + ' ' + valClass).html(content);\n                        last = last.css(conf).addClass('jstree-grid-cell jstree-grid-cell-regular jstree-grid-cell-root-' + rootid + ' jstree-grid-cell-' + classAdd + ' ' + wcl + ' ' + wideValClass + (tr ? ' ui-state-default' : '')).addClass('jstree-grid-col-' + i).addClass('jstree-animated');\n                        last.click(cellClickHandler(tree, t, val, col, this));\n                        last.on('contextmenu', cellRightClickHandler(tree, t, val, col, this));\n                        last.hover(hoverInHandler(t, this), hoverOutHandler(t, this));\n                        if (title) {\n                            span.attr('title', title);\n                        }\n                        tree.trigger('render_cell.jstree-grid', [{\n                                value: val,\n                                column: col.header,\n                                node: t,\n                                sourceName: col.value\n                            }]);\n                    }\n                    last.addClass('jstree-grid-cell-last' + (tr ? ' ui-state-default' : ''));\n                    if (cols[cols.length - 1].width === undefined) {\n                        last.addClass('jstree-grid-width-auto').next('.jstree-grid-separator').remove();\n                    }\n                }\n                this.element.css({ 'overflow-y': 'auto !important' });\n            };\n            this.holdingCells = {};\n        };\n        return $;\n    });\n    function __isEmptyObject(obj) {\n        var attr;\n        for (attr in obj)\n            return !1;\n        return !0;\n    }\n    function __isValidToReturn(obj) {\n        return typeof obj != 'object' || Array.isArray(obj) || !__isEmptyObject(obj);\n    }\n    if (__isValidToReturn(module.exports))\n        return module.exports;\n    else if (__isValidToReturn(exports))\n        return exports;\n});\ndefine(\"skylark-widgets-hierarchy/addons/treegrid\", function(){});\n\ndefine('skylark-widgets-hierarchy/addons/types',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.types) { return; }\r\n\r\n\t/**\r\n\t * An object storing all types as key value pairs, where the key is the type name and the value is an object that could contain following keys (all optional).\r\n\t *\r\n\t * * `max_children` the maximum number of immediate children this node type can have. Do not specify or set to `-1` for unlimited.\r\n\t * * `max_depth` the maximum number of nesting this node type can have. A value of `1` would mean that the node can have children, but no grandchildren. Do not specify or set to `-1` for unlimited.\r\n\t * * `valid_children` an array of node type strings, that nodes of this type can have as children. Do not specify or set to `-1` for no limits.\r\n\t * * `icon` a string - can be a path to an icon or a className, if using an image that is in the current directory use a `./` prefix, otherwise it will be detected as a class. Omit to use the default icon from your theme.\r\n\t * * `li_attr` an object of values which will be used to add HTML attributes on the resulting LI DOM node (merged with the node's own data)\r\n\t * * `a_attr` an object of values which will be used to add HTML attributes on the resulting A DOM node (merged with the node's own data)\r\n\t *\r\n\t * There are two predefined types:\r\n\t *\r\n\t * * `#` represents the root of the tree, for example `max_children` would control the maximum number of root nodes.\r\n\t * * `default` represents the default node - any settings here will be applied to all nodes that do not have a type specified.\r\n\t *\r\n\t * @name $.jstree.defaults.types\r\n\t * @plugin types\r\n\t */\r\n\t$.jstree.defaults.types = {\r\n\t\t'default' : {}\r\n\t};\r\n\t$.jstree.defaults.types[$.jstree.root] = {};\r\n\r\n\t$.jstree.plugins.types = function (options, parent) {\r\n\t\tthis.init = function (el, options) {\r\n\t\t\tvar i, j;\r\n\t\t\tif(options && options.types && options.types['default']) {\r\n\t\t\t\tfor(i in options.types) {\r\n\t\t\t\t\tif(i !== \"default\" && i !== $.jstree.root && options.types.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tfor(j in options.types['default']) {\r\n\t\t\t\t\t\t\tif(options.types['default'].hasOwnProperty(j) && options.types[i][j] === undefined) {\r\n\t\t\t\t\t\t\t\toptions.types[i][j] = options.types['default'][j];\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tparent.init.call(this, el, options);\r\n\t\t\tthis._model.data[$.jstree.root].type = $.jstree.root;\r\n\t\t};\r\n\t\tthis.refresh = function (skip_loading, forget_state) {\r\n\t\t\tparent.refresh.call(this, skip_loading, forget_state);\r\n\t\t\tthis._model.data[$.jstree.root].type = $.jstree.root;\r\n\t\t};\r\n\t\tthis.bind = function () {\r\n\t\t\tthis.element\r\n\t\t\t\t.on('model.jstree', $.proxy(function (e, data) {\r\n\t\t\t\t\t\tvar m = this._model.data,\r\n\t\t\t\t\t\t\tdpc = data.nodes,\r\n\t\t\t\t\t\t\tt = this.settings.types,\r\n\t\t\t\t\t\t\ti, j, c = 'default', k;\r\n\t\t\t\t\t\tfor(i = 0, j = dpc.length; i < j; i++) {\r\n\t\t\t\t\t\t\tc = 'default';\r\n\t\t\t\t\t\t\tif(m[dpc[i]].original && m[dpc[i]].original.type && t[m[dpc[i]].original.type]) {\r\n\t\t\t\t\t\t\t\tc = m[dpc[i]].original.type;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(m[dpc[i]].data && m[dpc[i]].data.jstree && m[dpc[i]].data.jstree.type && t[m[dpc[i]].data.jstree.type]) {\r\n\t\t\t\t\t\t\t\tc = m[dpc[i]].data.jstree.type;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tm[dpc[i]].type = c;\r\n\t\t\t\t\t\t\tif(m[dpc[i]].icon === true && t[c].icon !== undefined) {\r\n\t\t\t\t\t\t\t\tm[dpc[i]].icon = t[c].icon;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(t[c].li_attr !== undefined && typeof t[c].li_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (k in t[c].li_attr) {\r\n\t\t\t\t\t\t\t\t\tif (t[c].li_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (m[dpc[i]].li_attr[k] === undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].li_attr[k] = t[c].li_attr[k];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].li_attr['class'] = t[c].li_attr['class'] + ' ' + m[dpc[i]].li_attr['class'];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(t[c].a_attr !== undefined && typeof t[c].a_attr === 'object') {\r\n\t\t\t\t\t\t\t\tfor (k in t[c].a_attr) {\r\n\t\t\t\t\t\t\t\t\tif (t[c].a_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (m[dpc[i]].a_attr[k] === undefined) {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr[k] = t[c].a_attr[k];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (k === 'href' && m[dpc[i]].a_attr[k] === '#') {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr['href'] = t[c].a_attr['href'];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\t\t\t\t\tm[dpc[i]].a_attr['class'] = t[c].a_attr['class'] + ' ' + m[dpc[i]].a_attr['class'];\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tm[$.jstree.root].type = $.jstree.root;\r\n\t\t\t\t\t}, this));\r\n\t\t\tparent.bind.call(this);\r\n\t\t};\r\n\t\tthis.get_json = function (obj, options, flat) {\r\n\t\t\tvar i, j,\r\n\t\t\t\tm = this._model.data,\r\n\t\t\t\topt = options ? $.extend(true, {}, options, {no_id:false}) : {},\r\n\t\t\t\ttmp = parent.get_json.call(this, obj, opt, flat);\r\n\t\t\tif(tmp === false) { return false; }\r\n\t\t\tif($.isArray(tmp)) {\r\n\t\t\t\tfor(i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\t\ttmp[i].type = tmp[i].id && m[tmp[i].id] && m[tmp[i].id].type ? m[tmp[i].id].type : \"default\";\r\n\t\t\t\t\tif(options && options.no_id) {\r\n\t\t\t\t\t\tdelete tmp[i].id;\r\n\t\t\t\t\t\tif(tmp[i].li_attr && tmp[i].li_attr.id) {\r\n\t\t\t\t\t\t\tdelete tmp[i].li_attr.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(tmp[i].a_attr && tmp[i].a_attr.id) {\r\n\t\t\t\t\t\t\tdelete tmp[i].a_attr.id;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\ttmp.type = tmp.id && m[tmp.id] && m[tmp.id].type ? m[tmp.id].type : \"default\";\r\n\t\t\t\tif(options && options.no_id) {\r\n\t\t\t\t\ttmp = this._delete_ids(tmp);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn tmp;\r\n\t\t};\r\n\t\tthis._delete_ids = function (tmp) {\r\n\t\t\tif($.isArray(tmp)) {\r\n\t\t\t\tfor(var i = 0, j = tmp.length; i < j; i++) {\r\n\t\t\t\t\ttmp[i] = this._delete_ids(tmp[i]);\r\n\t\t\t\t}\r\n\t\t\t\treturn tmp;\r\n\t\t\t}\r\n\t\t\tdelete tmp.id;\r\n\t\t\tif(tmp.li_attr && tmp.li_attr.id) {\r\n\t\t\t\tdelete tmp.li_attr.id;\r\n\t\t\t}\r\n\t\t\tif(tmp.a_attr && tmp.a_attr.id) {\r\n\t\t\t\tdelete tmp.a_attr.id;\r\n\t\t\t}\r\n\t\t\tif(tmp.children && $.isArray(tmp.children)) {\r\n\t\t\t\ttmp.children = this._delete_ids(tmp.children);\r\n\t\t\t}\r\n\t\t\treturn tmp;\r\n\t\t};\r\n\t\tthis.check = function (chk, obj, par, pos, more) {\r\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tpar = par && par.id ? par : this.get_node(par);\r\n\t\t\tvar m = obj && obj.id ? (more && more.origin ? more.origin : $.jstree.reference(obj.id)) : null, tmp, d, i, j;\r\n\t\t\tm = m && m._model && m._model.data ? m._model.data : null;\r\n\t\t\tswitch(chk) {\r\n\t\t\t\tcase \"create_node\":\r\n\t\t\t\tcase \"move_node\":\r\n\t\t\t\tcase \"copy_node\":\r\n\t\t\t\t\tif(chk !== 'move_node' || $.inArray(obj.id, par.children) === -1) {\r\n\t\t\t\t\t\ttmp = this.get_rules(par);\r\n\t\t\t\t\t\tif(tmp.max_children !== undefined && tmp.max_children !== -1 && tmp.max_children === par.children.length) {\r\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_01', 'reason' : 'max_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(tmp.valid_children !== undefined && tmp.valid_children !== -1 && $.inArray((obj.type || 'default'), tmp.valid_children) === -1) {\r\n\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_02', 'reason' : 'valid_children prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(m && obj.children_d && obj.parents) {\r\n\t\t\t\t\t\t\td = 0;\r\n\t\t\t\t\t\t\tfor(i = 0, j = obj.children_d.length; i < j; i++) {\r\n\t\t\t\t\t\t\t\td = Math.max(d, m[obj.children_d[i]].parents.length);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\td = d - obj.parents.length + 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(d <= 0 || d === undefined) { d = 1; }\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\tif(tmp.max_depth !== undefined && tmp.max_depth !== -1 && tmp.max_depth < d) {\r\n\t\t\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'types', 'id' : 'types_03', 'reason' : 'max_depth prevents function: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tpar = this.get_node(par.parent);\r\n\t\t\t\t\t\t\ttmp = this.get_rules(par);\r\n\t\t\t\t\t\t\td++;\r\n\t\t\t\t\t\t} while(par);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to retrieve the type settings object for a node\r\n\t\t * @name get_rules(obj)\r\n\t\t * @param {mixed} obj the node to find the rules for\r\n\t\t * @return {Object}\r\n\t\t * @plugin types\r\n\t\t */\r\n\t\tthis.get_rules = function (obj) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!obj) { return false; }\r\n\t\t\tvar tmp = this.get_type(obj, true);\r\n\t\t\tif(tmp.max_depth === undefined) { tmp.max_depth = -1; }\r\n\t\t\tif(tmp.max_children === undefined) { tmp.max_children = -1; }\r\n\t\t\tif(tmp.valid_children === undefined) { tmp.valid_children = -1; }\r\n\t\t\treturn tmp;\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to retrieve the type string or settings object for a node\r\n\t\t * @name get_type(obj [, rules])\r\n\t\t * @param {mixed} obj the node to find the rules for\r\n\t\t * @param {Boolean} rules if set to `true` instead of a string the settings object will be returned\r\n\t\t * @return {String|Object}\r\n\t\t * @plugin types\r\n\t\t */\r\n\t\tthis.get_type = function (obj, rules) {\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\treturn (!obj) ? false : ( rules ? $.extend({ 'type' : obj.type }, this.settings.types[obj.type]) : obj.type);\r\n\t\t};\r\n\t\t/**\r\n\t\t * used to change a node's type\r\n\t\t * @name set_type(obj, type)\r\n\t\t * @param {mixed} obj the node to change\r\n\t\t * @param {String} type the new type\r\n\t\t * @plugin types\r\n\t\t */\r\n\t\tthis.set_type = function (obj, type) {\r\n\t\t\tvar m = this._model.data, t, t1, t2, old_type, old_icon, k, d, a;\r\n\t\t\tif($.isArray(obj)) {\r\n\t\t\t\tobj = obj.slice();\r\n\t\t\t\tfor(t1 = 0, t2 = obj.length; t1 < t2; t1++) {\r\n\t\t\t\t\tthis.set_type(obj[t1], type);\r\n\t\t\t\t}\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t\tt = this.settings.types;\r\n\t\t\tobj = this.get_node(obj);\r\n\t\t\tif(!t[type] || !obj) { return false; }\r\n\t\t\td = this.get_node(obj, true);\r\n\t\t\tif (d && d.length) {\r\n\t\t\t\ta = d.children('.jstree-anchor');\r\n\t\t\t}\r\n\t\t\told_type = obj.type;\r\n\t\t\told_icon = this.get_icon(obj);\r\n\t\t\tobj.type = type;\r\n\t\t\tif(old_icon === true || !t[old_type] || (t[old_type].icon !== undefined && old_icon === t[old_type].icon)) {\r\n\t\t\t\tthis.set_icon(obj, t[type].icon !== undefined ? t[type].icon : true);\r\n\t\t\t}\r\n\r\n\t\t\t// remove old type props\r\n\t\t\tif(t[old_type] && t[old_type].li_attr !== undefined && typeof t[old_type].li_attr === 'object') {\r\n\t\t\t\tfor (k in t[old_type].li_attr) {\r\n\t\t\t\t\tif (t[old_type].li_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr['class'] = (m[obj.id].li_attr['class'] || '').replace(t[old_type].li_attr[k], '');\r\n\t\t\t\t\t\t\tif (d) { d.removeClass(t[old_type].li_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].li_attr[k] === t[old_type].li_attr[k]) {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr[k] = null;\r\n\t\t\t\t\t\t\tif (d) { d.removeAttr(k); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(t[old_type] && t[old_type].a_attr !== undefined && typeof t[old_type].a_attr === 'object') {\r\n\t\t\t\tfor (k in t[old_type].a_attr) {\r\n\t\t\t\t\tif (t[old_type].a_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr['class'] = (m[obj.id].a_attr['class'] || '').replace(t[old_type].a_attr[k], '');\r\n\t\t\t\t\t\t\tif (a) { a.removeClass(t[old_type].a_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].a_attr[k] === t[old_type].a_attr[k]) {\r\n\t\t\t\t\t\t\tif (k === 'href') {\r\n\t\t\t\t\t\t\t\tm[obj.id].a_attr[k] = '#';\r\n\t\t\t\t\t\t\t\tif (a) { a.attr('href', '#'); }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tdelete m[obj.id].a_attr[k];\r\n\t\t\t\t\t\t\t\tif (a) { a.removeAttr(k); }\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// add new props\r\n\t\t\tif(t[type].li_attr !== undefined && typeof t[type].li_attr === 'object') {\r\n\t\t\t\tfor (k in t[type].li_attr) {\r\n\t\t\t\t\tif (t[type].li_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].li_attr[k] === undefined) {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr[k] = t[type].li_attr[k];\r\n\t\t\t\t\t\t\tif (d) {\r\n\t\t\t\t\t\t\t\tif (k === 'class') {\r\n\t\t\t\t\t\t\t\t\td.addClass(t[type].li_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\td.attr(k, t[type].li_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].li_attr['class'] = t[type].li_attr[k] + ' ' + m[obj.id].li_attr['class'];\r\n\t\t\t\t\t\t\tif (d) { d.addClass(t[type].li_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(t[type].a_attr !== undefined && typeof t[type].a_attr === 'object') {\r\n\t\t\t\tfor (k in t[type].a_attr) {\r\n\t\t\t\t\tif (t[type].a_attr.hasOwnProperty(k)) {\r\n\t\t\t\t\t\tif (k === 'id') {\r\n\t\t\t\t\t\t\tcontinue;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (m[obj.id].a_attr[k] === undefined) {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr[k] = t[type].a_attr[k];\r\n\t\t\t\t\t\t\tif (a) {\r\n\t\t\t\t\t\t\t\tif (k === 'class') {\r\n\t\t\t\t\t\t\t\t\ta.addClass(t[type].a_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\t\ta.attr(k, t[type].a_attr[k]);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'href' && m[obj.id].a_attr[k] === '#') {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr['href'] = t[type].a_attr['href'];\r\n\t\t\t\t\t\t\tif (a) { a.attr('href', t[type].a_attr['href']); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if (k === 'class') {\r\n\t\t\t\t\t\t\tm[obj.id].a_attr['class'] = t[type].a_attr['class'] + ' ' + m[obj.id].a_attr['class'];\r\n\t\t\t\t\t\t\tif (a) { a.addClass(t[type].a_attr[k]); }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\t};\r\n\t// include the types plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"types\");\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/unique',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.unique) { return; }\r\n\r\n\t/**\r\n\t * stores all defaults for the unique plugin\r\n\t * @name $.jstree.defaults.unique\r\n\t * @plugin unique\r\n\t */\r\n\t$.jstree.defaults.unique = {\r\n\t\t/**\r\n\t\t * Indicates if the comparison should be case sensitive. Default is `false`.\r\n\t\t * @name $.jstree.defaults.unique.case_sensitive\r\n\t\t * @plugin unique\r\n\t\t */\r\n\t\tcase_sensitive : false,\r\n\t\t/**\r\n\t\t * Indicates if white space should be trimmed before the comparison. Default is `false`.\r\n\t\t * @name $.jstree.defaults.unique.trim_whitespace\r\n\t\t * @plugin unique\r\n\t\t */\r\n\t\ttrim_whitespace : false,\r\n\t\t/**\r\n\t\t * A callback executed in the instance's scope when a new node is created and the name is already taken, the two arguments are the conflicting name and the counter. The default will produce results like `New node (2)`.\r\n\t\t * @name $.jstree.defaults.unique.duplicate\r\n\t\t * @plugin unique\r\n\t\t */\r\n\t\tduplicate : function (name, counter) {\r\n\t\t\treturn name + ' (' + counter + ')';\r\n\t\t}\r\n\t};\r\n\r\n\t$.jstree.plugins.unique = function (options, parent) {\r\n\t\tthis.check = function (chk, obj, par, pos, more) {\r\n\t\t\tif(parent.check.call(this, chk, obj, par, pos, more) === false) { return false; }\r\n\t\t\tobj = obj && obj.id ? obj : this.get_node(obj);\r\n\t\t\tpar = par && par.id ? par : this.get_node(par);\r\n\t\t\tif(!par || !par.children) { return true; }\r\n\t\t\tvar n = chk === \"rename_node\" ? pos : obj.text,\r\n\t\t\t\tc = [],\r\n\t\t\t\ts = this.settings.unique.case_sensitive,\r\n\t\t\t\tw = this.settings.unique.trim_whitespace,\r\n\t\t\t\tm = this._model.data, i, j, t;\r\n\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\tt = m[par.children[i]].text;\r\n\t\t\t\tif (!s) {\r\n\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t\tif (w) {\r\n\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t}\r\n\t\t\t\tc.push(t);\r\n\t\t\t}\r\n\t\t\tif(!s) { n = n.toLowerCase(); }\r\n\t\t\tif (w) { n = n.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, ''); }\r\n\t\t\tswitch(chk) {\r\n\t\t\t\tcase \"delete_node\":\r\n\t\t\t\t\treturn true;\r\n\t\t\t\tcase \"rename_node\":\r\n\t\t\t\t\tt = obj.text || '';\r\n\t\t\t\t\tif (!s) {\r\n\t\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w) {\r\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti = ($.inArray(n, c) === -1 || (obj.text && t === n));\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_01', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t\tcase \"create_node\":\r\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_04', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t\tcase \"copy_node\":\r\n\t\t\t\t\ti = ($.inArray(n, c) === -1);\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_02', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t\tcase \"move_node\":\r\n\t\t\t\t\ti = ( (obj.parent === par.id && (!more || !more.is_multi)) || $.inArray(n, c) === -1);\r\n\t\t\t\t\tif(!i) {\r\n\t\t\t\t\t\tthis._data.core.last_error = { 'error' : 'check', 'plugin' : 'unique', 'id' : 'unique_03', 'reason' : 'Child with name ' + n + ' already exists. Preventing: ' + chk, 'data' : JSON.stringify({ 'chk' : chk, 'pos' : pos, 'obj' : obj && obj.id ? obj.id : false, 'par' : par && par.id ? par.id : false }) };\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t};\r\n\t\tthis.create_node = function (par, node, pos, callback, is_loaded) {\r\n\t\t\tif(!node || node.text === undefined) {\r\n\t\t\t\tif(par === null) {\r\n\t\t\t\t\tpar = $.jstree.root;\r\n\t\t\t\t}\r\n\t\t\t\tpar = this.get_node(par);\r\n\t\t\t\tif(!par) {\r\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\r\n\t\t\t\t}\r\n\t\t\t\tpos = pos === undefined ? \"last\" : pos;\r\n\t\t\t\tif(!pos.toString().match(/^(before|after)$/) && !is_loaded && !this.is_loaded(par)) {\r\n\t\t\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\r\n\t\t\t\t}\r\n\t\t\t\tif(!node) { node = {}; }\r\n\t\t\t\tvar tmp, n, dpc, i, j, m = this._model.data, s = this.settings.unique.case_sensitive, w = this.settings.unique.trim_whitespace, cb = this.settings.unique.duplicate, t;\r\n\t\t\t\tn = tmp = this.get_string('New node');\r\n\t\t\t\tdpc = [];\r\n\t\t\t\tfor(i = 0, j = par.children.length; i < j; i++) {\r\n\t\t\t\t\tt = m[par.children[i]].text;\r\n\t\t\t\t\tif (!s) {\r\n\t\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w) {\r\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdpc.push(t);\r\n\t\t\t\t}\r\n\t\t\t\ti = 1;\r\n\t\t\t\tt = n;\r\n\t\t\t\tif (!s) {\r\n\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t}\r\n\t\t\t\tif (w) {\r\n\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t}\r\n\t\t\t\twhile($.inArray(t, dpc) !== -1) {\r\n\t\t\t\t\tn = cb.call(this, tmp, (++i)).toString();\r\n\t\t\t\t\tt = n;\r\n\t\t\t\t\tif (!s) {\r\n\t\t\t\t\t\tt = t.toLowerCase();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (w) {\r\n\t\t\t\t\t\tt = t.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tnode.text = n;\r\n\t\t\t}\r\n\t\t\treturn parent.create_node.call(this, par, node, pos, callback, is_loaded);\r\n\t\t};\r\n\t};\r\n\r\n\t// include the unique plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"unique\");\r\n\treturn $;\r\n\t\r\n});\r\n\ndefine('skylark-widgets-hierarchy/addons/wholerow',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx-browser\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-geom\",\r\n  \"skylark-domx-query\",\r\n  \"Hierarchy\"\r\n],function(langx,browser,eventer,noder,geom,$,jstree){\r\n\t\"use strict\";\r\n\r\n\tif($.jstree.plugins.wholerow) { return; }\r\n\r\n\tvar div = document.createElement('DIV');\r\n\tdiv.setAttribute('unselectable','on');\r\n\tdiv.setAttribute('role','presentation');\r\n\tdiv.className = 'jstree-wholerow';\r\n\tdiv.innerHTML = '&#160;';\r\n\t$.jstree.plugins.wholerow = function (options, parent) {\r\n\t\tthis.bind = function () {\r\n\t\t\tparent.bind.call(this);\r\n\r\n\t\t\tthis.element\r\n\t\t\t\t.on('ready.jstree set_state.jstree', $.proxy(function () {\r\n\t\t\t\t\t\tthis.hide_dots();\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"init.jstree loading.jstree ready.jstree\", $.proxy(function () {\r\n\t\t\t\t\t\t//div.style.height = this._data.core.li_height + 'px';\r\n\t\t\t\t\t\tthis.get_container_ul().addClass('jstree-wholerow-ul');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"deselect_all.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"changed.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.element.find('.jstree-wholerow-clicked').removeClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t\tvar tmp = false, i, j;\r\n\t\t\t\t\t\tfor(i = 0, j = data.selected.length; i < j; i++) {\r\n\t\t\t\t\t\t\ttmp = this.get_node(data.selected[i], true);\r\n\t\t\t\t\t\t\tif(tmp && tmp.length) {\r\n\t\t\t\t\t\t\t\ttmp.children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"open_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tthis.get_node(data.node, true).find('.jstree-clicked').parent().children('.jstree-wholerow').addClass('jstree-wholerow-clicked');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"hover_node.jstree dehover_node.jstree\", $.proxy(function (e, data) {\r\n\t\t\t\t\t\tif(e.type === \"hover_node\" && this.is_disabled(data.node)) { return; }\r\n\t\t\t\t\t\tthis.get_node(data.node, true).children('.jstree-wholerow')[e.type === \"hover_node\"?\"addClass\":\"removeClass\"]('jstree-wholerow-hovered');\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"contextmenu.jstree\", \".jstree-wholerow\", $.proxy(function (e) {\r\n\t\t\t\t\t\tif (this._data.contextmenu) {\r\n\t\t\t\t\t\t\te.preventDefault();\r\n\t\t\t\t\t\t\tvar tmp = $.Event('contextmenu', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey, pageX : e.pageX, pageY : e.pageY });\r\n\t\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t/*!\r\n\t\t\t\t.on(\"mousedown.jstree touchstart.jstree\", \".jstree-wholerow\", function (e) {\r\n\t\t\t\t\t\tif(e.target === e.currentTarget) {\r\n\t\t\t\t\t\t\tvar a = $(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\");\r\n\t\t\t\t\t\t\te.target = a[0];\r\n\t\t\t\t\t\t\ta.trigger(e);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t*/\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-wholerow\", function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\r\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"dblclick.jstree\", \".jstree-wholerow\", function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tvar tmp = $.Event('dblclick', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\r\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\r\n\t\t\t\t\t})\r\n\t\t\t\t.on(\"click.jstree\", \".jstree-leaf > .jstree-ocl\", $.proxy(function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tvar tmp = $.Event('click', { metaKey : e.metaKey, ctrlKey : e.ctrlKey, altKey : e.altKey, shiftKey : e.shiftKey });\r\n\t\t\t\t\t\t$(e.currentTarget).closest(\".jstree-node\").children(\".jstree-anchor\").first().trigger(tmp).focus();\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"mouseover.jstree\", \".jstree-wholerow, .jstree-icon\", $.proxy(function (e) {\r\n\t\t\t\t\t\te.stopImmediatePropagation();\r\n\t\t\t\t\t\tif(!this.is_disabled(e.currentTarget)) {\r\n\t\t\t\t\t\t\tthis.hover_node(e.currentTarget);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}, this))\r\n\t\t\t\t.on(\"mouseleave.jstree\", \".jstree-node\", $.proxy(function (e) {\r\n\t\t\t\t\t\tthis.dehover_node(e.currentTarget);\r\n\t\t\t\t\t}, this));\r\n\t\t};\r\n\t\tthis.teardown = function () {\r\n\t\t\tif(this.settings.wholerow) {\r\n\t\t\t\tthis.element.find(\".jstree-wholerow\").remove();\r\n\t\t\t}\r\n\t\t\tparent.teardown.call(this);\r\n\t\t};\r\n\t\tthis.redraw_node = function(obj, deep, callback, force_render) {\r\n\t\t\tobj = parent.redraw_node.apply(this, arguments);\r\n\t\t\tif(obj) {\r\n\t\t\t\tvar tmp = div.cloneNode(true);\r\n\t\t\t\t//tmp.style.height = this._data.core.li_height + 'px';\r\n\t\t\t\tif($.inArray(obj.id, this._data.core.selected) !== -1) { tmp.className += ' jstree-wholerow-clicked'; }\r\n\t\t\t\tif(this._data.core.focused && this._data.core.focused === obj.id) { tmp.className += ' jstree-wholerow-hovered'; }\r\n\t\t\t\tobj.insertBefore(tmp, obj.childNodes[0]);\r\n\t\t\t}\r\n\t\t\treturn obj;\r\n\t\t};\r\n\t};\r\n\t// include the wholerow plugin by default\r\n\t// $.jstree.defaults.plugins.push(\"wholerow\");\r\n\r\n\treturn $;\r\n\r\n});\r\n\ndefine('skylark-widgets-hierarchy/main',[\r\n    \"skylark-utils-dom/query\",\r\n    \"./Hierarchy\",\r\n    \"./addons/changed\",\r\n    \"./addons/checkbox\",\r\n    \"./addons/conditionalselect\",\r\n    \"./addons/contextmenu\",\r\n    \"./addons/dnd\",\r\n    \"./addons/massload\",\r\n    \"./addons/search\",\r\n    \"./addons/sort\",\r\n    \"./addons/state\",\r\n    \"./addons/treegrid\",\r\n    \"./addons/types\",\r\n    \"./addons/unique\",\r\n    \"./addons/wholerow\"\r\n], function($) {\r\n    return $;\r\n});\ndefine('skylark-widgets-hierarchy', ['skylark-widgets-hierarchy/main'], function (main) { return main; });\n\n"]}